{"version":3,"file":"extension.js","mappings":"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","sources":["../external node-commonjs \"url\"",".././src/mumpsDebug.ts",".././src/mumpsGlobalProvider.ts",".././src/mumpsRoutineSorter.ts",".././src/mumpsDiagnosticsProvider.ts",".././node_modules/@vscode/debugadapter/lib/logger.js",".././src/extension.ts",".././src/mumpsConfigurationProvider.ts","../external node-commonjs \"net\"",".././src/mumpsLinter.ts",".././node_modules/@vscode/debugadapter/lib/loggingDebugSession.js",".././src/mumpsHighlighter.ts",".././node_modules/@vscode/debugadapter/lib/runDebugAdapter.js",".././node_modules/await-notify/index.js","../external commonjs \"vscode\"",".././src/language-definitions.ts","../external node-commonjs \"events\"",".././src/mumpsDefinitionProvider.ts",".././src/mumpsTokenData.ts",".././src/mumpsSignatureHelpProvider.ts",".././node_modules/@vscode/debugadapter/lib/protocol.js",".././src/mumpsParseDb.ts",".././src/mumpsConnect.ts",".././src/mumpsCompletionItemProvider.ts",".././node_modules/@vscode/debugadapter/lib/messages.js",".././src/mumpsReferenceProvider.ts",".././src/mumpsHoverProvider.ts",".././src/mumpsDocumenter.ts",".././node_modules/@vscode/debugadapter/lib/main.js",".././src/mumpsFormattingHelpProvider.ts",".././src/mumpsFoldingProvider.ts",".././src/mumpsEvalutableExpressionProvider.ts",".././node_modules/@vscode/debugadapter/lib/internalLogger.js",".././node_modules/@vscode/debugadapter/lib/handles.js",".././node_modules/@vscode/debugadapter/lib/debugSession.js",".././src/mumpsDocumentSymbolProvider.ts",".././src/mumpsLineParser.ts","../external node-commonjs \"fs\"",".././src/mumpsCompExp.ts","../external node-commonjs \"path\"","../external node-commonjs \"fs/promises\"",".././src/mumpsAutospace.ts",".././src/mumpsCodeActionProvider.ts","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["module.exports = require(\"url\");","/*\r\n\tImplementation of DebugProtocol-Server for GT.M, Yottadb by Jens Wulf\r\n\tbased on Mock-Debug by Microsoft Corp.\r\n\tLicense: LGPL\r\n*/\r\n\r\nimport {\r\n\tDebugSession,\r\n\tInitializedEvent, TerminatedEvent, StoppedEvent, BreakpointEvent, OutputEvent,\r\n\tThread, StackFrame, Scope, Source, Handles\r\n} from '@vscode/debugadapter';\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { basename } from 'path';\r\nimport { Subject } from 'await-notify';\r\nimport { MumpsConnect, MumpsBreakpoint, FilePosition, VariableType } from './mumpsConnect';\r\nimport * as vscode from 'vscode';\r\nimport { readFileSync } from 'fs';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport { setLocalRoutinesPath } from './extension';\r\nimport { MumpsGlobalProvider } from './mumpsGlobalProvider';\r\nconst MUMPSDIAGNOSTICS = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n/**\r\n * This interface describes the mumps-debug specific launch attributes\r\n * The schema for these attributes lives in the package.json of the mumps-debug extension.\r\n * The interface should always match this schema.\r\n */\r\ninterface LaunchRequestArguments extends DebugProtocol.LaunchRequestArguments {\r\n\t/** An absolute path to the \"program\" to debug. */\r\n\tprogram: string;\r\n\t/** Automatically stop target after launch. If not specified, target does not stop. */\r\n\tstopOnEntry?: boolean;\r\n\t/** enable logging the Debug Adapter Protocol */\r\n\ttrace?: boolean;\r\n\t/** The Port on which MDEBUG listens */\r\n\tport: number;\r\n\t/**The Hostname of the MDEBUG-Server */\r\n\thostname: string;\r\n\t/**Map Local-Routines to Host-Routines */\r\n\tlocalRoutinesPath: string;\r\n\t/**Flag if internal Database for M-Labels should be build up */\r\n\tbuildLabelDb?: boolean;\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\nexport default class MumpsDebugSession extends DebugSession {\r\n\r\n\t// we don't support multiple threads, so we can use a hardcoded ID for the default thread\r\n\tprivate static THREAD_ID = 1;\r\n\r\n\tprivate _variableHandles = new Handles<string>();\r\n\tprivate _variableBases = {};\r\n\r\n\tprivate _configurationDone = new Subject();\r\n\r\n\tprivate _program: string;\r\n\r\n\tprivate _mconnect: MumpsConnect;\r\n\tprivate _localScope = this._variableHandles.create(\"~local|0\");\r\n\tprivate _systemScope = this._variableHandles.create(\"~system\");\r\n\t/**\r\n\t * Creates a new debug adapter that is used for one debug session.\r\n\t * We configure the default implementation of a debug adapter here.\r\n\t */\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\r\n\t\t// this debugger uses zero-based lines and columns\r\n\t\tthis.setDebuggerLinesStartAt1(false);\r\n\t\tthis.setDebuggerColumnsStartAt1(false);\r\n\t\tthis._program = \"\";\r\n\t\tthis._mconnect = new MumpsConnect();\r\n\r\n\t\t// setup event handlers\r\n\t\tthis._mconnect.on('stopOnEntry', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('entry', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnStep', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('step', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnDataBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('data breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnException', (e: string, filePosition: FilePosition) => {\r\n\t\t\tvscode.debug.activeDebugConsole.append(`${filePosition.file}:${filePosition.line + 1}:1`);\r\n\t\t\tvscode.debug.activeDebugConsole.appendLine(' Error: ' + e);\r\n\t\t\tthis.sendEvent(new StoppedEvent('exception', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('breakpointValidated', (bp: MumpsBreakpoint) => {\r\n\t\t\tthis.sendEvent(new BreakpointEvent('changed', <DebugProtocol.Breakpoint>{ verified: bp.verified, id: bp.id }));\r\n\t\t});\r\n\t\tthis._mconnect.on('end', () => {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * The 'initialize' request is the first request called by the frontend\r\n\t * to interrogate the features the debug adapter provides.\r\n\t */\r\n\tprotected initializeRequest(response: DebugProtocol.InitializeResponse): void {\r\n\r\n\t\t// build and return the capabilities of this debug adapter:\r\n\t\tresponse.body = response.body || {};\r\n\r\n\t\t// the adapter implements the configurationDoneRequest.\r\n\t\tresponse.body.supportsConfigurationDoneRequest = true;\r\n\r\n\t\t// make VS Code to use 'evaluate' when hovering over source\r\n\t\tresponse.body.supportsEvaluateForHovers = true;\r\n\r\n\t\t// make VS Code to support data breakpoints\r\n\t\tresponse.body.supportsDataBreakpoints = false;\r\n\t\tresponse.body.supportsConditionalBreakpoints = true;\r\n\t\t// make VS Code to support completion in REPL\r\n\t\tresponse.body.supportsCompletionsRequest = false;\r\n\t\tresponse.body.completionTriggerCharacters = [\".\", \"[\"];\r\n\r\n\t\t// make VS Code to send cancelRequests\r\n\t\tresponse.body.supportsCancelRequest = false;\r\n\r\n\t\t// make VS Code send the breakpointLocations request\r\n\t\tresponse.body.supportsBreakpointLocationsRequest = true;\r\n\t\tresponse.body.supportsExceptionInfoRequest = true;\r\n\t\tresponse.body.supportsRestartRequest = true;\r\n\r\n\r\n\t\t// since this debug adapter can accept configuration requests like 'setBreakpoint' at any time,\r\n\t\t// we request them early by sending an 'initializeRequest' to the frontend.\r\n\t\t// The frontend will end the configuration sequence by calling 'configurationDone' request.\r\n\t\tthis.sendResponse(response);\r\n\t\tthis.sendEvent(new InitializedEvent());\r\n\t}\r\n\r\n\t/**\r\n\t * Called at the end of the configuration sequence.\r\n\t * Indicates that all breakpoints etc. have been sent to the DA and that the 'launch' can start.\r\n\t */\r\n\tprotected configurationDoneRequest(response: DebugProtocol.ConfigurationDoneResponse, args: DebugProtocol.ConfigurationDoneArguments): void {\r\n\t\tsuper.configurationDoneRequest(response, args);\r\n\t\tthis._configurationDone.notify();\r\n\t}\r\n\r\n\tprotected async launchRequest(response: DebugProtocol.LaunchResponse, args: LaunchRequestArguments) {\r\n\t\tawait this._configurationDone.wait(10000);\r\n\t\tsetLocalRoutinesPath(args.localRoutinesPath);\r\n\t\ttry {\r\n\t\t\tawait this._mconnect.init(args.hostname, args.port);\r\n\t\t\tif (vscode.window.activeTextEditor?.document) {\r\n\t\t\t\tconst diagnosticsProvider = new MumpsDiagnosticsProvider(MUMPSDIAGNOSTICS);\r\n\t\t\t\tdiagnosticsProvider.updateDiagnostics(vscode.window.activeTextEditor?.document);\r\n\t\t\t}\r\n\t\t\tMumpsGlobalProvider.setMconnect(this._mconnect);\r\n\t\t\tthis._program = args.program;\r\n\t\t\tthis._mconnect.start(args.program, !!args.stopOnEntry);\r\n\t\t\tthis.sendResponse(response);\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\t\t} catch (e) {\r\n\t\t\t//const errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent('Launch failed: Please start MDEBUG.m first.'));\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = 'Launch failed: Please start MDEBUG.m first.';\r\n\t\t\tthis.sendResponse(response);\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t}\r\n\t}\r\n\r\n\tprotected setBreakPointsRequest(response: DebugProtocol.SetBreakpointsResponse, args: DebugProtocol.SetBreakpointsArguments): void {\r\n\t\ttry {\r\n\t\t\tconst path = <string>args.source.path;\r\n\t\t\tthis._mconnect.clearBreakpoints(path);\r\n\t\t\tconst bpArgs = args.breakpoints ? args.breakpoints : [];\r\n\t\t\tconst actualBreakpoints = this._mconnect.setBreakPoint(path, bpArgs);\r\n\t\t\tresponse.body = {\r\n\t\t\t\tbreakpoints: actualBreakpoints\r\n\t\t\t};\r\n\t\t\tthis._mconnect.requestBreakpoints();\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error setting breakpoints: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = `Failed to set breakpoints: ${errorMessage}`;\r\n\t\t\tresponse.body = { breakpoints: [] };\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected threadsRequest(response: DebugProtocol.ThreadsResponse): void {\r\n\t\tresponse.body = {\r\n\t\t\tthreads: [\r\n\t\t\t\tnew Thread(MumpsDebugSession.THREAD_ID, \"thread 1\")\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stackTraceRequest(response: DebugProtocol.StackTraceResponse, args: DebugProtocol.StackTraceArguments): void {\r\n\t\ttry {\r\n\t\t\tconst startFrame = typeof args.startFrame === 'number' ? args.startFrame : 0;\r\n\t\t\tconst maxLevels = typeof args.levels === 'number' ? args.levels : 1000;\r\n\t\t\tconst endFrame = startFrame + maxLevels;\r\n\t\t\tconst stk = this._mconnect.stack(startFrame, endFrame);\r\n\t\t\tresponse.body = {\r\n\t\t\t\tstackFrames: stk.frames.map(f => new StackFrame(f.index, f.name, this.createSource(f.file), this.convertDebuggerLineToClient(f.line))),\r\n\t\t\t\ttotalFrames: stk.count\r\n\t\t\t};\r\n\t\t\tif (stk.count === 0 && stk.frames.length === 0) { // Ensure we check frames length too, as count might be total, not current\r\n\t\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t\t}\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error fetching stack trace: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = `Failed to retrieve stack trace: ${errorMessage}`;\r\n\t\t\tresponse.body = { stackFrames: [] };\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected scopesRequest(response: DebugProtocol.ScopesResponse): void {\r\n\t\tresponse.body = {\r\n\t\t\tscopes: [\r\n\t\t\t\tnew Scope(\"Local\", this._localScope, false),\r\n\t\t\t\tnew Scope(\"System\", this._systemScope, false),\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async variablesRequest(response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments) {\r\n\t\ttry {\r\n\t\t\tconst variables: DebugProtocol.Variable[] = [];\r\n\t\t\tlet insertVariable: DebugProtocol.Variable | undefined;\r\n\t\t\tconst varReference = args.variablesReference;\r\n\t\t\tconst varId = this._variableHandles.get(args.variablesReference);\r\n\t\t\tswitch (varReference) {\r\n\t\t\t\tcase this._systemScope: {\r\n\t\t\t\t\tconst varObject = this._mconnect.getVariables(VariableType.system);\r\n\t\t\t\t\tfor (const varname in varObject) {\r\n\t\t\t\t\t\tvariables.push({\r\n\t\t\t\t\t\t\tname: varname,\r\n\t\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\t\tvalue: varObject[varname],\r\n\t\t\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault: {\r\n\t\t\t\t\tconst varparts: string[] = varId.split(\"|\");\r\n\t\t\t\t\tconst indexCount: number = parseInt(varparts.pop() || \"0\");\r\n\t\t\t\t\tconst varBase = varparts.join(\"|\");\r\n\t\t\t\t\tconst varObject = this._mconnect.getVariables(VariableType.local);\r\n\t\t\t\t\tlet lastVar: VarData | undefined = undefined;\r\n\t\t\t\t\tlet lastRef = \"\";\r\n\t\t\t\t\tfor (const varname in varObject) {\r\n\t\t\t\t\t\tconst actualVar = MumpsDebugSession.varAnalyze(varname, varObject[varname]);\r\n\t\t\t\t\t\tif (lastVar === undefined) {\r\n\t\t\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// eslint-disable-next-line no-cond-assign\r\n\t\t\t\t\t\tif (insertVariable = this._checkVars(lastVar, actualVar, indexCount, varBase, lastRef)) {\r\n\t\t\t\t\t\t\tif (insertVariable.variablesReference !== 0) { lastRef = lastVar.bases[indexCount]; }\r\n\t\t\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (lastVar !== undefined) {\r\n\t\t\t\t\t\tconst dummyVar: VarData = { name: \"\", \"indexCount\": 0, \"bases\": [], \"content\": \"\" };\r\n\t\t\t\t\t\tconst insertVariable = this._checkVars(lastVar, dummyVar, indexCount, varBase, lastRef);\r\n\t\t\t\t\t\tif (insertVariable) {\r\n\t\t\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresponse.body = { variables };\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error fetching variables: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = `Failed to retrieve variables: ${errorMessage}`;\r\n\t\t\tresponse.body = { variables: [] };\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _checkVars(lastVar: VarData, actualVar: VarData, indexCount: number, varBase: string, lastRef: string): DebugProtocol.Variable | undefined {\r\n\t\tlet returnVar: DebugProtocol.Variable | undefined = undefined;\r\n\t\tlet actualReference = 0;\r\n\t\tif (indexCount === 0 || (lastVar.bases[indexCount - 1] === varBase && lastVar.indexCount > indexCount)) {\r\n\t\t\tif (lastVar.indexCount > indexCount + 1) {\r\n\t\t\t\tif (lastRef !== lastVar.bases[indexCount]) {\r\n\t\t\t\t\tlet name = lastVar.bases[indexCount];\r\n\t\t\t\t\tif (indexCount > 0) { name += \")\"; }\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturnVar = {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: 'undefined',\r\n\t\t\t\t\t\tvariablesReference: this._variableBases[lastVar.bases[indexCount]]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (lastVar.bases[indexCount] === actualVar.bases[indexCount]) {\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualReference = this._variableBases[lastVar.bases[indexCount]];\r\n\t\t\t\t}\r\n\t\t\t\treturnVar = {\r\n\t\t\t\t\tname: lastVar.name,\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: lastVar.content,\r\n\t\t\t\t\tvariablesReference: actualReference\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn returnVar;\r\n\t}\r\n\r\n\tprotected continueRequest(response: DebugProtocol.ContinueResponse): void {\r\n\t\ttry {\r\n\t\t\tthis._mconnect.continue();\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during continue: ${errorMessage}\\n`, 'stderr'));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected nextRequest(response: DebugProtocol.NextResponse): void {\r\n\t\ttry {\r\n\t\t\tthis._mconnect.step(\"OVER\");\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during next: ${errorMessage}\\n`, 'stderr'));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected stepInRequest(response: DebugProtocol.StepInResponse): void {\r\n\t\ttry {\r\n\t\t\tthis._mconnect.step(\"INTO\");\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during stepIn: ${errorMessage}\\n`, 'stderr'));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected stepOutRequest(response: DebugProtocol.StepOutResponse): void {\r\n\t\ttry {\r\n\t\t\tthis._mconnect.step(\"OUTOF\");\r\n\t\t\tthis.sendResponse(response);\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during stepOut: ${errorMessage}\\n`, 'stderr'));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected async evaluateRequest(response: DebugProtocol.EvaluateResponse, args: DebugProtocol.EvaluateArguments) {\r\n\t\ttry {\r\n\t\t\tif (args.context === \"hover\" || args.context === \"repl\") {\r\n\t\t\t\tconst varReply: VarData = await this._mconnect.getSingleVar(args.expression);\r\n\t\t\t\tresponse.body = {\r\n\t\t\t\t\tresult: varReply.name + \" := \" + varReply.content,\r\n\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t};\r\n\t\t\t\tif (!args.expression.includes(\")\") && this._variableBases[args.expression] !== undefined) {\r\n\t\t\t\t\tresponse.body.variablesReference = this._variableBases[args.expression];\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendResponse(response);\r\n\t\t\t} else {\r\n\t\t\t\tresponse.body = { result: 'Unsupported evaluation context', variablesReference: 0 };\r\n\t\t\t\tthis.sendResponse(response);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during evaluation: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = `Failed to evaluate expression: ${errorMessage}`;\r\n\t\t\tresponse.body = { result: `Evaluation failed: ${errorMessage}`, variablesReference: 0 };\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected async restartRequest(response: DebugProtocol.RestartResponse) {\r\n\t\tconst sourceLines = readFileSync(this._program).toString().split('\\n');\r\n\t\ttry {\r\n\t\t\tconst errorLines: string[] = await this._mconnect.checkRoutine(sourceLines);\r\n\t\t\tif (errorLines.length) {\r\n\t\t\t\tvscode.window.showErrorMessage(\"File contains Problems - No Restart possible!\");\r\n\t\t\t} else {\r\n\t\t\t\tawait this._mconnect.restart(this._program);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during restart: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\tresponse.success = false; // Indicate failure on the response for restart\r\n\t\t\tresponse.message = `Failed to restart: ${errorMessage}`;\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected disconnectRequest(response: DebugProtocol.DisconnectResponse): void {\r\n\t\ttry {\r\n\t\t\tthis._mconnect.disconnect();\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error during disconnect: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\t// response for disconnect doesn't have success/message fields by default in DAP\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate createSource(filePath: string): Source {\r\n\t\treturn new Source(basename(filePath), this.convertDebuggerPathToClient(filePath), undefined, undefined, 'mumps-adapter-data');\r\n\t}\r\n\r\n\tprotected async exceptionInfoRequest(response: DebugProtocol.ExceptionInfoResponse) {\r\n\t\ttry {\r\n\t\t\tconst statVariable: VarData = await this._mconnect.getSingleVar(\"$ZSTATUS\");\r\n\t\t\tconst status = statVariable.content.split(\",\");\r\n\t\t\tconst trashlength = status[0].length + status[1].length + status[2].length + 4;\r\n\t\t\tconst description = 'Line :' + status[1] + \" \" + statVariable.content.substring(trashlength);\r\n\t\t\tresponse.body = {\r\n\t\t\t\texceptionId: status[2],\r\n\t\t\t\tdescription,\r\n\t\t\t\tbreakMode: 'always',\r\n\t\t\t\tdetails: {\r\n\t\t\t\t\ttypeName: 'ErrorException',\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t} catch (e) {\r\n\t\t\tconst errorMessage = e instanceof Error ? e.message : String(e);\r\n\t\t\tthis.sendEvent(new OutputEvent(`Error fetching exception info: ${errorMessage}\\n`, 'stderr'));\r\n\t\t\tresponse.body = {\r\n\t\t\t\texceptionId: 'Error',\r\n\t\t\t\tdescription: `Could not retrieve exception information: ${errorMessage}`,\r\n\t\t\t\tbreakMode: 'always'\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate static varAnalyze(varname: string, content: string): VarData {\r\n\t\tlet indexcount = 1;\r\n\t\tconst bases: string[] = [];\r\n\t\tconst length = varname.length;\r\n\t\tconst klammerpos = varname.indexOf(\"(\");\r\n\t\tlet countKomma = true;\r\n\t\tif (klammerpos > 0) {\r\n\t\t\tbases.push(varname.substring(0, klammerpos));\r\n\t\t\tindexcount++;\r\n\t\t\tfor (let i = klammerpos; i < length; i++) {\r\n\t\t\t\tif (varname.substring(i, i + 1) === \",\" && countKomma) {\r\n\t\t\t\t\tbases.push(varname.substring(0, i));\r\n\t\t\t\t\tindexcount++;\r\n\t\t\t\t}\r\n\t\t\t\tif (varname.substring(i, i + 1) === '\"') { countKomma = !countKomma; }\r\n\t\t\t}\r\n\t\t\tbases.push(varname.substring(0, varname.length - 1));\r\n\t\t} else {\r\n\t\t\tbases.push(varname);\r\n\t\t}\r\n\t\treturn { \"name\": varname, \"indexCount\": indexcount, \"bases\": bases, content };\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { MumpsConnect, MumpsGlobal } from './mumpsConnect';\n\nexport class MumpsGlobalProvider implements vscode.TreeDataProvider<GlobalNode> {\n\tprivate static instance: MumpsGlobalProvider;\n\tprivate static _onDidChangeTreeData: vscode.EventEmitter<GlobalNode | undefined | void> = new vscode.EventEmitter<GlobalNode | undefined | void>();\n\treadonly onDidChangeTreeData: vscode.Event<GlobalNode | undefined | void> = MumpsGlobalProvider._onDidChangeTreeData.event;\n\tprivate static _mconnect: MumpsConnect | null = null;\n\tprivate constructor() {\n\t}\n\tstatic getInstance() {\n\t\tif (!MumpsGlobalProvider.instance) {\n\t\t\tMumpsGlobalProvider.instance = new MumpsGlobalProvider();\n\t\t}\n\t\treturn MumpsGlobalProvider.instance;\n\t}\n\tstatic refresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\tasync search(node?: GlobalNode) {\n\t\tlet searchFor: string | undefined = undefined\n\t\tif (node) {\n\t\t\tconst globalName = node.id?.split(\"(\")[0] || \"\"\n\t\t\tsearchFor = await vscode.window.showInputBox({\n\t\t\t\ttitle: \"Search inside Global\" + globalName,\n\t\t\t\tplaceHolder: 'Type the text to search'\n\t\t\t});\n\t\t\tif (searchFor) {\n\t\t\t\tconst searchNode = new GlobalNode(globalName, searchFor, vscode.TreeItemCollapsibleState.None, \"search\")\n\t\t\t\tthis.getChildren(searchNode)\n\t\t\t}\n\t\t} else {\n\t\t\tsearchFor = await vscode.window.showInputBox({\n\t\t\t\ttitle: \"Search for global key\",\n\t\t\t\tplaceHolder: 'Type the global key to show'\n\t\t\t});\n\t\t\tif (searchFor) {\n\t\t\t\tif (searchFor.length) {\n\t\t\t\t\tif (searchFor[0] !== \"^\") searchFor = \"^\" + searchFor\n\t\t\t\t\tif (searchFor.indexOf(\"(\") !== -1) {\n\t\t\t\t\t\tlet trailingPara = false\n\t\t\t\t\t\tif (searchFor.slice(-1) === \")\") {\n\t\t\t\t\t\t\ttrailingPara = true\n\t\t\t\t\t\t\tsearchFor = searchFor.slice(0, -1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst keys = searchFor.split(\"(\")[1].split(\",\");\n\t\t\t\t\t\tkeys.forEach((key, index) => {\n\t\t\t\t\t\t\tif (index === keys.length - 1 && key.slice(-1) === \")\") key = key.slice(0, -1)\n\t\t\t\t\t\t\tif (isNaN(parseFloat(key))) {\n\t\t\t\t\t\t\t\tif (key[0] !== '\"' || key.slice(-1) !== '\"') {\n\t\t\t\t\t\t\t\t\tkey = '\"' + key + '\"'\n\t\t\t\t\t\t\t\t\tkeys[index] = key\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst ending = trailingPara ? \")\" : \"\"\n\t\t\t\t\t\tsearchFor = searchFor.split(\"(\")[0] + \"(\" + keys.join(\",\") + ending\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst node = new GlobalNode(searchFor, \"\", vscode.TreeItemCollapsibleState.Expanded, \"\")\n\t\t\t\tthis.getChildren(node);\n\t\t\t}\n\t\t}\n\t\tMumpsGlobalProvider.refresh();\n\t}\n\tstatic setMconnect(mconnect: MumpsConnect) {\n\t\tMumpsGlobalProvider._mconnect = mconnect\n\t}\n\t/*eslint class-methods-use-this: 0*/\n\tgetTreeItem(element: GlobalNode): vscode.TreeItem {\n\t\treturn element;\n\t}\n\tasync getMoreNodes(node: GlobalNode) {\n\t\tif (node !== undefined && node.id) {\n\t\t\tnode.id = node.id.slice(0, -1)\n\t\t\tthis.getChildren(node)\n\t\t\tMumpsGlobalProvider.refresh();\n\t\t}\n\t}\n\tasync getChildren(element?: GlobalNode): Promise<GlobalNode[]> {\n\t\tconst globalNodes: GlobalNode[] = [];\n\t\tlet id = \"\"\n\t\tif (element !== undefined && element.id) {\n\t\t\tid = element.id\n\t\t}\n\t\tlet nodes: MumpsGlobal | undefined = undefined\n\t\tif (element?.contextValue === \"search\") {\n\t\t\tconst searchFor: string = element.description as string\n\t\t\tnodes = await MumpsGlobalProvider._mconnect?.getGlobals(searchFor, id)\n\t\t} else {\n\t\t\tnodes = await MumpsGlobalProvider._mconnect?.getGlobals(id)\n\t\t}\n\t\tfor (const key in nodes) {\n\t\t\tconst variable = nodes[key];\n\t\t\tconst value = variable.value;\n\t\t\tconst isCollapsed = variable.hasChildren ? vscode.TreeItemCollapsibleState.Collapsed : vscode.TreeItemCollapsibleState.None;\n\t\t\tconst context = variable.moreToFollow ? \"moreToCome\" : \"\";\n\t\t\tglobalNodes.push(new GlobalNode(key, value, isCollapsed, context))\n\t\t}\n\t\treturn Promise.resolve(globalNodes);\n\t}\n}\n\nexport class GlobalNode extends vscode.TreeItem {\n\n\tconstructor(id: string, value: string, collapsibleState: vscode.TreeItemCollapsibleState, context: string) {\n\t\tsuper(value, collapsibleState);\n\t\tthis.id = id\n\t\tthis.label = id;\n\t\tthis.description = value;\n\t\tif (context !== \"\") this.contextValue = context\n\t\treturn this;\n\t}\n\tcontextValue = 'globalnode';\n}\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, ErrorInformation } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\n\ntype Subroutines = {\n\t[name: string]: {\n\t\tstartLine: number;\n\t\tendLine: number;\n\t};\n};\n\nexport default class MumpsRoutineSorter {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _subroutines: Subroutines = {};\n\tprivate _newSortedLines: string[];\n\tconstructor() {\n\t\tconst editor = vscode.window.activeTextEditor\n\t\tif (editor && editor.document && editor.document.languageId === 'mumps') {\n\t\t\tconst parseDb = MumpsParseDb.getInstance(editor.document)\n\t\t\tthis._linetokens = parseDb.getDocumentTokens()\n\t\t\tconst errors: ErrorInformation[] = parseDb.getDocumentErrors()\n\t\t\tconst document = editor.document;\n\t\t\tlet errorFound = false\n\t\t\tthis._newSortedLines = []\n\t\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\t\tif (errors[i].text !== '') {\n\t\t\t\t\terrorFound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (errorFound) {\n\t\t\t\tvscode.window.showErrorMessage(\"Routine sort aborted - errors found\")\n\t\t\t} else {\n\t\t\t\tlet line = this._lookforNextSubroutineEnd(0)\n\t\t\t\tif (line === -1 || line === this._linetokens.length - 1) {\n\t\t\t\t\tvscode.window.showErrorMessage(\"Routine sort ended - nothing to sort found\")\n\t\t\t\t} else {\n\t\t\t\t\tconst startSortLine = line + 1\n\t\t\t\t\twhile (line !== -1 && line < this._linetokens.length) {\n\t\t\t\t\t\tconst startSubroutine = ++line\n\t\t\t\t\t\tline = this._lookforNextSubroutineEnd(line)\n\t\t\t\t\t\tif (line === -1) break;\n\t\t\t\t\t\tthis._generateSubroutineInfo(startSubroutine, line)\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(this._subroutines).length !== 0) {\n\t\t\t\t\t\tconst subroutineNames = Object.keys(this._subroutines);\n\t\t\t\t\t\tsubroutineNames.sort();\n\t\t\t\t\t\tfor (const name of subroutineNames) {\n\t\t\t\t\t\t\tconst subroutine = this._subroutines[name];\n\t\t\t\t\t\t\tfor (let line = subroutine.startLine; line <= subroutine.endLine; line++) {\n\t\t\t\t\t\t\t\tthis._newSortedLines.push(document.lineAt(line).text)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst lastLineLength = document.lineAt(document.lineCount - 1).text.length\n\t\t\t\t\t\teditor.edit(editBuilder => {\n\t\t\t\t\t\t\teditBuilder.replace(new vscode.Range(startSortLine, 0, document.lineCount - 1, lastLineLength), this._newSortedLines.join(\"\\n\"));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lookforNextSubroutineEnd(line: number): number {\n\t\tfor (let index = line; index < this._linetokens.length; index++) {\n\t\t\tconst tokens = this._linetokens[index];\n\t\t\tlet subroutineEndFound = false;\n\t\t\tfor (let j = 0; j < tokens.length; j++) {\n\t\t\t\tconst token = tokens[j]\n\t\t\t\tif (token.type === TokenType.indentation) {\n\t\t\t\t\tbreak; // Ignore QUIT etc in indentation-levels > 0\n\t\t\t\t}\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"FOR\" || command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\t\tbreak; // Ignore QUIT etc after FOR and IF\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(command === \"QUIT\" ||\n\t\t\t\t\t\t\tcommand === \"GOTO\" ||\n\t\t\t\t\t\t\tcommand === \"ZGOTO\" ||\n\t\t\t\t\t\t\tcommand === \"HALT\" ||\n\t\t\t\t\t\t\tcommand === \"ZHALT\") &&\n\t\t\t\t\t\ttoken.isPostconditioned === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (command === \"GOTO\" || command === \"ZGOTO\") {\n\t\t\t\t\t\t\tlet hasPostcondition = false\n\t\t\t\t\t\t\tfor (let k = j + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (subroutineEndFound) {\n\t\t\t\treturn index\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\tprivate _generateSubroutineInfo(startLine: number, endLine: number) {\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tconst tokens = this._linetokens[i]\n\t\t\tif (tokens[0].type === TokenType.label) {\n\t\t\t\tconst label = tokens[0].name\n\t\t\t\tthis._subroutines[label] = { startLine, endLine }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?) {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode: '',\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\n\tprivate _generateLabelTable(document: vscode.TextDocument) {\n\t\tthis._labelTable = {};\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i);\n\t\t\tconst lineInfo: LineInformation = this._parser.analyzeLine(line.text);\n\t\t\tif (lineInfo.tokens.length > 0 && lineInfo.tokens[0].type === TokenType.label) {\n\t\t\t\tthis._labelTable[lineInfo.tokens[0].name] = i;\n\t\t\t}\n\t\t}\n\t}\n\t*/\n}\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, ErrorInformation } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\nimport { convertMumpsPosition } from './mumpsConnect';\nimport { startLintingFile, isLintingFile, LintOptions } from './mumpsLinter';\n\ntype Parameter = {\n\tname: string,\n\tposition: number\n}\ntype Subroutine = {\n\tstartLine: number,\n\tendLine: number\n\tparameters: Parameter[]\n}\ntype GeneralSubroutine = {\n\tname: string,\n\tstartLine: number,\n\tendLine: number\n}\ntype VariableState = {\n\tnewedAtLine?: number[],\n\tnewedAtPostion: number[],\n\tnewedAtLevel?: number[],\n\tisExcluded?: boolean,\n\tisParameter?: boolean,\n\tisUsed?: boolean\n\tparameterPosition: number\n}\ntype VariableStates = {\n\tname: VariableState\n}\nexport type UnreachableTable = { startLine: number, startTokenId: number, endLine: number, endTokenId: number }[];\nenum labelExists { exists, local, exists_not }\nenum QuitState {\n\tnoQuit, behindQuit, behindLevelQuit\n}\nconst symbols: vscode.SymbolInformation[] = [];\n\n/**\n * Checks if mumps routines NEWs variables correctly\n * Checks if indentation levels are correct\n * Checks if there's unreachable code\n *\n */\nexport default class MumpsDiagnosticsProvider {\n\tprivate _parseDb: MumpsParseDb\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _indentationLevels: number[] = [];\n\tprivate _errorInformation: ErrorInformation[] = []\n\tprivate _diags: vscode.Diagnostic[] = [];\n\tprivate _variablesToBeIgnored: string[] = [];\n\tprivate _enableVariableCheck = true;\n\tprivate _enableUnreachableCodeWarning = true;\n\tprivate _varStates: VariableStates;\n\tprivate _levelExclusiveNew: number[];\n\tprivate _subroutines: Subroutine[] = [];\n\tprivate _labelTable: Set<string> = new Set<string>();;\n\tprivate _uri: vscode.Uri;\n\tprivate _routine: Subroutine = { startLine: -1, endLine: -1, parameters: [] };\n\tprivate _level = 0;\n\tprivate _lineWithDo = -2;\n\tprivate _isBehindQuit: QuitState[] = [];\n\tprivate _startUnreachable: vscode.Position | false = false;\n\tprivate _activeSubroutine: GeneralSubroutine = { name: '', startLine: -1, endLine: -1 }\n\tprivate _collection: vscode.DiagnosticCollection\n\tconstructor(collection: vscode.DiagnosticCollection) {\n\t\tthis._collection = collection\n\t}\n\tupdateDiagnostics(document: vscode.TextDocument): void {\n\t\tif (document && document.languageId === 'mumps' && !isLintingFile(document.fileName)) {\n\t\t\tstartLintingFile(document.fileName)\n\t\t\tthis._parseDb = MumpsParseDb.getInstance(document, true)\n\t\t\tthis._uri = document.uri;\n\t\t\tconst configuration = vscode.workspace.getConfiguration();\n\t\t\tif (configuration.mumps.variablesToBeIgnoredAtNewCheck !== undefined) {\n\t\t\t\tthis._variablesToBeIgnored = configuration.mumps.variablesToBeIgnoredAtNewCheck.split(\",\");\n\t\t\t}\n\t\t\tif (configuration.mumps.enableVariableCheck !== undefined) {\n\t\t\t\tthis._enableVariableCheck = configuration.mumps.enableVariableCheck;\n\t\t\t}\n\t\t\tif (configuration.mumps.warnIfCodeIsUnreachable !== undefined) {\n\t\t\t\tthis._enableUnreachableCodeWarning = configuration.mumps.warnIfCodeIsUnreachable\n\t\t\t}\n\t\t\tthis._startUpdate();\n\t\t}\n\t}\n\tprivate async _startUpdate(): Promise<void> {\n\t\tthis._startUnreachable = false;\n\t\tthis._diags = [];\n\t\tthis._linetokens = this._parseDb.getDocumentTokens();\n\t\tthis._errorInformation = this._parseDb.getDocumentErrors();\n\t\tthis._indentationLevels = this._parseDb.getindentationLevels();\n\t\tthis._isBehindQuit = new Array(32).fill(QuitState.noQuit);\n\t\tthis._collection.delete(this._uri);\n\t\tthis._generateLabelTable();\n\n\t\tfor (let i = 0; i < this._linetokens.length; i++) {\n\n\t\t\tconst tokens = this._linetokens[i];\n\t\t\tconst errorInformation = this._errorInformation[i];\n\t\t\tif (errorInformation.text !== '') {\n\t\t\t\tthis._addWarning(errorInformation.text, i, errorInformation.position, -1, vscode.DiagnosticSeverity.Error);\n\t\t\t}\n\t\t\tthis._checkLine(i, tokens);\n\t\t}\n\t\tif (this._enableVariableCheck) {\n\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, this._linetokens.length);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < this._subroutines.length; i++) {\n\n\t\t\t\tthis.analyzeSubroutine(this._subroutines[i]);\n\t\t\t}\n\t\t}\n\t\tif (this._diags) {\n\t\t\tthis._collection.set(this._uri, this._diags);\n\t\t}\n\t}\n\tasync updateFileDiagnostics(file: vscode.Uri, fileContent: string, options: LintOptions) {\n\t\tconst filePath = file.fsPath;\n\t\t//const fileContent = await fs.readFile(filePath, 'utf8'); // Asynchrones Lesen der Datei\n\t\tthis._parseDb = MumpsParseDb.getFileInstance(filePath, fileContent);\n\t\tthis._uri = file;\n\t\tthis._enableVariableCheck = options.checkNEWs; // usually generates too many warnings\n\t\tthis._enableUnreachableCodeWarning = options.checkUnreachable\n\t\tawait this._startUpdate(); // Aufrufen der asynchronen Methode\n\t\tstartLintingFile(filePath)\n\t}\n\t/**\n\t * Checks a single subroutine if variables are NEWed correctly\n\t * sets found problems in this._warnings\n\t * @param routine subroutine to be checked\n\t */\n\tpublic analyzeSubroutine(routine: Subroutine): void {\n\t\tlet code: string = \"\";\n\t\tif (this._enableVariableCheck) {\n\t\t\tthis._varStates = {} as VariableStates;\n\t\t\tthis._levelExclusiveNew = [];\n\t\t\tlet level = 0; //indentation-level\n\t\t\tfor (const parameter of routine.parameters) {\n\t\t\t\tthis._varStates[parameter.name] = { isParameter: true, parameterPosition: parameter.position }\n\t\t\t}\n\t\t\tfor (let i = routine.startLine; i <= routine.endLine; i++) {\n\t\t\t\tconst newLevel = this._indentationLevels[i];\n\t\t\t\tif (newLevel < level) {\n\t\t\t\t\tthis._reduceindentationLevel(level, newLevel);\n\t\t\t\t}\n\t\t\t\tlevel = newLevel;\n\t\t\t\tconst line = this._parseDb.getLine(i)\n\t\t\t\tif (Array.isArray(this._linetokens[i])) {\n\t\t\t\t\tfor (let j = 0; j < this._linetokens[i].length; j++) {\n\t\t\t\t\t\tlet token = this._linetokens[i][j];\n\t\t\t\t\t\tif (i === routine.startLine && j === 0) { // skip parameters\n\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length && this._linetokens[i][j].type === TokenType.local) { /* empty */ }\n\t\t\t\t\t\t\tif (j < this._linetokens[i].length) {\n\t\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (token.type === TokenType.keyword) {\n\n\t\t\t\t\t\t\tif (token.longName === \"NEW\") {\n\t\t\t\t\t\t\t\tlet anyVariablesNewed = false;\n\t\t\t\t\t\t\t\tlet containsExclusions = false;\n\t\t\t\t\t\t\t\t//exclude postcondition\n\t\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length) {\n\t\t\t\t\t\t\t\t\tconst token = this._linetokens[i][j]\n\t\t\t\t\t\t\t\t\tconst position = token.position\n\t\t\t\t\t\t\t\t\tif (line[position - 1] === \" \") {\n\t\t\t\t\t\t\t\t\t\t--j\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t} else if (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\t\tthis._checkNewed(token.name, level, i, token.position)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length &&\n\t\t\t\t\t\t\t\t\t(this._linetokens[i][j].type === TokenType.local ||\n\t\t\t\t\t\t\t\t\t\tthis._linetokens[i][j].type === TokenType.sysvariable)) {\n\t\t\t\t\t\t\t\t\tanyVariablesNewed = true;\n\t\t\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\t\t\t\t\tlet message = '';\n\t\t\t\t\t\t\t\t\t\tconst varState: VariableState = this._varStates[varName] ? this._varStates[varName] : { isExcluded: token.isExcludedVariable }\n\t\t\t\t\t\t\t\t\t\t// Variable is already NEWed or used\n\t\t\t\t\t\t\t\t\t\tif (varState.isParameter) {\n\t\t\t\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.isExcluded = true;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (level === 0) { //NEW inside higher indentation-level should be possible\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"NEW hides formal parameter \" + varName;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcode = \"NewHidesParam:\" + varName;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (!varState.newedAtLevel) { // Variable not NEWed yet - New is OK\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel = [level];\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine = [i];\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion = [token.position];\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (varState.newedAtLevel.indexOf(level) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"Variable \" + varName + \" already mentioned in NEW command\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcode = \"VarAlreadyNewed:\" + varName\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel.push(level);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine!.push(i);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion!.push(token.position);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (message !== \"\") {\n\t\t\t\t\t\t\t\t\t\t\tthis._addWarning(message, i, token.position, token.name.length, vscode.DiagnosticSeverity.Warning, code);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis._varStates[varName] = varState;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (anyVariablesNewed === false) {\n\t\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (containsExclusions) {\n\t\t\t\t\t\t\t\t\tthis._levelExclusiveNew.push(level);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//Check if parameters are hidden by NEW-exclusion\n\t\t\t\t\t\t\t\tif (routine.parameters.length > 0 && containsExclusions && level === 0) {\n\t\t\t\t\t\t\t\t\tfor (let k = 0; k < routine.parameters.length; k++) {\n\t\t\t\t\t\t\t\t\t\tif (!this._varStates[routine.parameters[k].name].isExcluded) {\n\t\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"NEW hides formal parameters\", i, token.position, token.name.length,\n\t\t\t\t\t\t\t\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\t\t\t\t\t\t\"NewHidesParam:\" + this._varStates[routine.parameters[k].name]);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (token.type === TokenType.local) {  // local variable found at a non NEW command\n\t\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\t\tthis._checkNewed(varName, level, i, token.position);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkVariableUsage(routine)\n\t\t}\n\t}\n\t/**\n\t * Check if Variables are formal parameters but not used, or NEWed but not used\n\t * @param routine Subroutine to check\n\t * @param varStates array of found variable-states\n\t */\n\tprivate _checkVariableUsage(routine: Subroutine): void {\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state: VariableState = this._varStates[key];\n\t\t\tif (state.isParameter && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is a formal parameter but not used\", routine.startLine,\n\t\t\t\t\tstate.parameterPosition,\n\t\t\t\t\tkey.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"FormalNotUsed:\" + key);\n\t\t\t} else if (state.newedAtLine && state.newedAtLine.length > 0 && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\tstate.newedAtLine[0],\n\t\t\t\t\tstate.newedAtPostion[0],\n\t\t\t\t\tkey.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"NewedButNotUsed:\" + key\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Check if a local Variable is correctly NEWed or generate Warning\n\t * @param varName Variable to be checked\n\t * @param level indentation-level on which Variable is found\n\t * @param line Line where variable is found\n\t * @param position Position inside Line\n\t */\n\tprivate _checkNewed(varName: string, level: number, line: number, position: number): void {\n\t\t//Check Variable-Ignore-List\n\t\tlet varState = this._varStates[varName];\n\t\tif (!this._isIgnoredVariable(varName)) {\n\t\t\tlet isNewed = false;\n\t\t\tfor (let k = 0; k < this._levelExclusiveNew.length; k++) {\n\t\t\t\tif (this._levelExclusiveNew[k] <= level) {\n\t\t\t\t\tisNewed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tif (varState) {\n\t\t\t\t\tif (!varState.isParameter) {\n\t\t\t\t\t\tif (varState.newedAtLevel) {\n\t\t\t\t\t\t\tfor (let i = 0; i < varState.newedAtLevel.length; i++) {\n\t\t\t\t\t\t\t\tif (varState.newedAtLevel[i] <= level) {\n\t\t\t\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t}\n\t\t\t\t\tvarState.isUsed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tthis._addWarning(\"Variable \" + varName + \" not NEWed\", line, position, varName.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"VarNotNewed:\" + varName);\n\t\t\t}\n\t\t}\n\t\tif (varState) {\n\t\t\tvarState.isUsed = true;\n\t\t} else {\n\t\t\tvarState = { isUsed: true }\n\t\t}\n\t\tthis._varStates[varName] = varState;\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\t */\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?: vscode.DiagnosticSeverity, code?: string): void {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode,\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\tprivate _checkLine(line: number, tokens: LineToken[]): void {\n\t\tlet ifFlag = false;\n\t\tconst newindentationLevel = this._indentationLevels[line];\n\t\tconst expectedLevel = line === this._lineWithDo + 1 ? this._level + 1 : this._level;\n\t\tthis._level = newindentationLevel;\n\t\tthis._removeQuits(this._level)\n\t\tif (this._level > expectedLevel) {\n\t\t\tthis._addWarning(\"indentation Level wrong, found: \" + this._level + \", expected: \" + expectedLevel,\n\t\t\t\tline, 0, this._getindentationPosition(line), vscode.DiagnosticSeverity.Warning, \"Expectedindentation:\" + expectedLevel);\n\t\t}\n\t\tif (line === this._lineWithDo + 1 && this._level < expectedLevel) {\n\t\t\tthis._addWarning(\"Higher indentation expected after argumentless Do\", line, 0, this._getindentationPosition(line),\n\t\t\t\tvscode.DiagnosticSeverity.Warning, \"Expectedindentation:\" + expectedLevel);\n\t\t}\n\t\tthis._lineWithDo = -2;\n\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) { // iterate over every token in actual line\n\t\t\tlet token: LineToken = tokens[tokenId];\n\t\t\tif (token.type === TokenType.comment && token.name.match(/ignoreVars:/)) { //Check for IgnoreVars-directive\n\t\t\t\tconst ignoreVarsCommentString = token.name.split(\"ignoreVars:\")[1];\n\t\t\t\tif (ignoreVarsCommentString) {\n\t\t\t\t\tconst ignoredVariables = ignoreVarsCommentString.split(\",\").map(variableName => variableName.trim());\n\t\t\t\t\tthis._variablesToBeIgnored = this._variablesToBeIgnored.concat(ignoredVariables);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (tokenId === 0 && token.type === TokenType.label) { \t//If there was unreachable code before this label\n\t\t\t\t//save a warning\n\t\t\t\t//Remember label in symbol library\n\t\t\t\tthis._removeQuits(this._level - 1)\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, line)\n\t\t\t\t}\n\t\t\t\tthis._activeSubroutine.startLine = line;\n\t\t\t\tthis._activeSubroutine.name = token.name;\n\t\t\t\tif (tokens[1] !== undefined && tokens[1].type === TokenType.local) { //Begin of a parametrized subroutine\n\t\t\t\t\tthis._routine.startLine = line;\n\t\t\t\t\twhile (++tokenId < tokens.length && tokens[tokenId].type === TokenType.local) {\n\t\t\t\t\t\tthis._routine.parameters.push({ name: tokens[tokenId].name, position: tokens[tokenId].position });\n\t\t\t\t\t}\n\t\t\t\t\tif (tokenId >= tokens.length) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttoken = tokens[tokenId];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.keyword || token.type === TokenType.comment) {\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"IF\" || command === \"ELSE\" || command === \"FOR\") {\n\t\t\t\t\t\tifFlag = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (command === \"DO\" && token.hasArguments === false) {\n\t\t\t\t\t\tthis._lineWithDo = line;\n\t\t\t\t\t}\n\t\t\t\t\tif (!ifFlag && (command === \"QUIT\" || command === \"GOTO\" || command === \"HALT\") && !token.isPostconditioned) {\n\t\t\t\t\t\tlet hasPostcondition = false;\n\t\t\t\t\t\tif (command === \"GOTO\") { //Check if GOTO argument is postconditioned\n\t\t\t\t\t\t\tfor (let k = tokenId + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.entryref && !tokens[k].name.includes(\"&\") && !tokens[k].name.includes(\"@\")) {\n\t\t\t\t\t\t\t\t\tif (this._labelExists(tokens[k].name) === labelExists.exists_not)  // && !/^\\+\\d+$/.test(tokens[k].name))\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"Entry-Reference not found\",\n\t\t\t\t\t\t\t\t\t\t\tline, tokens[k].position, tokens[k].name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t\t\t\t\telse if (this._labelExists(tokens[k].name) === labelExists.local)\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"Entry-Reference can only be called locally\",\n\t\t\t\t\t\t\t\t\t\t\tline, tokens[k].position, tokens[k].name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\tthis._routine.endLine = line;\n\t\t\t\t\t\t\tif (this._routine.startLine !== -1) {\n\t\t\t\t\t\t\t\tthis._subroutines.push(this._routine);\n\t\t\t\t\t\t\t\tthis._routine = { startLine: -1, endLine: -1, parameters: [] };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (line === this._lineWithDo) {\n\t\t\t\t\t\t\t\tthis._isBehindQuit[this._level] = QuitState.behindLevelQuit\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._isBehindQuit[this._level] = QuitState.behindQuit\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.entryref || token.type === TokenType.exfunction) {\n\t\t\t\tif (this._labelExists(token.name) === labelExists.exists_not && !token.name.includes(\"&\") && !token.name.includes(\"@\")) {\n\t\t\t\t\tthis._addWarning(\"Entry-Reference not found\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t} else if (this._labelExists(token.name) === labelExists.local) {\n\t\t\t\t\tthis._addWarning(\"Entry-Reference can only be called locally\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t} else if (token.name.includes(\"+\")) {\n\t\t\t\t\tconst previousTokenName = tokens[tokenId - 1].longName\n\t\t\t\t\tif (previousTokenName !== \"$TEXT\") {\n\t\t\t\t\t\tthis._addWarning(\"Entryref+Offset is not recommended\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._parseDb.setUnreachable(line, tokenId, this._startUnreachable !== false)\n\t\t}\n\t}\n\tprivate _checkUnreachable(line: number, token: LineToken): void {\n\t\tconst isBehindQuit = this._isBehindQuit.slice(0, this._level).some(state => state === QuitState.behindQuit) || this._isBehindQuit[this._level] !== QuitState.noQuit;\n\t\tif (isBehindQuit && token.type !== TokenType.comment) {\n\t\t\tif (this._startUnreachable === false) {\n\t\t\t\tthis._startUnreachable = new vscode.Position(line, token.position);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._startUnreachable !== false && this._enableUnreachableCodeWarning) {\n\t\t\t\t// Only if there were Code lines after a quit or a goto\n\t\t\t\tthis._diags.push({\n\t\t\t\t\tcode: '',\n\t\t\t\t\tmessage: \"Unreachable Code\",\n\t\t\t\t\trange: new vscode.Range(this._startUnreachable, new vscode.Position(line, 0)),\n\t\t\t\t\tseverity: vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\tsource: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._startUnreachable = false\n\t\t}\n\t}\n\tprivate _getindentationPosition(line: number): number {\n\t\tfor (const token of this._linetokens[line]) {\n\t\t\tconst type = token.type\n\t\t\tif (type === TokenType.indentation) {\n\t\t\t\treturn token.position\n\t\t\t} else if (type === TokenType.comment || type === TokenType.keyword) {\n\t\t\t\treturn token.position // no indentation found\n\t\t\t}\n\t\t}\n\t\treturn 0 // nothing found\n\t}\n\tprivate _removeQuits(level: number): void {\n\t\tfor (let i = level + 1; i < 32; i++) { this._isBehindQuit[i] = QuitState.noQuit }\n\t}\n\tprivate _generateLabelTable(): void {\n\t\tthis._labelTable.clear();\n\t\tfor (const lineTokens of this._linetokens) {\n\t\t\tif (lineTokens.length > 0 && lineTokens[0].type === TokenType.label) {\n\t\t\t\tconst labelName = lineTokens[0].name.replace(\":\", \"\");\n\t\t\t\tthis._labelTable.add(labelName);\n\t\t\t}\n\t\t}\n\t}\n\tprivate _labelExists(name: string): labelExists {\n\t\tif (name.startsWith(\"$$\")) name = name.substring(2)\n\t\tif (name.indexOf(\"^\") > -1) {\n\t\t\tconst filePosition = convertMumpsPosition(name, false)\n\t\t\tif (filePosition.file !== \"\") {\n\t\t\t\tif (filePosition.local) return labelExists.local\n\t\t\t\telse return labelExists.exists\n\t\t\t} else {\n\t\t\t\treturn labelExists.exists_not\n\t\t\t}\n\t\t} else {\n\t\t\tif (name.includes(\"+\")) name = name.split(\"+\")[0];  //In case of label+offset\n\t\t\tif (name === \"\") return labelExists.exists\n\t\t\tif (this._labelTable.has(name)) return labelExists.exists\n\t\t\telse return labelExists.exists_not\n\t\t}\n\t}\n\t/**\n\t * Checks if the given variablename is on the ignore-list\n\t * @param variable\n\t * @returns true if variable can be ignored at NEW-Check\n\t */\n\tprivate _isIgnoredVariable(variable: string): boolean {\n\t\tlet isIgnoredVariable = false;\n\t\tfor (let k = 0; k < this._variablesToBeIgnored.length; k++) {\n\t\t\tif (new RegExp(\"^\" + this._variablesToBeIgnored[k] + \"$\").test(variable)) {\n\t\t\t\tisIgnoredVariable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isIgnoredVariable;\n\t}\n\t/**\n\t * Clears all NEWs that were started above the new indentation-level\n\t * @param level old indentation-level\n\t * @param newLevel new-indentation-level\n\t */\n\tprivate _reduceindentationLevel(level: number, newLevel: number): void {\n\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\tconst index = this._levelExclusiveNew.indexOf(k);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._levelExclusiveNew.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state = this._varStates[key];\n\t\t\tlet found = false;\n\t\t\tlet memLine = 0;\n\t\t\tlet memPosition = 0;\n\t\t\tif (state.newedAtLevel) {\n\t\t\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\t\t\tconst index = state.newedAtLevel?.indexOf(k)\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tmemLine = state.newedAtLine[index];\n\t\t\t\t\t\tmemPosition = state.newedAtPostion[index];\n\t\t\t\t\t\tstate.newedAtLevel.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtLine.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtPostion.splice(index, 1);\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tthis._varStates[key] = state;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found && !state.isUsed) {\n\t\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\t\tmemLine,\n\t\t\t\t\t\tmemPosition,\n\t\t\t\t\t\tkey.length, vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\"NewedButNotUsed:\" + key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _addSymbol(name: string, startLine: number, endLine: number): void {\n\t\tconst startPosition = new vscode.Position(startLine, 0);\n\t\tconst endPosition = new vscode.Position(endLine, 0);\n\t\tconst methodRange = new vscode.Location(this._uri, new vscode.Range(startPosition, endPosition));\n\t\tsymbols.push(new vscode.SymbolInformation(name, vscode.SymbolKind.Function, '', methodRange));\n\t}\n}\n","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimLastNewline = exports.LogOutputEvent = exports.logger = exports.Logger = exports.LogLevel = void 0;\nconst internalLogger_1 = require(\"./internalLogger\");\nconst debugSession_1 = require(\"./debugSession\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Stop\"] = 4] = \"Stop\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nclass Logger {\n    constructor() {\n        this._pendingLogQ = [];\n    }\n    log(msg, level = LogLevel.Log) {\n        msg = msg + '\\n';\n        this._write(msg, level);\n    }\n    verbose(msg) {\n        this.log(msg, LogLevel.Verbose);\n    }\n    warn(msg) {\n        this.log(msg, LogLevel.Warn);\n    }\n    error(msg) {\n        this.log(msg, LogLevel.Error);\n    }\n    dispose() {\n        if (this._currentLogger) {\n            const disposeP = this._currentLogger.dispose();\n            this._currentLogger = null;\n            return disposeP;\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * `log` adds a newline, `write` doesn't\n     */\n    _write(msg, level = LogLevel.Log) {\n        // [null, undefined] => string\n        msg = msg + '';\n        if (this._pendingLogQ) {\n            this._pendingLogQ.push({ msg, level });\n        }\n        else if (this._currentLogger) {\n            this._currentLogger.log(msg, level);\n        }\n    }\n    /**\n     * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is\n     * called the first time, because minLogLevel defaults to Warn.\n     */\n    setup(consoleMinLogLevel, _logFilePath, prependTimestamp = true) {\n        const logFilePath = typeof _logFilePath === 'string' ?\n            _logFilePath :\n            (_logFilePath && this._logFilePathFromInit);\n        if (this._currentLogger) {\n            const options = {\n                consoleMinLogLevel,\n                logFilePath,\n                prependTimestamp\n            };\n            this._currentLogger.setup(options).then(() => {\n                // Now that we have a minimum logLevel, we can clear out the queue of pending messages\n                if (this._pendingLogQ) {\n                    const logQ = this._pendingLogQ;\n                    this._pendingLogQ = null;\n                    logQ.forEach(item => this._write(item.msg, item.level));\n                }\n            });\n        }\n    }\n    init(logCallback, logFilePath, logToConsole) {\n        // Re-init, create new global Logger\n        this._pendingLogQ = this._pendingLogQ || [];\n        this._currentLogger = new internalLogger_1.InternalLogger(logCallback, logToConsole);\n        this._logFilePathFromInit = logFilePath;\n    }\n}\nexports.Logger = Logger;\nexports.logger = new Logger();\nclass LogOutputEvent extends debugSession_1.OutputEvent {\n    constructor(msg, level) {\n        const category = level === LogLevel.Error ? 'stderr' :\n            level === LogLevel.Warn ? 'console' :\n                'stdout';\n        super(msg, category);\n    }\n}\nexports.LogOutputEvent = LogOutputEvent;\nfunction trimLastNewline(str) {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\nexports.trimLastNewline = trimLastNewline;\n//# sourceMappingURL=data:application/json;base64,","'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { autoSpaceEnter, autoSpaceTab } from './mumpsAutospace';\r\nimport MumpsCodeActionProvider from './mumpsCodeActionProvider';\r\nimport MumpsCompletionItemProvider from './mumpsCompletionItemProvider';\r\nimport MumpsConfigurationProvider from './mumpsConfigurationProvider';\r\nimport MumpsDebugSession from './mumpsDebug';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport MumpsDocumenter from './mumpsDocumenter';\r\nimport MumpsDocumentSymbolProvider from './mumpsDocumentSymbolProvider';\r\nimport MumpsDefinitionProvider from './mumpsDefinitionProvider';\r\nimport MumpsEvalutableExpressionProvider from './mumpsEvalutableExpressionProvider';\r\nimport MumpsExpandCompress from './mumpsCompExp';\r\nimport MumpsFoldingProvider from './mumpsFoldingProvider';\r\nimport MumpsFormattingHelpProvider from './mumpsFormattingHelpProvider';\r\nimport { MumpsGlobalProvider, GlobalNode } from './mumpsGlobalProvider';\r\nimport { MumpsHighlighter, SemanticTokens } from './mumpsHighlighter';\r\nimport MumpsHoverProvider from './mumpsHoverProvider';\r\nimport MumpsLinter, { removeLintFileFlag, LintOptions } from './mumpsLinter';\r\nimport MumpsReferenceProvider from './mumpsReferenceProvider';\r\nimport MumpsRoutineSorter from './mumpsRoutineSorter';\r\nimport MumpsSignatureHelpProvider from './mumpsSignatureHelpProvider';\r\nimport * as fs from 'fs'\r\nlet timeout: ReturnType<typeof setTimeout> | undefined;\r\nconst entryRef: string | undefined = \"\";\r\nlet dbFile = \"\";\r\nlet localRoutinesPath = \"\";\r\nlet cancellationTokenSource: vscode.CancellationTokenSource | null = null;\r\nconst globalDirectoryProvider = MumpsGlobalProvider.getInstance();\r\nconst mumpsCodeActionProvider = new MumpsCodeActionProvider();\r\nexport let mumpsDiagnostics: vscode.DiagnosticCollection;\r\nexport async function activate(context: vscode.ExtensionContext) {\r\n\tconst MUMPS_MODE: vscode.DocumentFilter = { language: 'mumps', scheme: 'file' };\r\n\tmumpsDiagnostics = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n\tlet storage = \"\";\r\n\tif (context.storageUri !== undefined) {\r\n\t\tstorage = context.storageUri.fsPath;\r\n\t\tif (!fs.existsSync(storage)) {\r\n\t\t\tfs.mkdirSync(storage);\r\n\t\t}\r\n\t\tdbFile = storage + \"/labeldb.json\";\r\n\t\tcontext.subscriptions.push(vscode.languages.registerCompletionItemProvider(MUMPS_MODE, new MumpsCompletionItemProvider(dbFile)));\r\n\t}\r\n\tconst wsState = context.workspaceState;\r\n\tconst statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\r\n\tstatusBarItem.text = \"$(primitive-square) Stop Scan\";\r\n\tstatusBarItem.command = 'mumps.stopScan';\r\n\tstatusBarItem.tooltip = \"Stop current Mumps scan\";\r\n\tstatusBarItem.hide(); // initially hidden\r\n\tconst scanCommand = async () => {\r\n\t\tif (cancellationTokenSource) {\r\n\t\t\t// Abbruch wenn bereits ein Scan läuft\r\n\t\t\tcancellationTokenSource.cancel();\r\n\t\t\tcancellationTokenSource = null;\r\n\t\t\tstatusBarItem.hide(); // hide the button when scan is canceled\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst userOptions = await askUserForLintOptions();\r\n\t\tcancellationTokenSource = new vscode.CancellationTokenSource();\r\n\t\tconst token = cancellationTokenSource.token;\r\n\t\tstatusBarItem.show(); // show the button when scan starts\r\n\t\ttry {\r\n\t\t\tawait new MumpsLinter(mumpsDiagnostics, userOptions).lintAllFiles(token);\r\n\t\t} finally {\r\n\t\t\tcancellationTokenSource = null; // Zurücksetzen der Quelle nach Abschluss des Scans\r\n\t\t\tstatusBarItem.hide(); // hide the button when scan is finished\r\n\t\t}\r\n\t}\r\n\tconst stopCommand = () => {\r\n\t\tif (cancellationTokenSource) {\r\n\t\t\tcancellationTokenSource.cancel();\r\n\t\t\tcancellationTokenSource = null;\r\n\t\t\tvscode.window.showInformationMessage('Scan wurde gestoppt.');\r\n\t\t\tstatusBarItem.hide(); // hide the button when scan is stopped\r\n\t\t} else {\r\n\t\t\tvscode.window.showInformationMessage('Kein laufender Scan zum Stoppen.');\r\n\t\t}\r\n\t};\r\n\tconst generateForLoop = (document: vscode.TextDocument, range: vscode.Range, shortNames: boolean, isUppercase: boolean, indentation: number) =>\r\n\t\tmumpsCodeActionProvider.generateForLoop(document, range, shortNames, isUppercase, indentation);\r\n\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand(\"mumps.documentFunction\", () => { MumpsDocumenter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceEnter\", () => { autoSpaceEnter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceTab\", () => { autoSpaceTab(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.sortRoutine\", () => { new MumpsRoutineSorter() }),\r\n\t\tvscode.commands.registerCommand(\"mumps.toggleExpandedCommands\", () => { MumpsExpandCompress(wsState) }),\r\n\t\tvscode.commands.registerCommand('mumps.getEntryRef', () => { return getEntryRef() }),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.loadMore', (node: GlobalNode) => globalDirectoryProvider.getMoreNodes(node)),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.refresh', () => MumpsGlobalProvider.refresh()),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.search', (node: GlobalNode) => globalDirectoryProvider.search(node)),\r\n\t\tvscode.commands.registerCommand('mumps.generateForLoop', generateForLoop),\r\n\t\tvscode.commands.registerCommand('mumps.scanWorkspaceForErrors', scanCommand),\r\n\t\tvscode.commands.registerCommand('mumps.stopScan', stopCommand),\r\n\t\tvscode.debug.registerDebugConfigurationProvider('mumps', new MumpsConfigurationProvider()),\r\n\t\tvscode.debug.registerDebugAdapterDescriptorFactory('mumps', new InlineDebugAdapterFactory()),\r\n\t\tvscode.languages.registerHoverProvider(MUMPS_MODE, new MumpsHoverProvider()),\r\n\t\tvscode.languages.registerDefinitionProvider(MUMPS_MODE, new MumpsDefinitionProvider()),\r\n\t\tvscode.languages.registerEvaluatableExpressionProvider(MUMPS_MODE, new MumpsEvalutableExpressionProvider()),\r\n\t\tvscode.languages.registerSignatureHelpProvider(MUMPS_MODE, new MumpsSignatureHelpProvider(), '(', ','),\r\n\t\tvscode.languages.registerDocumentSymbolProvider(MUMPS_MODE, new MumpsDocumentSymbolProvider()),\r\n\t\tvscode.languages.registerDocumentSemanticTokensProvider(MUMPS_MODE, MumpsHighlighter, SemanticTokens),\r\n\t\tvscode.languages.registerDocumentFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerDocumentRangeFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerReferenceProvider(MUMPS_MODE, new MumpsReferenceProvider()),\r\n\t\tvscode.languages.registerFoldingRangeProvider(MUMPS_MODE, new MumpsFoldingProvider()),\r\n\t\tvscode.languages.registerCodeActionsProvider(MUMPS_MODE, new MumpsCodeActionProvider()),\r\n\t\tvscode.window.registerTreeDataProvider('mumpsGlobals', MumpsGlobalProvider.getInstance()),\r\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidChangeTextDocument(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidOpenTextDocument(document => { triggerUpdateDiagnostics(document, mumpsDiagnostics) }),\r\n\t\tstatusBarItem\r\n\t);\r\n}\r\n\r\nexport function deactivate() {\r\n\t// nothing to do\r\n}\r\n\r\nclass InlineDebugAdapterFactory implements vscode.DebugAdapterDescriptorFactory {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tcreateDebugAdapterDescriptor(): vscode.ProviderResult<vscode.DebugAdapterDescriptor> {\r\n\t\treturn new vscode.DebugAdapterInlineImplementation(new MumpsDebugSession());\r\n\t}\r\n}\r\n\r\nfunction triggerUpdateDiagnostics(document: vscode.TextDocument, collection: vscode.DiagnosticCollection) {\r\n\tif (timeout) {\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = undefined;\r\n\t}\r\n\ttimeout = setTimeout(() => {\r\n\t\tremoveLintFileFlag(document.fileName)\r\n\t\tconst diagnosticsProvider = new MumpsDiagnosticsProvider(collection)\r\n\t\tdiagnosticsProvider.updateDiagnostics(document);\r\n\t}, 500);\r\n}\r\n\r\nfunction getEntryRef() {\r\n\treturn vscode.window.showInputBox({\r\n\t\tplaceHolder: \"Please enter the Entry-Reference to start Debugging\",\r\n\t\tvalue: entryRef\r\n\t})\r\n}\r\nasync function askUserForLintOptions(): Promise<LintOptions> {\r\n\tconst config = vscode.workspace.getConfiguration('mumps')\r\n\tconst checkVariablesNEWsDefault = config.get<boolean>('enableVariableCheck', true)\r\n\tconst checkUnreachableCodeDefault = config.get<boolean>('warnIfCodeIsUnreachable', true)\r\n\tconst options = [\r\n\t\t{ label: 'Check correct NEWing', picked: checkVariablesNEWsDefault },\r\n\t\t{ label: 'Check for unreachable code', picked: checkUnreachableCodeDefault }\r\n\t];\r\n\r\n\tconst selectedOptions = await vscode.window.showQuickPick(options, {\r\n\t\tcanPickMany: true,\r\n\t\tplaceHolder: 'Select the additional checks you want to perform'\r\n\t});\r\n\r\n\tif (selectedOptions) {\r\n\t\tconst checkNEWs = selectedOptions.some(option => option.label === 'Check correct NEWing')\r\n\t\tconst checkUnreachable = selectedOptions.some(option => option.label === 'Check for unreachable code')\r\n\t\tawait config.update('enableVariableCheck', checkNEWs, vscode.ConfigurationTarget.Workspace)\r\n\t\tawait config.update('warnIfCodeIsUnreachable', checkUnreachable, vscode.ConfigurationTarget.Workspace)\r\n\t\treturn { checkNEWs, checkUnreachable };\r\n\t}\r\n\r\n\treturn { checkNEWs: false, checkUnreachable: false };\r\n}\r\n\r\nexport function getdbFile() {\r\n\treturn dbFile;\r\n}\r\n\r\nexport function getWworkspaceFolder() {\r\n\treturn vscode.workspace.workspaceFolders?.[0].uri.fsPath;\r\n}\r\nexport function getLocalRoutinesPath() {\r\n\treturn localRoutinesPath;\r\n}\r\nexport function setLocalRoutinesPath(path: string) {\r\n\tlocalRoutinesPath = path;\r\n}\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsConfigurationProvider implements vscode.DebugConfigurationProvider {\n\n\t/**\n\t * Message a debug configuration just before a debug session is being launched,\n\t * e.g. add all missing attributes to the debug configuration.\n\t*/\n\tstatic resolveDebugConfiguration(folder: vscode.WorkspaceFolder | undefined,\n\t\tconfig: vscode.DebugConfiguration): vscode.ProviderResult<vscode.DebugConfiguration> {\n\n\t\t// if launch.json is missing or empty\n\t\tif (!config.type && !config.request && !config.name) {\n\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\tif (editor && editor.document.languageId === 'mumps') {\n\t\t\t\tconfig.type = 'mumps';\n\t\t\t\tconfig.name = 'Launch';\n\t\t\t\tconfig.request = 'launch';\n\t\t\t\tconfig.program = '${file}';\n\t\t\t\tconfig.stopOnEntry = true;\n\t\t\t\tconfig.hostname = '192.168.0.1';\n\t\t\t\tconfig.localRoutinesPath = 'y:\\\\';\n\t\t\t\tconfig.port = 9000;\n\t\t\t}\n\t\t}\n\n\t\tif (!config.program) {\n\t\t\treturn vscode.window.showInformationMessage(\"Cannot find a program to debug\").then(() => {\n\t\t\t\treturn undefined;\t// abort launch\n\t\t\t});\n\t\t}\n\n\t\treturn config;\n\t}\n}\n","module.exports = require(\"net\");","import * as vscode from 'vscode';\nimport * as fs from 'fs/promises'\nconst lintingFiles = new Set<string>();\nexport type LintOptions = { checkNEWs: boolean, checkUnreachable: boolean }\nexport function isLintingFile(filePath: string): boolean {\n\treturn lintingFiles.has(filePath);\n}\n\nexport function startLintingFile(filePath: string): void {\n\tlintingFiles.add(filePath)\n}\n\nexport function removeLintFileFlag(filePath: string): void {\n\tlintingFiles.delete(filePath)\n}\n\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\nexport default class MumpsLinter {\n\tdiagnosticsCollection: vscode.DiagnosticCollection;\n\tlintOptions: LintOptions\n\tconstructor(collection: vscode.DiagnosticCollection, options: LintOptions) {\n\t\tthis.diagnosticsCollection = collection\n\t\tthis.lintOptions = options\n\t}\n\tasync lintAllFiles(token: vscode.CancellationToken): Promise<void> {\n\t\tconst workspaceFolders = vscode.workspace.workspaceFolders;\n\t\tthis.diagnosticsCollection.clear()\n\t\tlintingFiles.clear()\n\t\tconst diagnosticsProvider = new MumpsDiagnosticsProvider(this.diagnosticsCollection);\n\t\tif (!workspaceFolders) {\n\t\t\tvscode.window.showErrorMessage('No workspace folder is open.');\n\t\t\treturn;\n\t\t}\n\t\tconst statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\n\t\tstatusBarItem.text = 'Linting MUMPS files: 0%';\n\t\tstatusBarItem.show();\n\t\tlet processedFiles = 0;\n\t\tlet totalFiles = 0;\n\t\ttry {\n\t\t\tconst lintPromises: Promise<void>[] = [];\n\t\t\tfor (const folder of workspaceFolders) {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tstatusBarItem.text = 'Linting MUMPS files: Abgebrochen';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst mumpsFiles = await vscode.workspace.findFiles(new vscode.RelativePattern(folder, '**/*.m'));\n\t\t\t\ttotalFiles += mumpsFiles.length;\n\t\t\t\tfor (const file of mumpsFiles) {\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tstatusBarItem.text = 'Linting MUMPS files: Abgebrochen';\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tconst content = await fs.readFile(file.fsPath, 'utf8');\n\t\t\t\t\tlintPromises.push(diagnosticsProvider.updateFileDiagnostics(file, content, this.lintOptions));\n\t\t\t\t\tprocessedFiles++;\n\t\t\t\t\tstatusBarItem.text = `Linting MUMPS files: ${processedFiles} files, ${((processedFiles / totalFiles) * 100).toFixed(2)}%`;\n\t\t\t\t}\n\t\t\t\tawait Promise.all(lintPromises);\n\t\t\t\tlintingFiles.clear()\n\t\t\t\tvscode.window.showInformationMessage(`Linted ${mumpsFiles.length} MUMPS files.`);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tvscode.window.showInformationMessage('Scan abgeschlossen.');\n\t\t\tsetTimeout(() => {\n\t\t\t\tstatusBarItem.dispose(); // Entfernen des StatusBarItem nach kurzer Zeit\n\t\t\t}, 3000);\n\n\t\t}\n\t}\n}","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingDebugSession = void 0;\nconst Logger = require(\"./logger\");\nconst logger = Logger.logger;\nconst debugSession_1 = require(\"./debugSession\");\nclass LoggingDebugSession extends debugSession_1.DebugSession {\n    constructor(obsolete_logFilePath, obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer);\n        this.obsolete_logFilePath = obsolete_logFilePath;\n        this.on('error', (event) => {\n            logger.error(event.body);\n        });\n    }\n    start(inStream, outStream) {\n        super.start(inStream, outStream);\n        logger.init(e => this.sendEvent(e), this.obsolete_logFilePath, this._isServer);\n    }\n    /**\n     * Overload sendEvent to log\n     */\n    sendEvent(event) {\n        if (!(event instanceof Logger.LogOutputEvent)) {\n            // Don't create an infinite loop...\n            let objectToLog = event;\n            if (event instanceof debugSession_1.OutputEvent && event.body && event.body.data && event.body.data.doNotLogOutput) {\n                delete event.body.data.doNotLogOutput;\n                objectToLog = { ...event };\n                objectToLog.body = { ...event.body, output: '<output not logged>' };\n            }\n            logger.verbose(`To client: ${JSON.stringify(objectToLog)}`);\n        }\n        super.sendEvent(event);\n    }\n    /**\n     * Overload sendRequest to log\n     */\n    sendRequest(command, args, timeout, cb) {\n        logger.verbose(`To client: ${JSON.stringify(command)}(${JSON.stringify(args)}), timeout: ${timeout}`);\n        super.sendRequest(command, args, timeout, cb);\n    }\n    /**\n     * Overload sendResponse to log\n     */\n    sendResponse(response) {\n        logger.verbose(`To client: ${JSON.stringify(response)}`);\n        super.sendResponse(response);\n    }\n    dispatchRequest(request) {\n        logger.verbose(`From client: ${request.command}(${JSON.stringify(request.arguments)})`);\n        super.dispatchRequest(request);\n    }\n}\nexports.LoggingDebugSession = LoggingDebugSession;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZ0RlYnVnU2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnaW5nRGVidWdTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBSWhHLG1DQUFtQztBQUNuQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdCLGlEQUF5RDtBQUV6RCxNQUFhLG1CQUFvQixTQUFRLDJCQUFZO0lBQ3BELFlBQTJCLG9CQUE2QixFQUFFLHdDQUFrRCxFQUFFLGlCQUEyQjtRQUN4SSxLQUFLLENBQUMsd0NBQXdDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQVM7UUFHdkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUU7WUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQStCLEVBQUUsU0FBZ0M7UUFDN0UsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQ7O09BRUc7SUFDSSxTQUFTLENBQUMsS0FBMEI7UUFDMUMsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUM5QyxtQ0FBbUM7WUFFbkMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3hCLElBQUksS0FBSyxZQUFZLDBCQUFXLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BHLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUN0QyxXQUFXLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDO2dCQUMzQixXQUFXLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxxQkFBcUIsRUFBRSxDQUFBO2FBQ25FO1lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxXQUFXLENBQUMsT0FBZSxFQUFFLElBQVMsRUFBRSxPQUFlLEVBQUUsRUFBOEM7UUFDN0csTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3RHLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUFDLFFBQWdDO1FBQ25ELE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RCxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFUyxlQUFlLENBQUMsT0FBOEI7UUFDdkQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUUsR0FBRyxDQUFDLENBQUM7UUFDekYsS0FBSyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0Q7QUF0REQsa0RBc0RDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7RGVidWdQcm90b2NvbH0gZnJvbSAnQHZzY29kZS9kZWJ1Z3Byb3RvY29sJztcblxuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5pbXBvcnQge0RlYnVnU2Vzc2lvbiwgT3V0cHV0RXZlbnR9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGNsYXNzIExvZ2dpbmdEZWJ1Z1Nlc3Npb24gZXh0ZW5kcyBEZWJ1Z1Nlc3Npb24ge1xuXHRwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBvYnNvbGV0ZV9sb2dGaWxlUGF0aD86IHN0cmluZywgb2Jzb2xldGVfZGVidWdnZXJMaW5lc0FuZENvbHVtbnNTdGFydEF0MT86IGJvb2xlYW4sIG9ic29sZXRlX2lzU2VydmVyPzogYm9vbGVhbikge1xuXHRcdHN1cGVyKG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEsIG9ic29sZXRlX2lzU2VydmVyKTtcblxuXHRcdHRoaXMub24oJ2Vycm9yJywgKGV2ZW50OiBEZWJ1Z1Byb3RvY29sLkV2ZW50KSA9PiB7XG5cdFx0XHRsb2dnZXIuZXJyb3IoZXZlbnQuYm9keSk7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgc3RhcnQoaW5TdHJlYW06IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSwgb3V0U3RyZWFtOiBOb2RlSlMuV3JpdGFibGVTdHJlYW0pOiB2b2lkIHtcblx0XHRzdXBlci5zdGFydChpblN0cmVhbSwgb3V0U3RyZWFtKTtcblx0XHRsb2dnZXIuaW5pdChlID0+IHRoaXMuc2VuZEV2ZW50KGUpLCB0aGlzLm9ic29sZXRlX2xvZ0ZpbGVQYXRoLCB0aGlzLl9pc1NlcnZlcik7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZEV2ZW50IHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRFdmVudChldmVudDogRGVidWdQcm90b2NvbC5FdmVudCk6IHZvaWQge1xuXHRcdGlmICghKGV2ZW50IGluc3RhbmNlb2YgTG9nZ2VyLkxvZ091dHB1dEV2ZW50KSkge1xuXHRcdFx0Ly8gRG9uJ3QgY3JlYXRlIGFuIGluZmluaXRlIGxvb3AuLi5cblxuXHRcdFx0bGV0IG9iamVjdFRvTG9nID0gZXZlbnQ7XG5cdFx0XHRpZiAoZXZlbnQgaW5zdGFuY2VvZiBPdXRwdXRFdmVudCAmJiBldmVudC5ib2R5ICYmIGV2ZW50LmJvZHkuZGF0YSAmJiBldmVudC5ib2R5LmRhdGEuZG9Ob3RMb2dPdXRwdXQpIHtcblx0XHRcdFx0ZGVsZXRlIGV2ZW50LmJvZHkuZGF0YS5kb05vdExvZ091dHB1dDtcblx0XHRcdFx0b2JqZWN0VG9Mb2cgPSB7IC4uLmV2ZW50IH07XG5cdFx0XHRcdG9iamVjdFRvTG9nLmJvZHkgPSB7IC4uLmV2ZW50LmJvZHksIG91dHB1dDogJzxvdXRwdXQgbm90IGxvZ2dlZD4nIH1cblx0XHRcdH1cblxuXHRcdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShvYmplY3RUb0xvZyl9YCk7XG5cdFx0fVxuXG5cdFx0c3VwZXIuc2VuZEV2ZW50KGV2ZW50KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVybG9hZCBzZW5kUmVxdWVzdCB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVxdWVzdChjb21tYW5kOiBzdHJpbmcsIGFyZ3M6IGFueSwgdGltZW91dDogbnVtYmVyLCBjYjogKHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlKSA9PiB2b2lkKTogdm9pZCB7XG5cdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShjb21tYW5kKX0oJHtKU09OLnN0cmluZ2lmeShhcmdzKX0pLCB0aW1lb3V0OiAke3RpbWVvdXR9YCk7XG5cdFx0c3VwZXIuc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncywgdGltZW91dCwgY2IpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE92ZXJsb2FkIHNlbmRSZXNwb25zZSB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVzcG9uc2UocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzcG9uc2UpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgVG8gY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKX1gKTtcblx0XHRzdXBlci5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgRnJvbSBjbGllbnQ6ICR7cmVxdWVzdC5jb21tYW5kfSgke0pTT04uc3RyaW5naWZ5KHJlcXVlc3QuYXJndW1lbnRzKSB9KWApO1xuXHRcdHN1cGVyLmRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0KTtcblx0fVxufVxuIl19","import * as vscode from 'vscode';\r\nimport { TokenType, LineToken } from './mumpsLineParser'\r\nimport MumpsParseDb from './mumpsParseDb';\r\nconst tokenModifiers = ['readonly', 'deprecated'];\r\nconst tokentypes: string[] = Object.keys(TokenType).map(key => TokenType[key]);\r\ntokentypes.push(\"unreachable\")\r\nconst SemanticTokens = new vscode.SemanticTokensLegend(tokentypes, tokenModifiers);\r\n\r\n//type: \"global\" | \"local\" | \"exfunction\" | \"nonMfunction\" | \"entryref\" | \"operator\" |\r\n//      \"keyword\" | \"ifunction\" | \"label\" | \"comment\" | \"sysvariable\" | \"string\" | \"number\",\r\n\r\n\r\nconst MumpsHighlighter: vscode.DocumentSemanticTokensProvider = {\r\n\t// analyze the document and return semantic tokens\r\n\tprovideDocumentSemanticTokens(document: vscode.TextDocument): vscode.ProviderResult<vscode.SemanticTokens> {\r\n\t\tconst parseDb = MumpsParseDb.getInstance(document)\r\n\t\tconst documentTokens: LineToken[][] = parseDb.getDocumentTokens()\r\n\t\tconst tokensBuilder = new vscode.SemanticTokensBuilder(SemanticTokens);\r\n\t\tconst subtype = \"readonly\"\r\n\t\tfor (let line = 0; line < documentTokens.length; line++) {\r\n\t\t\tconst tokens: LineToken[] = documentTokens[line];\r\n\t\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) {\r\n\t\t\t\tconst t = tokens[tokenId];\r\n\t\t\t\tconst type = t.type;\r\n\t\t\t\tlet position = t.position\r\n\t\t\t\tlet name = t.name\r\n\t\t\t\tif (type === TokenType.exfunction) {\r\n\t\t\t\t\tposition -= 2;\t\t\t//Correct Position because of leading $$\r\n\t\t\t\t\tname = \"$$\" + t.name;\r\n\t\t\t\t} else if (type === TokenType.comment) {\r\n\t\t\t\t\tname = \";\" + name; // Token is too short else\r\n\t\t\t\t}\r\n\t\t\t\tconst typeString = t.isUnreachable ? \"unreachable\" : TokenType[type]\r\n\t\t\t\t//console.log({ Type: TokenType[type], SubType: subtype, line, start: t.position, end: (position + name.length) })\r\n\t\t\t\ttokensBuilder.push(\r\n\t\t\t\t\tnew vscode.Range(new vscode.Position(line, t.position), new vscode.Position(line, position + name.length)),\r\n\t\t\t\t\ttypeString, [subtype]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tokensBuilder.build();\r\n\t}\r\n};\r\n\r\nexport { MumpsHighlighter, SemanticTokens }\r\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runDebugAdapter = void 0;\nconst Net = require(\"net\");\nfunction runDebugAdapter(debugSession) {\n    // parse arguments\n    let port = 0;\n    const args = process.argv.slice(2);\n    args.forEach(function (val, index, array) {\n        const portMatch = /^--server=(\\d{4,5})$/.exec(val);\n        if (portMatch) {\n            port = parseInt(portMatch[1], 10);\n        }\n    });\n    if (port > 0) {\n        // start as a server\n        console.error(`waiting for debug protocol on port ${port}`);\n        Net.createServer((socket) => {\n            console.error('>> accepted connection from client');\n            socket.on('end', () => {\n                console.error('>> client connection closed\\n');\n            });\n            const session = new debugSession(false, true);\n            session.setRunAsServer(true);\n            session.start(socket, socket);\n        }).listen(port);\n    }\n    else {\n        // start a session\n        //console.error('waiting for debug protocol on stdin/stdout');\n        const session = new debugSession(false);\n        process.on('SIGTERM', () => {\n            session.shutdown();\n        });\n        session.start(process.stdin, process.stdout);\n    }\n}\nexports.runDebugAdapter = runDebugAdapter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRGVidWdBZGFwdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3J1bkRlYnVnQWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztnR0FHZ0c7OztBQUVoRywyQkFBMkI7QUFJM0IsU0FBZ0IsZUFBZSxDQUFDLFlBQWlDO0lBRWhFLGtCQUFrQjtJQUNsQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLO1FBQ3ZDLE1BQU0sU0FBUyxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLFNBQVMsRUFBRTtZQUNkLElBQUksR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDYixvQkFBb0I7UUFDcEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RCxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtnQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2hCO1NBQU07UUFFTixrQkFBa0I7UUFDbEIsOERBQThEO1FBQzlELE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtZQUMxQixPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzdDO0FBQ0YsQ0FBQztBQWxDRCwwQ0FrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0ICogYXMgTmV0IGZyb20gJ25ldCc7XG5cbmltcG9ydCB7IERlYnVnU2Vzc2lvbiB9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkRlYnVnQWRhcHRlcihkZWJ1Z1Nlc3Npb246IHR5cGVvZiBEZWJ1Z1Nlc3Npb24pIHtcblxuXHQvLyBwYXJzZSBhcmd1bWVudHNcblx0bGV0IHBvcnQgPSAwO1xuXHRjb25zdCBhcmdzID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuXHRhcmdzLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaW5kZXgsIGFycmF5KSB7XG5cdFx0Y29uc3QgcG9ydE1hdGNoID0gL14tLXNlcnZlcj0oXFxkezQsNX0pJC8uZXhlYyh2YWwpO1xuXHRcdGlmIChwb3J0TWF0Y2gpIHtcblx0XHRcdHBvcnQgPSBwYXJzZUludChwb3J0TWF0Y2hbMV0sIDEwKTtcblx0XHR9XG5cdH0pO1xuXG5cdGlmIChwb3J0ID4gMCkge1xuXHRcdC8vIHN0YXJ0IGFzIGEgc2VydmVyXG5cdFx0Y29uc29sZS5lcnJvcihgd2FpdGluZyBmb3IgZGVidWcgcHJvdG9jb2wgb24gcG9ydCAke3BvcnR9YCk7XG5cdFx0TmV0LmNyZWF0ZVNlcnZlcigoc29ja2V0KSA9PiB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCc+PiBhY2NlcHRlZCBjb25uZWN0aW9uIGZyb20gY2xpZW50Jyk7XG5cdFx0XHRzb2NrZXQub24oJ2VuZCcsICgpID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignPj4gY2xpZW50IGNvbm5lY3Rpb24gY2xvc2VkXFxuJyk7XG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlLCB0cnVlKTtcblx0XHRcdHNlc3Npb24uc2V0UnVuQXNTZXJ2ZXIodHJ1ZSk7XG5cdFx0XHRzZXNzaW9uLnN0YXJ0KHNvY2tldCwgc29ja2V0KTtcblx0XHR9KS5saXN0ZW4ocG9ydCk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBzdGFydCBhIHNlc3Npb25cblx0XHQvL2NvbnNvbGUuZXJyb3IoJ3dhaXRpbmcgZm9yIGRlYnVnIHByb3RvY29sIG9uIHN0ZGluL3N0ZG91dCcpO1xuXHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlKTtcblx0XHRwcm9jZXNzLm9uKCdTSUdURVJNJywgKCkgPT4ge1xuXHRcdFx0c2Vzc2lvbi5zaHV0ZG93bigpO1xuXHRcdH0pO1xuXHRcdHNlc3Npb24uc3RhcnQocHJvY2Vzcy5zdGRpbiwgcHJvY2Vzcy5zdGRvdXQpO1xuXHR9XG59XG4iXX0=","function Subject() {\n  this.waiters = [];\n}\n\nSubject.prototype.wait = function (timeout) {\n  var self = this;\n  var waiter = {};\n  this.waiters.push(waiter);\n  var promise = new Promise(function (resolve) {\n    var resolved = false;\n    waiter.resolve = function (noRemove) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      if (waiter.timeout) {\n        clearTimeout(waiter.timeout);\n        waiter.timeout = null;\n      }\n      if (!noRemove) {\n        var pos = self.waiters.indexOf(waiter);\n        if (pos > -1) {\n          self.waiters.splice(pos, 1);\n        }\n      }\n      resolve();\n    };\n  });\n  if (timeout > 0 && isFinite(timeout)) {\n    waiter.timeout = setTimeout(function () {\n      waiter.timeout = null;\n      waiter.resolve();\n    }, timeout);\n  }\n  return promise;\n};\n\nSubject.prototype.notify = function () {\n  if (this.waiters.length > 0) {\n    this.waiters.pop().resolve(true);\n  }\n};\n\nSubject.prototype.notifyAll = function () {\n  for (var i = this.waiters.length - 1; i >= 0; i--) {\n    this.waiters[i].resolve(true);\n  }\n  this.waiters = [];\n}\n\nexports.Subject = Subject;\n","module.exports = require(\"vscode\");","interface ParameterDefinition {\r\n\tname: string,\r\n\ttype: string,\r\n\tdescription?: string\r\n\toptional?: boolean\r\n}\r\nexport interface languageToken {\r\n\tname: string,\r\n\ttype: string,\r\n\tabbreviation: string,\r\n\tdescription: string,\r\n\tparameters?: ParameterDefinition[],\r\n\treturns?: { type: string }\r\n}\r\nexport const definitionsArray: languageToken[] =\r\n\t[{\r\n\t\t\"name\": \"BREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"B\",\r\n\t\t\"description\": \"Suspend execution or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"CLOSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"C\",\r\n\t\t\"description\": \"Release an I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"DO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"D\",\r\n\t\t\"description\": \"Execute a program, section of code or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ELSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"E\",\r\n\t\t\"description\": \"Conditional execution based on $test\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"FOR\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"F\",\r\n\t\t\"description\": \"Iterative execution of a line or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"GOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"G\",\r\n\t\t\"description\": \"Transfer of control to a label or program\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Terminate execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HANG\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Delay execution for a specified period of time\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"IF\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"I\",\r\n\t\t\"description\": \"Conditional execution of remainder of line\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"JOB\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"J\",\r\n\t\t\"description\": \"Start an independent process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"LOCK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"L\",\r\n\t\t\"description\": \"Exclusive access/release named resource\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"KILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"K\",\r\n\t\t\"description\": \"Deletes a local or global variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"MERGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"M\",\r\n\t\t\"description\": \"Copy arrays\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"NEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"N\",\r\n\t\t\"description\": \"Create new copies of local variables\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"OPEN\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"O\",\r\n\t\t\"description\": \"Obtain ownership of a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"QUIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"Q\",\r\n\t\t\"description\": \"End a for loop or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"READ\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"R\",\r\n\t\t\"description\": \"Read from a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SET\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"S\",\r\n\t\t\"description\": \"Assign a value to a global or local variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TC\",\r\n\t\t\"description\": \"Commit a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TRESTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRE\",\r\n\t\t\"description\": \"Roll back / restart a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TROLLBACK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRO\",\r\n\t\t\"description\": \"Roll back a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TS\",\r\n\t\t\"description\": \"Begin a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"USE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"U\",\r\n\t\t\"description\": \"Select which device to read/write\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"VIEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"WRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"W\",\r\n\t\t\"description\": \"Writes to device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"XECUTE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"X\",\r\n\t\t\"description\": \"Dynamically execute strings\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZA\",\r\n\t\t\"description\": \"Reserves the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZBREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZB\",\r\n\t\t\"description\": \"Sets or clears a routine breakpoint\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCOMPILE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZCOM\",\r\n\t\t\"description\": \"Compiles a routine\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCONTINUE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZC\",\r\n\t\t\"description\": \"Continues excutioen after a break\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZDEALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZD\",\r\n\t\t\"description\": \"Release the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZEDIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZE\",\r\n\t\t\"description\": \"Invokes editor for routine editing\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZGOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZG\",\r\n\t\t\"description\": \"Moves to EntryRef on a given stacklevel\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZHALT\",\r\n\t\t\"description\": \"Stops program execution with a return code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHELP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZH\",\r\n\t\t\"description\": \"Accessses M help library\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZKILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZK\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZLINK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZL\",\r\n\t\t\"description\": \"Compiles an links a routine to the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZMESSAGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"description\": \"Raises an exception specified by given code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZPRINT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZP\",\r\n\t\t\"description\": \"Displays source code lines\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZRUPDATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZRUPDATE\",\r\n\t\t\"description\": \"Publishes the new versions of routines to subscribers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSHOW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSH\",\r\n\t\t\"description\": \"Displays information about the current environment\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSTEP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZST\",\r\n\t\t\"description\": \"Controls routine execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSYSTEM\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSY\",\r\n\t\t\"description\": \"Creates a child of the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTC\",\r\n\t\t\"description\": \"Marks the end of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTRIGGER\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTR\",\r\n\t\t\"description\": \"Invokes specified Global Triggers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTS\",\r\n\t\t\"description\": \"Marks the beginning of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWITHDRAW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWI\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWR\",\r\n\t\t\"description\": \"Displays a complete global or local variable\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$DEVICE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Status of the current device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ECODE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$EC\",\r\n\t\t\"description\": \"List of unresolved error codes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ESTACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ES\",\r\n\t\t\"description\": \"Number of stack levels; NEWing $ESTACK resets it to 0\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ETRAP\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ET\",\r\n\t\t\"description\": \"Code to execute on error\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$HOROLOG\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$H\",\r\n\t\t\"description\": \"Days,seconds time stamp\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$IO\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$I\",\r\n\t\t\"description\": \"Current IO unit\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JOB\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Current process ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$KEY\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$K\",\r\n\t\t\"description\": \"String that terminated the most recent READ command\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PRINCIPAL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Principal I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUIT\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Whether the current block of code was called as an extrinsic function (e.g. via $$)\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Current process stack level\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STORAGE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Amount of memory available, in bytes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SYSTEM\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$SY\",\r\n\t\t\"description\": \"System ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEST\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Result of prior IF command or READ/OPEN/LOCK command if invoked with a timeout\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TLEVEL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TL\",\r\n\t\t\"description\": \"Number transactions in process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRESTART\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Number of restarts on current transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$X\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$X\",\r\n\t\t\"description\": \"Position of horizontal cursor in current I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$Y\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Y\",\r\n\t\t\"description\": \"Position of vertical cursor in current I/O device\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$ASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$A\",\r\n\t\t\"description\": \"ASCII numeric code of a character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the character in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$CHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$C\",\r\n\t\t\"description\": \"ASCII character from numeric code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"CODE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Numeric code to convert to a character\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$DATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to get data about, e.g. ^X\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$EXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$E\",\r\n\t\t\"description\": \"Extract a substring\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to get a substring from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based start index; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"END\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based end index; defaults to 2\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$F\",\r\n\t\t\"description\": \"Find the 1-based index after the end of a substring or 0 if not found\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"WITHIN\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to search in\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The substring to search for\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index to start searching from; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FNUMBER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$FN\",\r\n\t\t\"description\": \"Format a number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"NUMBER\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number to format\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FORMAT\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"One or more of the following: +: forces \\\"+\\\" on positive numbers; -: omits the \\\"-\\\" on negative numbers; ,: comma-separates the number by thousands; T: puts the sign in the trailing position; P: wraps negative numbers in parentheses and wraps positive numbers in spaces and may only be combined with comma (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The numer of digits after the decimal point\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$GET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$G\",\r\n\t\t\"description\": \"Get default or actual value\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to query, e.g. ^X(THIS,THAT)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DEFAULT\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"A value to use if VAR has no value; defaults to \\\"\\\"\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Right-justify a number or string by prefixing with spaces\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to justify\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MINLENGTH\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The minimum length of the result\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $JUSTIFY treat VALUE as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$LENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$L\",\r\n\t\t\"description\": \"Determine string length\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"If present, $LENGTH returns one more than the number of occurences of SUBSTRING in VALUE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$NAME\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$NA\",\r\n\t\t\"description\": \"Evaluate and describe a variable\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to evaluate, including naked references\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MAXSUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The maximum number of subscripts to evaluate if VAR is an array\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ORDER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$O\",\r\n\t\t\"description\": \"Find the subscript of the next or previous node\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIRECTION\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"1: forward, -1: reverse; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PIECE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Extract substring based on pattern\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A delimiting string within VALUE\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Which 1-based piece of the split string to return; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LASTPIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index of the last piece of the split string to return; defaults to PIECE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QLENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QL\",\r\n\t\t\"description\": \"Number of subscripts in an array reference\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QSUBSCRIPT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QS\",\r\n\t\t\"description\": \"Value of specified subscript\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The 1-based index of the subscript to find; special values include -1: environment and 0: unsubscripted name\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUERY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Next item in an array; invoke multiple times to iterate the entire array\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$RANDOM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$R\",\r\n\t\t\"description\": \"Random number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LIMIT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The generated random number will be between 0 (inclusive) and this LIMIT (exclusive)\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$REVERSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$RE\",\r\n\t\t\"description\": \"String in reverse order\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to reverse\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SELECT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Value of first true argument\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"TVEXPR\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"description\": \"An expression to test for truth, followed by a colon and a value, e.g. i=42:\\\"Answered!\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional truth value expressions to test; the last expression often starts with 1: to avoid errors\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Returns information about the process stack\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LEVEL\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"-1: returns the highest stack level; 0: returns information about how the program was started; 1 to $STACK(-1): returns information about how the stack level was created\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FIELD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"\\\"MCODE\\\": the line of code that was executed; \\\"PLACE\\\": location of the executed code; \\\"ECODE\\\": the error code(s) added at the stack level, if any\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEXT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Returns the text of a line of M[UMPS] code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"REFERENCE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A reference to a code location, e.g. 'LABEL' or '+4^PROGRAM' or 'LABEL^PROGRAM', etc.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRANSLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Translate characters in a string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The value to translate\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"OLD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Characters in VALUE to replace\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NEW\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Characters to replace OLD characters with; if not provided then OLD characters will be removed\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$VIEW\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZAHANDLE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZAH\",\r\n\t\t\"description\": \"Returns unique identifier for a name or an alias container\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to find the handle for e.g\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZA\",\r\n\t\t\"description\": \"ASCII numeric code of a 8-bit character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the byte in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZATRANSFORM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZATR\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument expr in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"String to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ID\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NORMALIZE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MCOLLATION\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether to use standard M collation of numbers before strings, the default or zero (0), or to sort all values as strings (1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITAND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITAND\",\r\n\t\t\"description\": \"Performs a logical AND function on two bit strings and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where both of the input strings have set bits). Positions corresponding to positions where either of the input strings have a cleared bit, also have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITCOUNT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITCOUNT\",\r\n\t\t\"description\": \"Returns the number of ON bits in a bit string.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"EXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITFIND\",\r\n\t\t\"description\": \"Performs the analog of $FIND() on a bit string. It returns an integer that identifies the position after the first position equal to a truth-valued expression that occurs at, or after, the specified starting position\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the bit value for which $ZBITFIND() searches (1 or 0)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional integer argument specifies the starting position at which to begin the search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITGET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITGET\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer argument specifies the position in the string for which the value is requested\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITLEN\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITLEN\",\r\n\t\t\"description\": \"Returns the length of a bit string, in bits\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITNOT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITNOT\",\r\n\t\t\"description\": \"Returns a copy of the bit string with each input bit position inverted\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to invert\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITOR\",\r\n\t\t\"description\": \"Performs a bitwise logical OR on two bit strings, and returns a bit string equal in length to the longer of the two arguments (containing set bits in those positions where either or both of the input strings have set bits). Positions that correspond to positions where neither input string has a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSET\",\r\n\t\t\"description\": \"Returns an edited copy of the input bit string with a specified bit set to the value of the truth-valued expression\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the input bit string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer expression specifies the position of the bit to manipulate. Arguments that are negative, zero, or exceed the length of the bit string produce a run-time error. $ZBIT functions count the first bit as position one (1)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the value to which to set the specified bit (0 or 1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSTR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSTR\",\r\n\t\t\"description\": \"Returns a bit string of a specified length with all bit positions initially set to either zero or one\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LENGTH\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression specifies the length of the bit string to return; arguments that exceed the maximum length of 253,952 produce a run-time error\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional truth-valued expression specifies the value to which all bit positions should initially be set (0 or 1). If this argument is missing, the bits are set to zero\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITXOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITXOR\",\r\n\t\t\"description\": \"Performs a bitwise exclusive OR on two bit strings, and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where either (but not both) of the input strings have set bits). Positions that correspond to positions where neither or both input strings have a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCH\",\r\n\t\t\"description\": \"Returns a string composed of bytes represented by the integer octet values specified in its argument(s).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"Integer\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression(s) specify the numeric byte value of the byte(s) $ZCHAR() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCOLLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument glvn in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or unsubscripted global or local variable name specifies the key to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TransformId\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NormForm\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCONVERT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns its first argument as a string or value converted to a different encoding or numeric base. The two argument form changes the encoding for case within the ASCII character set. The three argument form changes the encoding scheme or base. Supported bases are decimal 'DEC' and 'HEX', case insensitive).\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"string or value to convert. $ZCONVERT() generates a run-time error if for Unicode conversion if the string contains a code-point value that is not in the character set, or for base conversion if the value to be converted is out of range\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"description\": \"Specifies a code that determines the form of the result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Code that specifies the character set or base of the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZDATA\",\r\n\t\t\"description\": \"Extends $DATA() to reflect the current alias state of the lvn or name argument to identify alias and alias container variables. It treats variables joined through pass-by-reference as well as TP RESTART variables within a transaction as alias variables. However, it does not distinguish nodes having alias containers among their descendants.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants; 100; 101; 111\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a date and/or time formatted as text based on an argument formatted in the manner of $HOROLOG\",\r\n\t\t\"abbreviation\": \"$ZDATE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"$HOROLOG format of the date and/or time\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Pattern of desired output p.e. 'YEAR-MM-DD'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of 12 month codes, separated by commas (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of seven day codes, separated by commas (,)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZEXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZE\",\r\n\t\t\"description\": \"Returns a byte sequence from a given sequence of octets (8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies a sequence of octets (8-bit bytes) from which $ZEXTRACT() derives a byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the starting byte position in the byte string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the ending byte position for the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZF\",\r\n\t\t\"description\": \"Returns an integer byte position that locates the occurrence of a byte sequence within a sequence of octets(8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets (8-bit bytes) in which $ZFIND() searches for the byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \" specifies the byte sequence for which $ZFIND() searches\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Identifies the starting byte position for the $ZFIND() search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZGETJPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns job or process information of the specified process\",\r\n\t\t\"abbreviation\": \"$ZGETJPI\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Identifies the PID of the target job. If expr1 is an empty string (“”), $ZGETJPI() returns information about the current process.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the item keyword identifying the type of information returned\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJOBEXAM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the full specification of the file specified by the optional expr1 argument into which the function places a ZSHOW output specified by expr2\",\r\n\t\t\"abbreviation\": \"$ZJOBEXAM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"A template output device specification. It can be a device, a file directory, or a file name.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Defaulting to '*', expr2 specifies the ZSHOW Information Codes of data to be included in the output\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZJ\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"The expression specifies the sequence of octets formatted by $ZJUSTIFY().\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the minimum size of the resulting byte sequence.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $ZJUSTIFY treat expr1 as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZLENGTH\",\r\n\t\t\"abbreviation\": \"$ZL\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the length of a sequence of octets measured in bytes, or in “pieces” separated by a delimiter specified by one of its arguments\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets that $ZLENGTH() “measures”.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"specifies the delimiter that defines the measure; if this argument is missing, $ZLENGTH() returns the number of bytes in the sequence of octets.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZMESSAGE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a message string associated with a specified status code .\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The integer expression specifies the status code for which $ZMESSAGE() returns error message text .\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPARSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Expands a file name to a full pathname and then returns the full pathname or one of its fields (directory, name, or extension).\",\r\n\t\t\"abbreviation\": \"$ZPARSE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the file name; if the file name is not valid, $ZPARSE() returns a null string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the field of the pathname that $ZPARSE() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr5\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the mode or type of parse that $ZPARSE() performs.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPIECE\",\r\n\t\t\"abbreviation\": \"$ZPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Return a sequence of bytes delimited by a specified byte sequence made up of one or more bytes.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"specifies the sequence of octets from which $ZPIECE() takes its result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the delimiting byte sequence that determines the piece 'boundaries'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the beginning piece to return\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the last piece to return\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPREVIOUS\",\r\n\t\t\"abbreviation\": \"$ZP\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the subscript of the previous local or global variable name in collation sequence within the array level specified by its argument.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"glvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Specifies the node prior to which $ZPREVIOUS() searches backwards for a defined node with data and/or descendants.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZQGBLMOD\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Enables an application to determine whether it can safely apply a lost transaction to the database.\",\r\n\t\t\"abbreviation\": \"$ZQGBLMOD\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"gvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or non-subscripted global variable name (gvn) specifies the target node.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"boolean\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSEARCH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Attempts to locate a file matching the specified file name. If the file exists, it returns the file name; if the file does not exist, it returns the null string.\",\r\n\t\t\"abbreviation\": \"$ZSEARCH\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Contains a file name, with or without wildcards, for which $ZSEARCH() attempts to locate a matching file.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an integer expression that is a stream number. It can be any value from 0 to 255 for each search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSIGPROC\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Sends a signal to a process. The format for the $ZSIGPROC function is\",\r\n\t\t\"abbreviation\": \"$ZSIGPROC\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The pid of the process to which the signal is to be sent.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The system signal name (e.g., 'SIGUSR1' or just 'USR1').\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSOCKET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns information about a SOCKET device and its attached sockets\",\r\n\t\t\"abbreviation\": \"$ZSOCKET\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the SOCKET device name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies a keyword identifying the type of information returned\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the index (starting at zero) of a socket attached to the device\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an individual delimiter when the second expression specifies DELIMITER.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}\r\n\t];\r\n","module.exports = require(\"events\");","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\n\r\nexport default class MumpsDefinitionProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenRefLocation();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser, label } from './mumpsLineParser';\nconst parser = new MumpsLineParser();\nimport { definitionsArray } from './language-definitions';\nconst definitions = {};\nimport * as fs from 'fs'\nimport * as path from 'path';\nconst Uri = vscode.Uri;\nconst EXTENSIONS = ['.m', '.int', '.zwr', '.M', '.INT', '.ZWR'];\nconst cache: { fsPath: string, text: string } = { fsPath: \"\", text: \"\" };\ninterface LocationInfo { location: vscode.Location, commentText: string, labelLine: string }\ninterface ParameterDefinition {\n\tname: string,\n\ttype: string,\n\tdescription?: string\n\toptional?: boolean\n}\ninterface TokenDefinition {\n\tname: string,\n\ttype: string,\n\tabbreviation?: string,\n\tcommentText?: string,\n\tdescription: string,\n\tparameters?: ParameterDefinition[],\n\treturns?: { type: string }\n\tlocation?: vscode.Location\n}\ninterface TokenData {\n\tname: string,\n\tparameters: vscode.ParameterInformation[],\n\tdescription: string\n}\nfunction addDefinition(name: string, definition: TokenDefinition) {\n\tif (!definitions[name]) {\n\t\tdefinitions[name] = [definition];\n\t} else {\n\t\tdefinitions[name].push(definition);\n\t}\n}\nif (Object.keys(definitions).length === 0) {\n\tfor (const definition of definitionsArray) {\n\t\taddDefinition(definition.name, definition);\n\t\tif (definition.abbreviation) {\n\t\t\taddDefinition(definition.abbreviation, definition);\n\t\t}\n\t}\n}\nexport class MumpsTokenHelper {\n\tprivate _document: vscode.TextDocument;\n\tprivate _position: vscode.Position;\n\tconstructor(document: vscode.TextDocument, position: vscode.Position) {\n\t\tthis._document = document;\n\t\tthis._position = position;\n\t}\n\tprivate _getText(uri: vscode.Uri) {\n\t\tif (uri === this._document.uri) {\n\t\t\treturn this._document.getText();\n\t\t}\n\t\tif (uri.fsPath === cache.fsPath) {\n\t\t\treturn cache.text;\n\t\t}\n\t\ttry {\n\t\t\tcache.text = fs.readFileSync(uri.fsPath, 'utf8');\n\t\t\tcache.fsPath = uri.fsPath;\n\t\t\treturn cache.text;\n\t\t} catch {\n\t\t\treturn '';\n\t\t}\n\t}\n\tpublic getTokenSignature(): vscode.SignatureHelp | undefined {\n\t\tconst line = this._document.lineAt(this._position);\n\t\tif (!line) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = line.text;\n\t\tconst myToken = this._getFunctionToken(text);\n\t\tif (myToken === undefined || (myToken.type !== TokenType.ifunction && myToken.type !== TokenType.exfunction)) {\n\t\t\treturn;\n\t\t}\n\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\tif (!definition) {\n\t\t\treturn;\n\t\t}\n\t\tconst help = new vscode.SignatureHelp();\n\t\thelp.signatures = [MumpsTokenHelper.convertDefinition(definition)];\n\t\thelp.activeSignature = 0;\n\t\thelp.activeParameter = MumpsTokenHelper._calculateActiveParameter(line.text, myToken.position + myToken.name.length, this._position.character);\n\t\treturn help;\n\t}\n\tpublic getTokenHoverInfo(): vscode.Hover | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.exfunction || myToken.type === TokenType.ifunction ||\n\t\t\tmyToken.type === TokenType.entryref || myToken.type === TokenType.keyword) {\n\t\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (!definition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (definition.parameters) {\n\t\t\t\tdefinition.name += \"(\";\n\t\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tdefinition.name += \",\";\n\t\t\t\t\t}\n\t\t\t\t\tdefinition.name += definition.parameters[i].name;\n\t\t\t\t}\n\t\t\t\tdefinition.name += \")\";\n\t\t\t}\n\t\t\tconst snippet = { language: 'mumps', value: definition.name };\n\t\t\treturn new vscode.Hover([snippet, definition.commentText || definition.description]);\n\t\t}\n\t}\n\tprivate static _calculateActiveParameter(lineText: string, parametersStartIndex: number, insertIndex: number) {\n\t\tlet active = 0;\n\t\tlet depth = 0;\n\t\tlet isInsideString = false;\n\t\tfor (let i = parametersStartIndex + 1; i < insertIndex; i++) {\n\t\t\tconst char = lineText.charAt(i);\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === ')' && !isInsideString) {\n\t\t\t\tdepth--;\n\t\t\t} else if (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t} else if (char === ',' && depth === 0 && !isInsideString) {\n\t\t\t\tactive++;\n\t\t\t}\n\t\t}\n\t\treturn active;\n\t}\n\tpublic getTokenRefLocation(): vscode.Location | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.entryref || myToken.type === TokenType.exfunction) {\n\t\t\tconst tokendata = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (tokendata) {\n\t\t\t\treturn tokendata.location;\n\t\t\t}\n\t\t}\n\t}\n\n\t// get Information for given function or keyword\n\tpublic getTokenData(functionName: string, functionType: TokenType): TokenDefinition | undefined {\n\t\tif (functionType === TokenType.ifunction || functionType === TokenType.keyword) {\n\t\t\tconst matches = definitions[functionName.toUpperCase()];\n\t\t\tif (matches) {\n\t\t\t\tfor (const definition of matches) {\n\t\t\t\t\tif (definition.type !== 'function' && definition.type !== \"command\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\treturn Object.assign({}, definition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (functionType === TokenType.exfunction || functionType === TokenType.entryref) {\n\t\t\tconst locationInfo = this.getPositionForLabel(functionName);\n\t\t\tif (locationInfo) {\n\t\t\t\treturn MumpsTokenHelper._extractDefinition(locationInfo);\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\tpublic static convertDefinition(definition: TokenDefinition): vscode.SignatureInformation {\n\t\tconst data: TokenData = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tparameters: []\n\t\t}\n\t\tdata.description = definition.description;\n\t\tif (definition.parameters) {\n\t\t\tdata.name = definition.name + '(';\n\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\tconst parameter = definition.parameters[i];\n\t\t\t\tlet description = parameter.optional ? '(optional) ' : '';\n\t\t\t\tdescription += parameter.description || parameter.name;\n\t\t\t\tdata.parameters.push(new vscode.ParameterInformation(parameter.name, description));\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += '[';\n\t\t\t\t}\n\t\t\t\tdata.name += (i === 0 ? '' : ',');\n\t\t\t\tdata.name += parameter.name + ':' + parameter.type;\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += ']';\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.name += ')';\n\t\t\tif (definition.returns) {\n\t\t\t\tdata.name += ':' + definition.returns;\n\t\t\t}\n\t\t}\n\t\tconst signature = new vscode.SignatureInformation(data.name, data.description);\n\t\tsignature.parameters = data.parameters;\n\t\treturn signature;\n\t}\n\tpublic getPositionForLabel(label: string): LocationInfo | undefined {\n\t\tlet fileUri = this._document.uri;\n\t\tlet nakedLabel = label.split(\"^\")[0];\n\t\tlet offset = 0;\n\t\tlet labelLine = \"\";\n\t\tif (nakedLabel.split(\"+\")[1] !== undefined) {\n\t\t\toffset = parseInt(label.split(\"+\")[1]);\n\t\t\tnakedLabel = nakedLabel.split(\"+\")[0];\n\t\t}\n\t\tif (label.indexOf(\"^\") !== -1) {\n\t\t\tlet fileName = label.split(\"^\")[1];\n\t\t\tif (fileName.charAt(0) === '%') {\n\t\t\t\tfileName = '_' + fileName.substring(1);\n\t\t\t}\n\t\t\tlet fullPath = path.resolve(this._document.uri.fsPath, '../' + fileName);\n\t\t\tfor (const extension of EXTENSIONS) {\n\t\t\t\tconst extendedPath = fullPath + extension;\n\t\t\t\tif (fs.existsSync(extendedPath)) {\n\t\t\t\t\tfullPath = extendedPath;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfileUri = Uri.file(fullPath);\n\t\t}\n\t\tconst lines: string[] = this._getText(fileUri).split(\"\\n\");\n\t\tlet commentText = \"\";\n\t\tlet i = 0;\n\t\tconst labelLength = nakedLabel.length;\n\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\tif (labelLength === 0 || (lines[i].startsWith(nakedLabel) && (lines[i].length === labelLength || lines[i][labelLength].match(/(;|\\s|\\(|:)/) !== null))) {\n\t\t\t\tlabelLine = lines[i];\n\t\t\t\tcommentText += lines[i] + \"\\n\";\n\t\t\t\tfor (let j = i - 1; j > 0; j--) {\n\t\t\t\t\tif (lines[j].length === 0 || lines[j].match(/^\\s*;/)) {\n\t\t\t\t\t\tcommentText += lines[j] + \"\\n\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (commentText.length > 0) {\n\t\t\tcommentText = commentText.split(\"\\n\").reverse().join(\"\\n\")\n\t\t\treturn {\n\t\t\t\tcommentText,\n\t\t\t\tlocation: new vscode.Location(fileUri, new vscode.Position(i + offset, 0)),\n\t\t\t\tlabelLine\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\tprivate static _extractDefinition(locationInfo: LocationInfo): TokenDefinition | undefined {\n\t\tconst definition: TokenDefinition = {\n\t\t\tname: '',\n\t\t\ttype: 'function',\n\t\t\tcommentText: '',\n\t\t\tdescription: '',\n\t\t\treturns: { type: '' },\n\t\t\tlocation: locationInfo.location\n\t\t};\n\t\tconst labelLines = locationInfo.commentText;\n\t\tdefinition.commentText = labelLines\n\t\t//const definitionRegex = /^(\\d+)|([%A-Z][A-Z0-9]*)(\\((,?[%A-Z][A-Z0-9]*)+\\))?/i;\n\t\tconst result = label.exec(locationInfo.labelLine);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tdefinition.name = result[1];\n\t\tif (labelLines.indexOf(';')) {\n\t\t\tdefinition.commentText = labelLines.substring(labelLines.indexOf(';') + 1);\n\t\t}\n\t\tlet parameterNames: string[] = [];\n\t\tconst parametersByName = {};\n\t\tif (result[3] !== undefined) {\n\t\t\tparameterNames = result[3].substring(1, result[3].length - 1).split(',')\n\t\t\tdefinition.parameters = [];\n\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\tdefinition.parameters.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: parameterNames[i],\n\t\t\t\t\t\ttype: 'any'\n\t\t\t\t\t});\n\t\t\t\tparametersByName[parameterNames[i]] = definition.parameters.length - 1;\n\t\t\t}\n\t\t}\n\t\tif (labelLines !== \"\") {\n\t\t\tconst description = labelLines.match(/DESCRIPTION:.*/i)\n\t\t\tif (description !== null) { definition.description = description[0]; }\n\n\t\t\tfor (const param in parametersByName) {\n\t\t\t\tconst paramDescription = labelLines.match(new RegExp(\"\\\\s\" + param + \"(\\\\(.*\\\\))?:.*\", 'i'))\n\n\t\t\t\tif (paramDescription !== null) { definition.parameters![parametersByName[param]].description = paramDescription[0] }\n\t\t\t}\n\t\t}\n\t\treturn definition;\n\t}\n\tprivate _getFunctionToken(lineText: string) {\n\t\tlet depth = 1;\n\t\tlet index: number;\n\t\tconst linePosition = this._position.character;\n\t\tfor (index = linePosition - 1; index > 0 && depth > 0; index--) {\n\t\t\tconst char = lineText.charAt(index);\n\t\t\tif (char === ')') {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === '(') {\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t}\n\t\tif (depth > 0 || index <= 0) {\n\t\t\treturn;\n\t\t}\n\t\treturn parser.getTokenAt(lineText, index);\n\t}\n}\n\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsSignatureHelpProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideSignatureHelp(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenSignature();\r\n\t}\r\n}\r\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolServer = void 0;\nconst ee = require(\"events\");\nconst messages_1 = require(\"./messages\");\nclass Disposable0 {\n    dispose() {\n    }\n}\nclass Emitter {\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArg) => {\n                this._listener = listener;\n                this._this = thisArg;\n                let result;\n                result = {\n                    dispose: () => {\n                        this._listener = undefined;\n                        this._this = undefined;\n                    }\n                };\n                return result;\n            };\n        }\n        return this._event;\n    }\n    fire(event) {\n        if (this._listener) {\n            try {\n                this._listener.call(this._this, event);\n            }\n            catch (e) {\n            }\n        }\n    }\n    hasListener() {\n        return !!this._listener;\n    }\n    dispose() {\n        this._listener = undefined;\n        this._this = undefined;\n    }\n}\nclass ProtocolServer extends ee.EventEmitter {\n    constructor() {\n        super();\n        this._sendMessage = new Emitter();\n        this._sequence = 1;\n        this._pendingRequests = new Map();\n        this.onDidSendMessage = this._sendMessage.event;\n    }\n    // ---- implements vscode.Debugadapter interface ---------------------------\n    dispose() {\n    }\n    handleMessage(msg) {\n        if (msg.type === 'request') {\n            this.dispatchRequest(msg);\n        }\n        else if (msg.type === 'response') {\n            const response = msg;\n            const clb = this._pendingRequests.get(response.request_seq);\n            if (clb) {\n                this._pendingRequests.delete(response.request_seq);\n                clb(response);\n            }\n        }\n    }\n    _isRunningInline() {\n        return this._sendMessage && this._sendMessage.hasListener();\n    }\n    //--------------------------------------------------------------------------\n    start(inStream, outStream) {\n        this._writableStream = outStream;\n        this._rawData = Buffer.alloc(0);\n        inStream.on('data', (data) => this._handleData(data));\n        inStream.on('close', () => {\n            this._emitEvent(new messages_1.Event('close'));\n        });\n        inStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'inStream error: ' + (error && error.message)));\n        });\n        outStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'outStream error: ' + (error && error.message)));\n        });\n        inStream.resume();\n    }\n    stop() {\n        if (this._writableStream) {\n            this._writableStream.end();\n        }\n    }\n    sendEvent(event) {\n        this._send('event', event);\n    }\n    sendResponse(response) {\n        if (response.seq > 0) {\n            console.error(`attempt to send more than one response for command ${response.command}`);\n        }\n        else {\n            this._send('response', response);\n        }\n    }\n    sendRequest(command, args, timeout, cb) {\n        const request = {\n            command: command\n        };\n        if (args && Object.keys(args).length > 0) {\n            request.arguments = args;\n        }\n        this._send('request', request);\n        if (cb) {\n            this._pendingRequests.set(request.seq, cb);\n            const timer = setTimeout(() => {\n                clearTimeout(timer);\n                const clb = this._pendingRequests.get(request.seq);\n                if (clb) {\n                    this._pendingRequests.delete(request.seq);\n                    clb(new messages_1.Response(request, 'timeout'));\n                }\n            }, timeout);\n        }\n    }\n    // ---- protected ----------------------------------------------------------\n    dispatchRequest(request) {\n    }\n    // ---- private ------------------------------------------------------------\n    _emitEvent(event) {\n        this.emit(event.event, event);\n    }\n    _send(typ, message) {\n        message.type = typ;\n        message.seq = this._sequence++;\n        if (this._writableStream) {\n            const json = JSON.stringify(message);\n            this._writableStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}\\r\\n\\r\\n${json}`, 'utf8');\n        }\n        this._sendMessage.fire(message);\n    }\n    _handleData(data) {\n        this._rawData = Buffer.concat([this._rawData, data]);\n        while (true) {\n            if (this._contentLength >= 0) {\n                if (this._rawData.length >= this._contentLength) {\n                    const message = this._rawData.toString('utf8', 0, this._contentLength);\n                    this._rawData = this._rawData.slice(this._contentLength);\n                    this._contentLength = -1;\n                    if (message.length > 0) {\n                        try {\n                            let msg = JSON.parse(message);\n                            this.handleMessage(msg);\n                        }\n                        catch (e) {\n                            this._emitEvent(new messages_1.Event('error', 'Error handling data: ' + (e && e.message)));\n                        }\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            }\n            else {\n                const idx = this._rawData.indexOf(ProtocolServer.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this._rawData.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] == 'Content-Length') {\n                            this._contentLength = +pair[1];\n                        }\n                    }\n                    this._rawData = this._rawData.slice(idx + ProtocolServer.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\nexports.ProtocolServer = ProtocolServer;\nProtocolServer.TWO_CRLF = '\\r\\n\\r\\n';\n//# sourceMappingURL=data:application/json;base64,","import * as vscode from 'vscode'\nimport { LineToken, MumpsLineParser, ErrorInformation } from './mumpsLineParser'\nimport { mumpsDiagnostics } from './extension';\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider'\nexport default class MumpsParseDb {\n\tprivate static instance: MumpsParseDb | null = null\n\tprivate _linetokens: LineToken[][] = []\n\tprivate _lines: string[] = []\n\tprivate _errorInformation: ErrorInformation[] = []\n\tprivate _indentationLevel: number[] = []\n\tprivate static _documentName: string = \"\"\n\tprivate static _documentVersion: number = -1\n\tprivate constructor() {\n\t\tthis._linetokens = []\n\t\tthis._errorInformation = []\n\t\tthis._indentationLevel = []\n\t}\n\tstatic getInstance(document: vscode.TextDocument, noDiagnostics?: boolean): MumpsParseDb {\n\t\tif (!MumpsParseDb.instance) {\n\t\t\tMumpsParseDb.instance = new MumpsParseDb()\n\t\t}\n\t\tif (document.fileName !== MumpsParseDb._documentName || document.version !== MumpsParseDb._documentVersion) {\n\t\t\tMumpsParseDb.instance.updateData(document, noDiagnostics)\n\t\t\tMumpsParseDb._documentName = document.fileName\n\t\t\tMumpsParseDb._documentVersion = document.version\n\t\t}\n\t\treturn MumpsParseDb.instance;\n\t}\n\tstatic getFileInstance(fileName: string, fileContent: string): MumpsParseDb {\n\t\tif (!MumpsParseDb.instance) {\n\t\t\tMumpsParseDb.instance = new MumpsParseDb()\n\t\t}\n\t\tif (fileName !== MumpsParseDb._documentName) {\n\t\t\tMumpsParseDb.instance.updateFromFileData(fileContent)\n\t\t\tMumpsParseDb._documentName = fileName\n\t\t\tMumpsParseDb._documentVersion = 0;\n\t\t}\n\t\treturn MumpsParseDb.instance;\n\t}\n\tpublic updateData(document: vscode.TextDocument, noDiagnostics?: boolean) {\n\t\tif (document.languageId === \"mumps\") {\n\t\t\tthis.updateFromFileData(document.getText())\n\t\t\tif (noDiagnostics !== true) {\n\t\t\t\tnew MumpsDiagnosticsProvider(mumpsDiagnostics).updateDiagnostics(document)\n\t\t\t}\n\t\t}\n\t}\n\tpublic updateFromFileData(fileContent: string) {\n\t\tthis._lines = []\n\t\tthis._linetokens = []\n\t\tthis._errorInformation = [];\n\t\t[this._lines, this._linetokens, this._errorInformation, this._indentationLevel] = new MumpsLineParser().analyzeLines(fileContent)\n\n\t}\n\tpublic getindentationLevel(line: number): number {\n\t\treturn this._indentationLevel[line]\n\t}\n\tpublic getindentationLevels(): number[] {\n\t\treturn this._indentationLevel\n\t}\n\tpublic getLine(line: number): string {\n\t\treturn this._lines[line]\n\t}\n\tpublic getLineTokens(line: number): LineToken[] {\n\t\treturn this._linetokens[line]\n\t}\n\tpublic getDocumentTokens(): LineToken[][] {\n\t\treturn this._linetokens\n\t}\n\tpublic getDocumentErrors(): ErrorInformation[] {\n\t\treturn this._errorInformation\n\t}\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length\n\t}\n\tpublic setUnreachable(line: number, tokenId: number, unreachable: boolean) {\n\t\tthis._linetokens[line][tokenId].isUnreachable = unreachable\n\t}\n}","/*\r\n\tConnector to MDEBUG-Server by Jens Wulf\r\n\tLicense: LGPL\r\n*/\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { EventEmitter } from 'events';\r\nimport { existsSync, readFileSync } from 'fs';\r\nimport { Socket } from \"net\";\r\nimport * as vscode from 'vscode';\r\nimport { MumpsLineParser, TokenType } from './mumpsLineParser';\r\nimport { getLocalRoutinesPath, getWworkspaceFolder } from './extension';\r\nexport interface MumpsBreakpoint {\r\n\tid: number,\r\n\tfile: string,\r\n\tline: number,\r\n\tverified: boolean,\r\n\tcondition?: string\r\n}\r\nexport interface FilePosition {\r\n\tfile: string,\r\n\tline: number,\r\n\tlocal: boolean\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\ninterface FrameInfo {\r\n\tindex: number,\r\n\tname: string,\r\n\tfile: string,\r\n\tline: number\r\n}\r\ninterface StackInfo {\r\n\tframes: FrameInfo[];\r\n\tcount: number;\r\n}\r\ntype MumpsVariable = {\r\n\t[variableType in VariableType]: {\r\n\t\t[variableName: string]: string;\r\n\t};\r\n};\r\nexport type MumpsGlobal = {\r\n\t[variableName: string]:\r\n\t{\r\n\t\tvalue: string,\r\n\t\tisDefined: boolean,\r\n\t\thasChildren: boolean,\r\n\t\tmoreToFollow: boolean\r\n\t}\r\n}\r\ninterface IVariables {\r\n\t[varName: string]: string;\r\n}\r\nenum connectState {\r\n\tdisconnected, waitingforStart, waitingForVars, waitingForBreakpoints, waitingForSingleVar, waitingForSingleVarContent, waitingForErrorReport, waitingForHints, waitingForGlobals\r\n}\r\n\r\nexport enum VariableType {\r\n\tsystem, local\r\n}\r\n\r\nexport class MumpsConnect extends EventEmitter {\r\n\tprivate _socket = new Socket();\r\n\tprivate _connectState: connectState;\r\n\tprivate _readedData: string;\r\n\tprivate _mVars: MumpsVariable;\r\n\tprivate _globals: MumpsGlobal;\r\n\tprivate _mStack: Array<string>;\r\n\tprivate _activeBreakpoints: Array<string>;\r\n\tprivate _event = new EventEmitter();\r\n\tprivate _hostname: string;\r\n\tprivate _port: number;\r\n\tprivate _errorLines: string[];\r\n\tprivate _hints: string[];\r\n\tprivate _breakPoints: MumpsBreakpoint[];\r\n\tprivate _breakpointId = 1;\r\n\tprivate _commandQueue: string[];\r\n\tprivate _logging = false;\r\n\tprivate _singleVar = \"\";\r\n\tprivate _singleVarContent = \"\";\r\n\tprivate _lastError = \"\";\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._commandQueue = [];\r\n\t\tthis._connectState = connectState.disconnected;\r\n\t\tthis._readedData = \"\";\r\n\t\tthis._mVars = {\r\n\t\t\t[VariableType.system]: {},\r\n\t\t\t[VariableType.local]: {}\r\n\t\t};\r\n\t\tthis._globals = {};\r\n\t\tthis._mStack = [];\r\n\t\tthis._activeBreakpoints = [];\r\n\t\tthis._breakPoints = [];\r\n\t\tthis._errorLines = [];\r\n\t\tthis._singleVar = \"\";\r\n\t\tthis._singleVarContent = \"\";\r\n\t\tthis._hints = [];\r\n\t\tthis._event.on('varsComplete', () => {\r\n\t\t\tif (Object.keys(this._mVars[VariableType.system]).length > 0) {\r\n\t\t\t\tconst internals = this._mVars[VariableType.system];\r\n\t\t\t\tthis.checkEvents(internals);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic async init(hostname: string, port: number): Promise<Socket> {\r\n\t\tthis._hostname = hostname;\r\n\t\tthis._port = port;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._socket.connect(this._port, this._hostname, () => {\r\n\t\t\t\tthis._log(\"Debug-Server connected\\n\");\r\n\t\t\t\tvscode.commands.executeCommand('setContext', 'mumps.showGlobals', true)\r\n\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\tthis._socket.on('data', (chunk) => {\r\n\t\t\t\t\tthis._readedData += chunk.toString();\r\n\t\t\t\t\tlet n = this._readedData.indexOf('\\n');\r\n\t\t\t\t\twhile (n !== -1) {\r\n\t\t\t\t\t\tconst data = this._readedData.substring(0, n);\r\n\t\t\t\t\t\tthis.processLine(data)\r\n\t\t\t\t\t\tthis._readedData = this._readedData.substring(n + 1);\r\n\t\t\t\t\t\tn = this._readedData.indexOf('\\n');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresolve(this._socket);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('error', (error) => {\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('end', () => {\r\n\t\t\t\tthis._connectState = connectState.disconnected\r\n\t\t\t\tvscode.commands.executeCommand('setContext', 'mumps.showGlobals', false)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tprivate _log(msg: string): void {\r\n\t\tif (this._logging) { console.log(msg); }\r\n\t}\r\n\tprivate processLine(line: string): void {\r\n\t\tthis._log(\"Line:  \" + line);\r\n\r\n\t\tlet varname: string;\r\n\t\tlet value: string;\r\n\t\tlet vartype: string;\r\n\t\tswitch (this._connectState) {\r\n\t\t\tcase connectState.waitingforStart: {\r\n\t\t\t\tif (line === \"***STARTVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForVars;\r\n\t\t\t\t\tthis._mStack = [];\r\n\t\t\t\t\tthis._mVars = {\r\n\t\t\t\t\t\t[VariableType.system]: {},\r\n\t\t\t\t\t\t[VariableType.local]: {}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTBP\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForBreakpoints;\r\n\t\t\t\t\tthis._activeBreakpoints = [];\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***SINGLEVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVar;\r\n\t\t\t\t\tthis._singleVar = \"\";\r\n\t\t\t\t\tthis._singleVarContent = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***ENDPROGRAM\") {\r\n\t\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\t\tthis._socket.end();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***BEGINERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForErrorReport;\r\n\t\t\t\t\tthis._errorLines = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForHints;\r\n\t\t\t\t\tthis._hints = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTGBL\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForGlobals;\r\n\t\t\t\t\tthis._globals = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForVars: {\r\n\t\t\t\tif (line === \"***ENDVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tdelete this._mVars[VariableType.local][\"%STEP\"];\t\t\t//Remove internal debugger variables\r\n\t\t\t\t\tdelete this._mVars[VariableType.local][\"%PROGNAME\"];\r\n\t\t\t\t\tthis._event.emit(\"varsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvartype = line.substring(0, 1); //I=internal,V=local Variable,S=Stackframe\r\n\t\t\t\t\tif (vartype === \"S\") {\r\n\t\t\t\t\t\tthis._mStack.push(line.substring(2));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(0, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tconst variableType = vartype === \"V\" ? VariableType.local : VariableType.system;\r\n\t\t\t\t\tthis._mVars[variableType][varname] = value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForBreakpoints: {\r\n\t\t\t\tif (line === \"***ENDBP\") {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis.verifyBreakpoints();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._activeBreakpoints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVar: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else if (line === \"***SINGLEVARCONTENT\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVarContent;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVar += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVarContent: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVarContent += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForErrorReport: {\r\n\t\t\t\tif (line === \"***ENDERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('ErrorreportReceived', this._event, this._errorLines);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._errorLines.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForGlobals: {\r\n\t\t\t\tif (line === \"***ENDGBL\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit(\"gblsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet moreToFollow = false;\r\n\t\t\t\t\tlet indicator = parseInt(line[0]);\r\n\t\t\t\t\tif (indicator > 3) {\r\n\t\t\t\t\t\tmoreToFollow = true;\r\n\t\t\t\t\t\tindicator -= 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst hasChildren = indicator === 2;\r\n\t\t\t\t\tconst isDefined = line[1] === \"1\";\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(2, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tthis._globals[varname] = { value, hasChildren, isDefined, moreToFollow }\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForHints: {\r\n\t\t\t\tif (line === \"***ENDHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('HintsReceived', this._event, this._hints);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._hints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tconsole.error(\"Unexpected Message: \" + line);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate writeln(message: string): void {\r\n\t\tthis._commandQueue.push(message);\r\n\t\tif (this._commandQueue.length > 1000) {\r\n\t\t\tconsole.error(\"Too many Commands in Queue: Check Debugger Connection\");\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t\tif (this._connectState !== connectState.disconnected) {\r\n\t\t\twhile (this._commandQueue.length) {\r\n\r\n\t\t\t\tmessage = this._commandQueue.shift()!;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._socket.write(message + \"\\n\");\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tthis._commandQueue.unshift(message);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate sendBreakpoint(file: string, line: number, onOff: boolean, condition?: string): void {\r\n\t\tif (condition === undefined) { condition = \"\"; }\r\n\t\tif (onOff) { this.writeln(\"SETBP;\" + file + \";\" + line + \";\" + condition); }\r\n\t\telse { this.writeln(\"CLEARBP;\" + file + \";\" + line); }\r\n\t}\r\n\tpublic start(file: string, stopAtStart: boolean): void {\r\n\t\tif (stopAtStart) {\r\n\t\t\tif (file.indexOf(\"^\")) {\r\n\t\t\t\t//Stop direct at given Label not at first line\r\n\t\t\t\tthis.sendBreakpoint(file, 0, true, \"\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendBreakpoint(file, 1, true, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.requestBreakpoints();\r\n\t\tthis.writeln(\"START;\" + file);\r\n\t}\r\n\tpublic step(type: string): void {\r\n\t\tthis.writeln(type);\r\n\t}\r\n\tpublic continue(): void {\r\n\t\tthis.writeln(\"CONTINUE\");\r\n\t}\r\n\tpublic disconnect(): void {\r\n\t\tthis.writeln(\"RESET\");\r\n\t\tthis._socket.end();\r\n\t}\r\n\tpublic requestBreakpoints(): void {\r\n\t\tthis.writeln(\"REQUESTBP\");\r\n\t}\r\n\tpublic restart(file: string): void {\r\n\t\tthis.writeln(\"RESTART;\" + file);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the actual Stack\r\n\t */\r\n\tpublic stack(startFrame: number, endFrame: number): StackInfo {\r\n\r\n\t\tconst frames = new Array<FrameInfo>();\r\n\r\n\t\tfor (let i = startFrame; i < this._mStack.length; i++) {\r\n\t\t\tconst position = this._mStack[i];\r\n\t\t\tif (position.indexOf(\"^\") !== -1) {\r\n\t\t\t\tconst fileposition = convertMumpsPosition(position);\r\n\t\t\t\tframes.push({\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tname: `${position}(${i})`,\r\n\t\t\t\t\tfile: fileposition.file,\r\n\t\t\t\t\tline: fileposition.line\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tframes: frames,\r\n\t\t\tcount: Math.min(frames.length, endFrame)\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * Set breakpoint in file with given line.\r\n\t */\r\n\tpublic setBreakPoint(file: string, breakpoints: DebugProtocol.SourceBreakpoint[] | undefined): DebugProtocol.Breakpoint[] {\r\n\t\tconst confirmedBreakpoints: DebugProtocol.Breakpoint[] = [];\r\n\t\tfile = file.replace(/\\\\/g, \"/\");\r\n\t\tif (breakpoints) {\r\n\t\t\tfor (let i = 0; i < breakpoints.length; i++) {\r\n\t\t\t\tconst breakpoint = breakpoints[i];\r\n\t\t\t\tconst line = breakpoint.line\r\n\t\t\t\tconfirmedBreakpoints.push({ id: this._breakpointId, verified: false })\r\n\t\t\t\tconst newBreakpoint = { verified: false, file, line, id: this._breakpointId++ };\r\n\t\t\t\tconst existingBreakpoint = this._breakPoints.find(bp => bp.file === file && bp.line === line);\r\n\t\t\t\tif (!existingBreakpoint) {\r\n\t\t\t\t\tthis._breakPoints.push(newBreakpoint);\r\n\t\t\t\t} else {\r\n\t\t\t\t\texistingBreakpoint.condition = breakpoint.condition;\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendBreakpoint(file, line, true, breakpoint.condition);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn confirmedBreakpoints;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear breakpoint in file with given line.\r\n\t */\r\n\tpublic clearBreakPoint(file: string, line: number): MumpsBreakpoint | undefined {\r\n\t\tconst bps = this._breakPoints;\r\n\t\tif (bps) {\r\n\t\t\tconst index = bps.findIndex(bp => bp.file === file && bp.line === line);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tconst bp = bps[index];\r\n\t\t\t\tthis.sendBreakpoint(file, bp.line, false);\r\n\t\t\t\tbps.splice(index, 1);\r\n\t\t\t\treturn bp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear all breakpoints\r\n\t */\r\n\tpublic clearBreakpoints(file: string): void {\r\n\t\tthis.writeln(\"CLEARBP;\" + file);\r\n\t}\r\n\r\n\tprivate verifyBreakpoints(): void {\r\n\t\tconst merk: boolean[] = [];\r\n\t\tthis._breakPoints.forEach(bp => {\r\n\t\t\tbp.verified = false;\r\n\t\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\t\tconst internalBp = convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tinternalBp.file = MumpsConnect.normalizeDrive(internalBp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tbp.file = MumpsConnect.normalizeDrive(bp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tif (internalBp.file === bp.file && bp.line === internalBp.line + 1) {\r\n\t\t\t\t\tbp.verified = true;\r\n\t\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t\t\tmerk[i] = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!bp.verified) { this.sendEvent('breakpointValidated', bp); }\r\n\t\t});\r\n\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\tif (!merk[i]) {\r\n\t\t\t\tconst internalBp = convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tconst bp: MumpsBreakpoint = { 'verified': true, 'file': internalBp.file, 'line': internalBp.line + 1, 'id': this._breakpointId++ }\r\n\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate static normalizeDrive(path: string): string {\r\n\t\tconst parts = path.split(':');\r\n\t\tif (parts.length === 2) {\r\n\t\t\treturn parts[0].toLowerCase() + ':' + parts[1];\r\n\t\t} else {\r\n\t\t\treturn path;\r\n\t\t}\r\n\t}\r\n\tpublic async getGlobals(keys: string, searchInGlobal?: string): Promise<MumpsGlobal> {\r\n\t\tif (searchInGlobal !== undefined) {\r\n\t\t\tthis.writeln(\"SEARCHGBL;\" + searchInGlobal + \";\" + keys)\r\n\t\t} else {\r\n\t\t\tthis.writeln(\"GETGBL;\" + keys);\r\n\t\t}\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\t// Listen for the \"gblsComplete\" event.\r\n\t\t\tconst gblsCompleteListener = () => {\r\n\t\t\t\t// Unsubscribe from the event to avoid memory leaks.\r\n\t\t\t\tthis._event.removeListener(\"gblsComplete\", gblsCompleteListener);\r\n\r\n\t\t\t\t// Resolve the Promise with the received value.\r\n\t\t\t\tresolve(this._globals);\r\n\t\t\t};\r\n\r\n\t\t\t// Subscribe to the \"gblsComplete\" event.\r\n\t\t\tthis._event.on(\"gblsComplete\", gblsCompleteListener);\r\n\t\t});\r\n\t}\r\n\tpublic getVariables(type: VariableType): { [variableName: string]: string } {\r\n\t\treturn this._mVars[type];\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param lines M-Code to check\r\n\t * @returns Error-Report by Mumps-Compiler\r\n\t */\r\n\tpublic async checkRoutine(lines: string[]): Promise<string[]> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._event.on('ErrorreportReceived', function ErrorreportReceived(event: EventEmitter, errorLines: string[]) {\r\n\t\t\t\tevent.removeListener('ErrorreportReceived', ErrorreportReceived);\r\n\t\t\t\terrorLines = errorLines.filter(line => !line.includes(\"I-SRCNAM\"));\r\n\t\t\t\tfor (let i = 0; i < errorLines.length; i++) {\r\n\t\t\t\t\tif (errorLines[i].indexOf(\"E-LABELMISSING\")) {\r\n\t\t\t\t\t\tconst label = errorLines[i].match(/: ([A-Za-z%0-9][A-Za-z0-9]*)/)\r\n\t\t\t\t\t\tif (label !== null && label.length > 1) {\r\n\t\t\t\t\t\t\tconst searchLabel = label[1];\r\n\t\t\t\t\t\t\tfor (let j = 0; j < lines.length; j++) {\r\n\t\t\t\t\t\t\t\tif (lines[j].indexOf(searchLabel) !== -1) {\r\n\t\t\t\t\t\t\t\t\tconst lineInfo = new MumpsLineParser().analyzeLine(lines[j]);\r\n\t\t\t\t\t\t\t\t\tif (lineInfo.tokens.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tfor (let k = 0; k < lineInfo.tokens.length; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (lineInfo.tokens[k].type === TokenType.entryref && lineInfo.tokens[k].name === searchLabel) {\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorLines[i] = (lineInfo.tokens[k].position + 1) + \";\" + (j + 1) + \";\" + errorLines[i].substring(3);\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(errorLines);\r\n\t\t\t});\r\n\t\t\tthis.writeln(\"ERRCHK\");\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\tthis.writeln(lines[i]);\r\n\t\t\t}\r\n\t\t\tthis.writeln(\"***ENDPROGRAM\");\r\n\t\t})\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param expression Name of the Variable to get\r\n\t * @returns Variable Content\r\n\t */\r\n\tpublic async getSingleVar(expression: string): Promise<VarData> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst reply: VarData = { name: expression, indexCount: 0, content: \"undefined\", bases: [] }\r\n\t\t\tconst varType = expression.charAt(0) === \"$\" ? VariableType.system : VariableType.local;\r\n\t\t\tif (this._mVars[varType][expression] !== undefined) {\r\n\t\t\t\treply.content = this._mVars[varType][expression];\r\n\t\t\t\tresolve(reply);\r\n\t\t\t} else {\r\n\t\t\t\tthis._event.on('SingleVarReceived', function SingleVarReceived(event, singleVar, singleVarContent) {\r\n\t\t\t\t\tevent.removeListener('SingleVarReceived', SingleVarReceived);\r\n\t\t\t\t\treply.name = singleVar;\r\n\t\t\t\t\treply.content = singleVarContent;\r\n\t\t\t\t\tresolve(reply);\r\n\t\t\t\t});\r\n\t\t\t\tthis.writeln(\"GETVAR;\" + expression);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Fire events if line has a breakpoint or hs stopped beacause of a different reason\r\n\t */\r\n\tprivate checkEvents(internals: IVariables): void {\r\n\t\tconst mumpsposition = internals[\"$ZPOSITION\"];\r\n\t\tconst mumpsstatus = internals[\"$ZSTATUS\"];\r\n\t\tconst filePosition = convertMumpsPosition(mumpsposition);\r\n\t\tif (mumpsstatus !== \"\") {\r\n\t\t\tif (mumpsstatus === this._lastError && internals[\"$ETRAP\"] === internals[\"$ZSTEP\"]) {\r\n\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\tif (mumpsstatus !== this._lastError) {\r\n\t\t\t\t\tthis._lastError = mumpsstatus;\r\n\t\t\t\t\tconst parts = mumpsstatus.split(\",\");\r\n\t\t\t\t\tthis.sendEvent('stopOnException', mumpsstatus, convertMumpsPosition(parts[1]));\r\n\t\t\t\t\tthis._log(mumpsstatus);\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst bps = this._breakPoints.filter(bp => bp.file === filePosition.file && bp.line === filePosition.line + 1);\r\n\t\tif (bps.length > 0) {\r\n\t\t\tthis.sendEvent('stopOnBreakpoint');\r\n\t\t} else {\r\n\t\t\tthis.sendEvent('stopOnStep');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate sendEvent(event: string, ...args: unknown[]): void {\r\n\t\tthis.emit(event, ...args);\r\n\t}\r\n}\r\nexport function convertMumpsPosition(positionstring: string, showNotFound?: boolean | undefined): FilePosition {\r\n\tif (showNotFound === undefined) { showNotFound = true; }\r\n\tlet local = false;\r\n\tconst parts = positionstring.split(\"^\");\r\n\tconst position = parts[0];\r\n\tif (parts[1] !== undefined) {\r\n\t\tconst program = parts[1].split(\" \", 1)[0].replace(/%/g, \"_\") + \".m\";\r\n\t\tlet path = getLocalRoutinesPath()\r\n\t\tif (!path.endsWith(\"/\") && !path.endsWith(\"\\\\\")) path += \"/\";\r\n\t\tlet file = (path + program)\r\n\t\tif (!existsSync(file)) {\r\n\t\t\tif (getWworkspaceFolder() !== undefined) {\r\n\t\t\t\tpath = getWworkspaceFolder()!;\r\n\t\t\t\tif (!path.endsWith(\"/\") && !path.endsWith(\"\\\\\")) path += \"/\";\r\n\t\t\t\tfile = path + program;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!existsSync(file)) {\r\n\t\t\tif (showNotFound) { vscode.window.showErrorMessage(\"Could not find Routine \" + program); }\r\n\t\t\treturn { \"file\": \"\", \"line\": 1, local: false };\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst filecontent = readFileSync(file).toString().split('\\n');\r\n\t\t\tconst startlabel = position.split(\"+\")[0];\r\n\t\t\tconst labelRegexp = new RegExp(\"^\" + startlabel + \"([(\\\\s;:]|$)\");\r\n\t\t\tconst localLabelRegexp = new RegExp(\"^\" + startlabel + \":\");\r\n\t\t\tlet offset = 0;\r\n\t\t\tif (position.split(\"+\")[1] !== undefined) {\r\n\t\t\t\toffset = parseInt(position.split(\"+\")[1]);\r\n\t\t\t\tif (startlabel === \"\") { offset-- }   //If there's no startlabel M reports +1^XXX\r\n\t\t\t}\r\n\t\t\tlet line = 0;\r\n\t\t\tlet labelFound = false;\r\n\t\t\tif (startlabel !== \"\") {\r\n\t\t\t\tfor (let ln = 0; ln < filecontent.length; ln++) {\r\n\t\t\t\t\tif (filecontent[ln].match(labelRegexp)) {\r\n\t\t\t\t\t\tif (filecontent[ln].match(localLabelRegexp)) local = true;\r\n\t\t\t\t\t\telse local = false;\r\n\t\t\t\t\t\tline = ln;\r\n\t\t\t\t\t\tlabelFound = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!labelFound) return { \"file\": \"\", \"line\": 1, local }\r\n\t\t\t}\r\n\t\t\tif (line + offset >= filecontent.length) return { \"file\": \"\", \"line\": 1, local }\r\n\t\t\treturn { \"file\": file, \"line\": line + offset, local };\r\n\t\t} catch {\r\n\t\t\t//console.log(\"Could not read Sourcefile \" + file)\r\n\t\t\treturn { \"file\": \"\", \"line\": 1, local };\r\n\t\t}\r\n\t} else {\r\n\t\treturn { \"file\": \"\", \"line\": 1, local };\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\r\nimport { MumpsLineParser, LabelInformation, LineObject, entryref } from './mumpsLineParser';\r\nimport * as fs from 'fs'\r\n\r\nenum LineStatus {\r\n\tnoJumplabel, jumplabel\r\n}\r\n\r\ninterface ItemHint {\r\n\tlineStatus: LineStatus,\r\n\tstartString: string\r\n}\r\ninterface LabelItem {\r\n\troutine: string,\r\n\tlabel: string,\r\n\tline: string\r\n}\r\ninterface DbItem {\r\n\tlabels: LabelItem[],\r\n\troutines: { path: string }\r\n}\r\nexport default class CompletionItemProvider {\r\n\t/**\r\n * Provides the completion items for the supplied words.\r\n *\r\n * @param {TextDocument} document\r\n * @param {Position} position\r\n * @param {CancellationToken} token\r\n * @returns\r\n */\r\n\tprivate _labelsReady: boolean;\r\n\tprivate _labelDB: DbItem;\r\n\tprivate _filesToCheck: number;\r\n\tprivate _dbfile: string;\r\n\tprivate _document: vscode.TextDocument;\r\n\tconstructor(labeldb: string) {\r\n\t\tthis._labelsReady = false;\r\n\t\tthis._dbfile = labeldb;\r\n\t\tthis._refreshLabelDB();\r\n\t}\r\n\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tthis._document = document;\r\n\t\tconst line = document.getText(new vscode.Range(new vscode.Position(position.line, 0), position))\r\n\t\tconst parsed = MumpsLineParser.parseLine(line);\r\n\t\tconst status = getLineStatus(parsed, position.character);\r\n\t\tthis._refreshLocalLabels(document);\r\n\t\tlet completionItems: Array<vscode.CompletionItem> = [];\r\n\t\tif (this._labelsReady && status.lineStatus === LineStatus.jumplabel) {\r\n\t\t\tconst replaceRange = new vscode.Range(new vscode.Position(position.line, position.character - status.startString.length), position)\r\n\t\t\tcompletionItems = this._findLabel(status.startString, completionItems, replaceRange);\r\n\t\t}\r\n\t\treturn completionItems;\r\n\t}\r\n\tprivate _refreshLabelDB() { // Look for all Labels in .m-Routines and them + Comments\r\n\t\tif (!fs.existsSync(this._dbfile)) {\r\n\t\t\tconst db = {\r\n\t\t\t\tlabels: [{ routine: '', label: '' }],\r\n\t\t\t\troutines: {}\r\n\t\t\t}\r\n\t\t\tfs.writeFileSync(this._dbfile, JSON.stringify(db));\r\n\t\t}\r\n\t\tfs.readFile(this._dbfile, (err, data) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tthis._labelDB = JSON.parse(data.toString());\r\n\t\t\t\tlet dbChanged = false;\r\n\t\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\r\n\t\t\t\t\tthis._filesToCheck = files.length;\r\n\t\t\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tconst path = files[i].fsPath;\r\n\t\t\t\t\t\tfs.stat(path, (err, stats) => {\r\n\t\t\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\t\t\tconst ms = this._labelDB.routines[path];\r\n\t\t\t\t\t\t\t\tif (ms === undefined || stats.mtimeMs > ms) {\r\n\t\t\t\t\t\t\t\t\tthis._labelDB.routines[path] = stats.mtimeMs;\r\n\t\t\t\t\t\t\t\t\tdbChanged = true;\r\n\t\t\t\t\t\t\t\t\tif (stats.size < 50000) {  //parse only Files <50K\r\n\t\t\t\t\t\t\t\t\t\tthis._refreshFileLabels(path);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._labelsReady = true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tprivate _checkReady(dbChanged: boolean) {\t// Check if all .m Files are processed and save LabelDB then\r\n\t\tif (--this._filesToCheck === 0) {\r\n\t\t\tif (dbChanged) {\r\n\t\t\t\tfs.writeFile(this._dbfile, JSON.stringify(this._labelDB), (err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tvscode.window.showErrorMessage(\"Error writing Label DB\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate _refreshLocalLabels(document: vscode.TextDocument) {\r\n\t\tlet routine: string = document.fileName.replace(/\\\\/g, '/').split('/').pop() ?? \"\";\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tconst lines = document.getText().split('\\n');\r\n\t\tconst existingLabels = this._labelDB.labels.filter((label) => label.routine === routine);\r\n\t\t// Create a map of existing labels for quick lookup\r\n\t\tconst existingLabelsMap = new Map(existingLabels.map((label) => [label.label, label]));\r\n\r\n\t\t// Process each line in the document\r\n\t\tlet labelsinDocumentChanged = false;\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tif (routine) {\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t// Handle special case for the first line\r\n\t\t\t\t\tconst firstLineLabel = { label: '*FL', routine, line: lines[0] };\r\n\t\t\t\t\tif (!existingLabelsMap.has('*FL') || existingLabelsMap.get('*FL')?.line !== firstLineLabel.line) {\r\n\t\t\t\t\t\t// Add or update the first line label\r\n\t\t\t\t\t\texistingLabelsMap.set('*FL', firstLineLabel);\r\n\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst labelMatch = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/);\r\n\t\t\t\tif (labelMatch) {\r\n\t\t\t\t\tconst labelName = labelMatch[0];\r\n\t\t\t\t\tconst labelLine = { label: labelName, routine, line: lines[i] };\r\n\t\t\t\t\tif (existingLabelsMap.has(labelName)) {\r\n\t\t\t\t\t\t// Label exists, check if it's different\r\n\t\t\t\t\t\tconst existingLabel = existingLabelsMap.get(labelName);\r\n\t\t\t\t\t\tif (existingLabel?.line !== labelLine.line) {\r\n\t\t\t\t\t\t\t// Update the existing label\r\n\t\t\t\t\t\t\texistingLabelsMap.set(labelName, labelLine);\r\n\t\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Label doesn't exist, add it\r\n\t\t\t\t\t\texistingLabelsMap.set(labelName, labelLine);\r\n\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (labelsinDocumentChanged) {\r\n\t\t\tconst updatedLabels: LabelItem[] = [];\r\n\t\t\texistingLabelsMap.forEach((labelItem, labelName) => {\r\n\t\t\t\tupdatedLabels.push({ label: labelName, routine, line: labelItem.line })\r\n\t\t\t})\r\n\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\treturn label.routine !== routine;\r\n\t\t\t})\r\n\t\t\tthis._labelDB.labels.push(...updatedLabels);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _refreshFileLabels(path: string) {  // Refresh all Labels of a changed .m File\r\n\t\tlet routine = path.replace(/\\\\/g, '/').split('/').pop();\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tfs.readFile(path, 'utf8', (err, content: string) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconst lines = content.split('\\n');\r\n\t\t\t\tlet label: RegExpMatchArray | null = null;\r\n\t\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\t\treturn label.routine !== routine;\r\n\t\t\t\t})\r\n\t\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\t\tif (routine) {\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: '*FL', routine, line: lines[0] });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/)\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: label[0], routine, line: lines[i] })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkReady(true);\r\n\t\t});\r\n\t}\r\n\tprivate _findLabel(startstring: string, list: Array<vscode.CompletionItem>, replaceRange: vscode.Range) {\r\n\t\t//let hits = 0;\r\n\t\tlet hitlist: LabelItem[] = [];\r\n\t\tconst localLabels: LabelInformation[] = MumpsLineParser.getLabels(this._document.getText());\r\n\t\tlet sortText = '';\r\n\t\tif (startstring.charAt(0) === '^') {\r\n\t\t\tconst suchstring = startstring.substring(1);\r\n\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\treturn item.routine.startsWith(suchstring);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (startstring.indexOf('^') !== -1) {\r\n\t\t\t\tconst label = startstring.split('^')[0];\r\n\t\t\t\tconst routinepart = startstring.split('^')[1];\r\n\t\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label === label && item.routine.startsWith(routinepart);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < localLabels.length; i++) {\r\n\t\t\t\t\tif (localLabels[i].name.startsWith(startstring)) {\r\n\t\t\t\t\t\thitlist.push({ routine: '', label: localLabels[i].name, line: this._document.lineAt(localLabels[i].line).text })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thitlist = hitlist.concat(this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label.startsWith(startstring);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < hitlist.length && i < 100; i++) {\r\n\t\t\tsortText = '100';\r\n\t\t\tconst item = hitlist[i];\r\n\t\t\tlet label = item.routine !== '' ? item.label + '^' + item.routine : item.label;\r\n\t\t\tif (label === startstring) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (item.label === \"*FL\") {\r\n\t\t\t\tif (!startstring.startsWith('^')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlabel = '^' + item.routine;\r\n\t\t\t}\r\n\t\t\tlet detail = ''\r\n\t\t\tif (item.line.charAt(item.label.length) === '(') {\r\n\t\t\t\tif (item.line.indexOf(')') !== -1) {\r\n\t\t\t\t\tdetail = item.line.split(')')[0] + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (item.line.indexOf(';') !== -1) {\r\n\t\t\t\tdetail += item.line.substring(item.line.indexOf(';') + 1);\r\n\t\t\t}\r\n\t\t\tif (detail.length > 0) {\r\n\t\t\t\tsortText = '099';\r\n\t\t\t} //prefer documented lables\r\n\t\t\tif (item.routine === '') { // local labels first\r\n\t\t\t\tsortText = '098';\r\n\t\t\t}\r\n\r\n\t\t\tlist.push({ label, detail, sortText, range: replaceRange });\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n}\r\nfunction getLineStatus(parsed: LineObject, position: number): ItemHint {\r\n\tlet lineStatus = LineStatus.noJumplabel\r\n\tlet startString = \"\"\r\n\tif (parsed.lineRoutines && parsed.lineRoutines.length > 0) {\r\n\t\tfor (const i in parsed.lineRoutines) {\r\n\t\t\tconst cmd = parsed.lineRoutines[i];\r\n\t\t\tif (cmd.mPostCondition !== \"\" && position >= cmd.pcPosition && position <= (cmd.pcPosition + cmd.mPostCondition.length)) {\r\n\t\t\t\tstartString = cmd.mPostCondition.substring(0, position - cmd.pcPosition);\r\n\t\t\t\tif (startString.indexOf(\"$$\") !== -1) {\r\n\t\t\t\t\tconst lastIndex = startString.lastIndexOf(\"$$\");\r\n\t\t\t\t\tstartString = startString.slice(lastIndex + 2);\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (cmd.mArguments !== \"\" && position >= cmd.argPosition && position <= (cmd.argPosition + cmd.mArguments.length)) {\r\n\t\t\t\tstartString = cmd.mArguments.substring(0, position - cmd.argPosition)\r\n\t\t\t\tif (cmd.mCommand.match(/[D|DO|G|GOTO|J|JOB]/i)) {\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (startString.indexOf(\"$$\") !== -1) {\r\n\t\t\t\t\tconst lastIndex = startString.lastIndexOf(\"$$\");\r\n\t\t\t\t\tstartString = startString.slice(lastIndex + 2);\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { lineStatus, startString }\r\n}\r\n\r\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = exports.Response = exports.Message = void 0;\nclass Message {\n    constructor(type) {\n        this.seq = 0;\n        this.type = type;\n    }\n}\nexports.Message = Message;\nclass Response extends Message {\n    constructor(request, message) {\n        super('response');\n        this.request_seq = request.seq;\n        this.command = request.command;\n        if (message) {\n            this.success = false;\n            this.message = message;\n        }\n        else {\n            this.success = true;\n        }\n    }\n}\nexports.Response = Response;\nclass Event extends Message {\n    constructor(event, body) {\n        super('event');\n        this.event = event;\n        if (body) {\n            this.body = body;\n        }\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVzc2FnZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Z0dBR2dHOzs7QUFLaEcsTUFBYSxPQUFPO0lBSW5CLFlBQW1CLElBQVk7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0Q7QUFSRCwwQkFRQztBQUVELE1BQWEsUUFBUyxTQUFRLE9BQU87SUFLcEMsWUFBbUIsT0FBOEIsRUFBRSxPQUFnQjtRQUNsRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMvQixJQUFJLE9BQU8sRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ2YsSUFBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDOUI7YUFBTTtZQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO0lBQ0YsQ0FBQztDQUNEO0FBaEJELDRCQWdCQztBQUVELE1BQWEsS0FBTSxTQUFRLE9BQU87SUFHakMsWUFBbUIsS0FBYSxFQUFFLElBQVU7UUFDM0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDSCxJQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUN4QjtJQUNGLENBQUM7Q0FDRDtBQVZELHNCQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IERlYnVnUHJvdG9jb2wgfSBmcm9tICdAdnNjb2RlL2RlYnVncHJvdG9jb2wnO1xuXG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5Qcm90b2NvbE1lc3NhZ2Uge1xuXHRzZXE6IG51bWJlcjtcblx0dHlwZTogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3Rvcih0eXBlOiBzdHJpbmcpIHtcblx0XHR0aGlzLnNlcSA9IDA7XG5cdFx0dGhpcy50eXBlID0gdHlwZTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5SZXNwb25zZSB7XG5cdHJlcXVlc3Rfc2VxOiBudW1iZXI7XG5cdHN1Y2Nlc3M6IGJvb2xlYW47XG5cdGNvbW1hbmQ6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocmVxdWVzdDogRGVidWdQcm90b2NvbC5SZXF1ZXN0LCBtZXNzYWdlPzogc3RyaW5nKSB7XG5cdFx0c3VwZXIoJ3Jlc3BvbnNlJyk7XG5cdFx0dGhpcy5yZXF1ZXN0X3NlcSA9IHJlcXVlc3Quc2VxO1xuXHRcdHRoaXMuY29tbWFuZCA9IHJlcXVlc3QuY29tbWFuZDtcblx0XHRpZiAobWVzc2FnZSkge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gZmFsc2U7XG5cdFx0XHQoPGFueT50aGlzKS5tZXNzYWdlID0gbWVzc2FnZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gdHJ1ZTtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIEV2ZW50IGV4dGVuZHMgTWVzc2FnZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuRXZlbnQge1xuXHRldmVudDogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihldmVudDogc3RyaW5nLCBib2R5PzogYW55KSB7XG5cdFx0c3VwZXIoJ2V2ZW50Jyk7XG5cdFx0dGhpcy5ldmVudCA9IGV2ZW50O1xuXHRcdGlmIChib2R5KSB7XG5cdFx0XHQoPGFueT50aGlzKS5ib2R5ID0gYm9keTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser } from './mumpsLineParser';\nimport * as fs from 'fs'\nconst parser = new MumpsLineParser();\nexport default class MumpsReferenceProvider {\n\tprovideReferences(document: vscode.TextDocument, position: vscode.Position): Promise<vscode.Location[] | null | undefined> {\n\t\tconst myToken = parser.getTokenAt(document.lineAt(position).text, position.character);\n\t\tconst result: vscode.Location[] = [];\n\t\tif (myToken !== undefined) {\n\t\t\tlet searchType: TokenType = myToken.type;\n\t\t\tconst searchToken = myToken?.name;\n\t\t\tif (searchType === TokenType.label) {\n\t\t\t\tlet routine = document.fileName.replace(/\\\\/g, '/').split('/').pop();\n\t\t\t\troutine = routine?.split('.')[0].replace('_', '%');\n\t\t\t\tsearchType = TokenType.entryref\n\t\t\t\tconst externalLabel: string = searchToken + \"^\" + routine;\n\t\t\t\t// Check active document for entryrefs\n\t\t\t\tconst docLines: string[] = document.getText().split('\\n');\n\t\t\t\tfor (let i = 0; i < docLines.length; i++) {\n\t\t\t\t\tif (docLines[i].includes(externalLabel) || docLines[i].includes(searchToken)) {\n\t\t\t\t\t\tlet foundPosition = -1;\n\t\t\t\t\t\tfor (; ;) {\n\t\t\t\t\t\t\tconst extPosition = docLines[i].indexOf(externalLabel, foundPosition + 1);\n\t\t\t\t\t\t\tif (extPosition === -1) {\n\t\t\t\t\t\t\t\tfoundPosition = docLines[i].indexOf(searchToken, foundPosition + 1);\n\t\t\t\t\t\t\t\tif (foundPosition === -1) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfoundPosition = extPosition;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst token = parser.getTokenAt(docLines[i], foundPosition + 1)\n\t\t\t\t\t\t\tif (token !== undefined && (token.name === externalLabel || token.name === searchToken) &&\n\t\t\t\t\t\t\t\t(token.type === TokenType.entryref || token.type === TokenType.exfunction)) {\n\t\t\t\t\t\t\t\tresult.push(new vscode.Location(document.uri, new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check all other documents and return result\n\t\t\t\treturn this.getallLabelReferences(result, externalLabel, searchType);\n\t\t\t} else {\n\t\t\t\tif (searchType === TokenType.local || searchType === TokenType.global) {\n\t\t\t\t\treturn this.getallLabelReferences(result, searchToken, searchType);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t}\n\t/*eslint class-methods-use-this: 0*/\n\tgetallLabelReferences(result: vscode.Location[], searchToken: string, searchType: TokenType): Promise<vscode.Location[]> {\n\t\treturn new Promise(resolve => {\n\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\n\t\t\t\tconst filesToCheck = files.length;\n\t\t\t\tfor (let i = 0; i < filesToCheck; i++) {\n\t\t\t\t\tconst path = files[i].fsPath;\n\t\t\t\t\tfs.readFile(path, 'utf8', (err, content: string) => {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tif (content.includes(searchToken)) {\n\t\t\t\t\t\t\t\tconst lines = content.split('\\n');\n\t\t\t\t\t\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\t\t\t\t\t\tif (lines[i].includes(searchToken)) {\n\t\t\t\t\t\t\t\t\t\tconst foundPosition = lines[i].indexOf(searchToken);\n\t\t\t\t\t\t\t\t\t\tconst token = parser.getTokenAt(lines[i], foundPosition + 1)\n\t\t\t\t\t\t\t\t\t\tif (token !== undefined && token.name === searchToken &&\n\t\t\t\t\t\t\t\t\t\t\t(token.type === searchType || (token.type === TokenType.exfunction && searchType === TokenType.entryref))) {\n\t\t\t\t\t\t\t\t\t\t\tresult.push(new vscode.Location(vscode.Uri.file(path), new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i === filesToCheck - 1) {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsHoverProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideHover(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenHoverInfo();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\r\nconst DIVIDERLINE = \"\\t;****************\\n\"\r\n\r\nexport default function mumpsDocumenter() {\r\n\tconst editor = vscode.window.activeTextEditor\r\n\tif (editor) {\r\n\t\tconst document = editor.document\r\n\t\tlet InsertPosition = editor.selection.start.with(editor.selection.start.line, 0)\r\n\r\n\t\t//if the line is empty look down for the label\r\n\t\twhile (InsertPosition.line < document.lineCount) {\r\n\t\t\tconst txt = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (txt.replace(/\\t| /ig, \"\") === \"\") {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(1, 0)\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (InsertPosition.line === document.lineCount) {\r\n\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t}\r\n\t\t//start moving up the file looking for the label header\r\n\t\twhile (InsertPosition.line >= 0) {\r\n\t\t\tconst text = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (!(text.length === 0 || text.charAt(0) === \" \" || text.charAt(0) === '\\t' || text.charAt(0) === ';')) {\r\n\t\t\t\teditor.edit((editBuilder) => {\r\n\t\t\t\t\teditBuilder.insert(InsertPosition, makeSignature(text))\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction makeSignature(labelLine: string) {\r\n\tlet Signature = \"\"\r\n\tlet parameterString: string[] = [];\r\n\tSignature += DIVIDERLINE\r\n\tSignature += \"\\t; DESCRIPTION: \\n\"\r\n\tconst parameters = labelLine.match(/\\(.*\\)/);\r\n\tif (parameters !== null && parameters.length > 0) {\r\n\t\tparameterString = parameters[0].toString().substring(1, parameters[0].toString().length - 1).split(\",\")\r\n\t\tif (parameterString.length > 0) {\r\n\t\t\tSignature += \"\\t; PARAMETERS: \\n\"\r\n\t\t\tparameterString.forEach(function (element: string) {\r\n\t\t\t\tSignature += \"\\t;    \" + element + \": \\n\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tSignature += \"\\t; RETURNS: \\n\"\r\n\tSignature += \"\\t; REVISIONS: \\n\"\r\n\tSignature += DIVIDERLINE\r\n\treturn Signature;\r\n}\r\n\r\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = exports.Response = exports.Event = exports.ErrorDestination = exports.CompletionItem = exports.Module = exports.Source = exports.Breakpoint = exports.Variable = exports.Scope = exports.StackFrame = exports.Thread = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.logger = exports.Logger = exports.LoggingDebugSession = exports.DebugSession = void 0;\nconst debugSession_1 = require(\"./debugSession\");\nObject.defineProperty(exports, \"DebugSession\", { enumerable: true, get: function () { return debugSession_1.DebugSession; } });\nObject.defineProperty(exports, \"InitializedEvent\", { enumerable: true, get: function () { return debugSession_1.InitializedEvent; } });\nObject.defineProperty(exports, \"TerminatedEvent\", { enumerable: true, get: function () { return debugSession_1.TerminatedEvent; } });\nObject.defineProperty(exports, \"ExitedEvent\", { enumerable: true, get: function () { return debugSession_1.ExitedEvent; } });\nObject.defineProperty(exports, \"StoppedEvent\", { enumerable: true, get: function () { return debugSession_1.StoppedEvent; } });\nObject.defineProperty(exports, \"ContinuedEvent\", { enumerable: true, get: function () { return debugSession_1.ContinuedEvent; } });\nObject.defineProperty(exports, \"OutputEvent\", { enumerable: true, get: function () { return debugSession_1.OutputEvent; } });\nObject.defineProperty(exports, \"ThreadEvent\", { enumerable: true, get: function () { return debugSession_1.ThreadEvent; } });\nObject.defineProperty(exports, \"BreakpointEvent\", { enumerable: true, get: function () { return debugSession_1.BreakpointEvent; } });\nObject.defineProperty(exports, \"ModuleEvent\", { enumerable: true, get: function () { return debugSession_1.ModuleEvent; } });\nObject.defineProperty(exports, \"LoadedSourceEvent\", { enumerable: true, get: function () { return debugSession_1.LoadedSourceEvent; } });\nObject.defineProperty(exports, \"CapabilitiesEvent\", { enumerable: true, get: function () { return debugSession_1.CapabilitiesEvent; } });\nObject.defineProperty(exports, \"ProgressStartEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressStartEvent; } });\nObject.defineProperty(exports, \"ProgressUpdateEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressUpdateEvent; } });\nObject.defineProperty(exports, \"ProgressEndEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressEndEvent; } });\nObject.defineProperty(exports, \"InvalidatedEvent\", { enumerable: true, get: function () { return debugSession_1.InvalidatedEvent; } });\nObject.defineProperty(exports, \"MemoryEvent\", { enumerable: true, get: function () { return debugSession_1.MemoryEvent; } });\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return debugSession_1.Thread; } });\nObject.defineProperty(exports, \"StackFrame\", { enumerable: true, get: function () { return debugSession_1.StackFrame; } });\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return debugSession_1.Scope; } });\nObject.defineProperty(exports, \"Variable\", { enumerable: true, get: function () { return debugSession_1.Variable; } });\nObject.defineProperty(exports, \"Breakpoint\", { enumerable: true, get: function () { return debugSession_1.Breakpoint; } });\nObject.defineProperty(exports, \"Source\", { enumerable: true, get: function () { return debugSession_1.Source; } });\nObject.defineProperty(exports, \"Module\", { enumerable: true, get: function () { return debugSession_1.Module; } });\nObject.defineProperty(exports, \"CompletionItem\", { enumerable: true, get: function () { return debugSession_1.CompletionItem; } });\nObject.defineProperty(exports, \"ErrorDestination\", { enumerable: true, get: function () { return debugSession_1.ErrorDestination; } });\nconst loggingDebugSession_1 = require(\"./loggingDebugSession\");\nObject.defineProperty(exports, \"LoggingDebugSession\", { enumerable: true, get: function () { return loggingDebugSession_1.LoggingDebugSession; } });\nconst Logger = require(\"./logger\");\nexports.Logger = Logger;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return messages_1.Event; } });\nObject.defineProperty(exports, \"Response\", { enumerable: true, get: function () { return messages_1.Response; } });\nconst handles_1 = require(\"./handles\");\nObject.defineProperty(exports, \"Handles\", { enumerable: true, get: function () { return handles_1.Handles; } });\nconst logger = Logger.logger;\nexports.logger = logger;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBQ2hHLFlBQVksQ0FBQzs7O0FBRWIsaURBT3dCO0FBU3ZCLDZGQWZBLDJCQUFZLE9BZUE7QUFJWixpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNkZBbEJBLDJCQUFZLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQ25JLGtHQWxCQSxnQ0FBaUIsT0FrQkE7QUFBRSxrR0FsQkEsZ0NBQWlCLE9Ba0JBO0FBQUUsbUdBbEJBLGlDQUFrQixPQWtCQTtBQUFFLG9HQWxCQSxrQ0FBbUIsT0FrQkE7QUFBRSxpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsaUdBbEJBLCtCQUFnQixPQWtCQTtBQUFFLDRGQWxCQSwwQkFBVyxPQWtCQTtBQUMvSCx1RkFsQkEscUJBQU0sT0FrQkE7QUFBRSwyRkFsQkEseUJBQVUsT0FrQkE7QUFBRSxzRkFsQkEsb0JBQUssT0FrQkE7QUFBRSx5RkFsQkEsdUJBQVEsT0FrQkE7QUFDbkMsMkZBbEJBLHlCQUFVLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQzFDLGlHQWxCQSwrQkFBZ0IsT0FrQkE7QUFoQmpCLCtEQUEwRDtBQVN6RCxvR0FUTyx5Q0FBbUIsT0FTUDtBQVJwQixtQ0FBbUM7QUFTbEMsd0JBQU07QUFSUCx5Q0FBNkM7QUFlNUMsc0ZBZlEsZ0JBQUssT0FlUjtBQUFFLHlGQWZRLG1CQUFRLE9BZVI7QUFkaEIsdUNBQW9DO0FBZW5DLHdGQWZRLGlCQUFPLE9BZVI7QUFiUixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBTTVCLHdCQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1xuXHREZWJ1Z1Nlc3Npb24sXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb25cbn0gZnJvbSAnLi9kZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0IHtMb2dnaW5nRGVidWdTZXNzaW9ufSBmcm9tICcuL2xvZ2dpbmdEZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB7IEV2ZW50LCBSZXNwb25zZSB9IGZyb20gJy4vbWVzc2FnZXMnO1xuaW1wb3J0IHsgSGFuZGxlcyB9IGZyb20gJy4vaGFuZGxlcyc7XG5cbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5cbmV4cG9ydCB7XG5cdERlYnVnU2Vzc2lvbixcblx0TG9nZ2luZ0RlYnVnU2Vzc2lvbixcblx0TG9nZ2VyLFxuXHRsb2dnZXIsXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb24sXG5cdEV2ZW50LCBSZXNwb25zZSxcblx0SGFuZGxlc1xufVxuIl19","import * as vscode from 'vscode';\nexport default class MumpsFormattingHelpProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tprovideDocumentFormattingEdits(document: vscode.TextDocument) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n\tprovideDocumentRangeFormattingEdits(document: vscode.TextDocument, range: vscode.Range) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = range.start.line; i <= range.end.line; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n}\nfunction formatDocumentLine(line: string, lineNumber: number, textEdits) {\n\tconst emptyLine = line.replace(/( |\\t)/ig, \"\");\n\tif (emptyLine.length === 0) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, 0), \"\\t;\"))\n\t}\n\tif (line.endsWith(\". \") || line.endsWith(\".\")) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, line.length), \";\"))\n\t}\n\tif (line.startsWith(\" \")) {\n\t\tlet endSpace: number;\n\t\tfor (endSpace = 0; endSpace < line.length; endSpace++) {\n\t\t\tif (line.charAt(endSpace) !== \" \") {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, 0), new vscode.Position(lineNumber, endSpace)), \"\\t\"));\n\t}\n\tif (line.match(/^([A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?)?[\\t ]+\\./)) { //labeled or unlabeled Line with .\n\t\tlet replacementString = \". \";\n\t\tconst dotPosition = line.indexOf(\".\");\n\t\tlet dotCount = 1;\n\t\tlet spaceCount = 0;\n\t\tlet char = \"\";\n\t\tdo {\n\t\t\tchar = line.charAt(dotCount + spaceCount + dotPosition);\n\t\t\tif (char === \" \") {\n\t\t\t\tspaceCount++;\n\t\t\t} else if (char === \".\") {\n\t\t\t\tdotCount++;\n\t\t\t\treplacementString += \". \";\n\t\t\t}\n\t\t} while (char === \".\" || char === \" \")\n\t\tif (dotCount !== spaceCount) {\n\t\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, dotPosition), new vscode.Position(lineNumber, dotPosition + dotCount + spaceCount)), replacementString));\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\n\ntype Subroutines = {\n\t[name: string]: {\n\t\tstartLine: number;\n\t\tendLine: number;\n\t};\n};\n\nexport default class MumpsFoldingProvider implements vscode.FoldingRangeProvider {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _subroutines: Subroutines = {};\n\tprivate _foldingRanges: vscode.FoldingRange[] = []\n\tpublic provideFoldingRanges(document: vscode.TextDocument): vscode.ProviderResult<vscode.FoldingRange[]> {\n\t\tconst parseDb = MumpsParseDb.getInstance(document)\n\t\tthis._linetokens = parseDb.getDocumentTokens()\n\t\tthis._foldingRanges = []\n\t\tthis._subroutines = {}\n\t\tlet line = -1\n\t\twhile (line !== -2 && line < this._linetokens.length) {\n\t\t\tconst startSubroutine = ++line\n\t\t\tline = this._lookforNextSubroutineEnd(line)\n\t\t\tif (line === -2) break;\n\t\t\tthis._generateFoldingInfo(startSubroutine, line)\n\t\t}\n\t\tObject.keys(this._subroutines).forEach((name) => {\n\t\t\tthis._separateCommentsandCode(name)\n\t\t})\n\t\treturn this._foldingRanges\n\t}\n\tprivate _lookforNextSubroutineEnd(line: number): number {\n\t\tfor (let index = line; index < this._linetokens.length; index++) {\n\t\t\tconst tokens = this._linetokens[index];\n\t\t\tlet subroutineEndFound = false;\n\t\t\tfor (let j = 0; j < tokens.length; j++) {\n\t\t\t\tconst token = tokens[j]\n\t\t\t\tif (token.type === TokenType.indentation) {\n\t\t\t\t\tbreak; // Ignore QUIT etc in indentation-levels > 0\n\t\t\t\t}\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"FOR\" || command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\t\tbreak; // Ignore QUIT etc after FOR and IF\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(command === \"QUIT\" ||\n\t\t\t\t\t\t\tcommand === \"GOTO\" ||\n\t\t\t\t\t\t\tcommand === \"ZGOTO\" ||\n\t\t\t\t\t\t\tcommand === \"HALT\" ||\n\t\t\t\t\t\t\tcommand === \"ZHALT\") &&\n\t\t\t\t\t\ttoken.isPostconditioned === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (command === \"GOTO\" || command === \"ZGOTO\") {\n\t\t\t\t\t\t\tlet hasPostcondition = false\n\t\t\t\t\t\t\tfor (let k = j + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (subroutineEndFound) {\n\t\t\t\treturn index\n\t\t\t}\n\t\t}\n\t\treturn -2\n\t}\n\tprivate _separateCommentsandCode(subroutineName: string) {\n\t\tconst subroutine = this._subroutines[subroutineName]\n\t\tlet commentStart = -1\n\t\tlet commentLines = 0\n\t\tfor (let line = subroutine.startLine; line < subroutine.endLine; line++) {\n\t\t\tif (this._linetokens[line][0]?.type === TokenType.label && this._linetokens[line][0].name === subroutineName) {\n\t\t\t\tif (commentLines > 1) {\n\t\t\t\t\tthis._foldingRanges.push({ start: commentStart, end: commentStart + commentLines - 1 })\n\t\t\t\t}\n\t\t\t\tcommentStart = -1\n\t\t\t\tcommentLines = 0\n\t\t\t\tthis._foldingRanges.push({ start: line, end: subroutine.endLine })\n\t\t\t} else if (this._linetokens[line][0]?.type === TokenType.comment\n\t\t\t\t|| this._linetokens[line][1]?.type === TokenType.comment\n\t\t\t\t&& this._linetokens[line][0]?.type !== TokenType.label) {\n\t\t\t\tif (commentStart === -1) {\n\t\t\t\t\tcommentStart = line\n\t\t\t\t\tcommentLines = 1\n\t\t\t\t} else commentLines++\n\t\t\t} else {\n\t\t\t\tif (commentLines > 1) {\n\t\t\t\t\tthis._foldingRanges.push({ start: commentStart, end: commentStart + commentLines - 1 })\n\t\t\t\t}\n\t\t\t\tcommentStart = -1\n\t\t\t\tcommentLines = 0\n\t\t\t}\n\t\t}\n\t}\n\tprivate _generateFoldingInfo(startLine: number, endLine: number) {\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tconst tokens = this._linetokens[i]\n\t\t\tif (tokens[0]?.type === TokenType.label) {\n\t\t\t\tconst label = tokens[0].name\n\t\t\t\tthis._subroutines[label] = { startLine, endLine }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}","import * as vscode from 'vscode';\n\nexport default class MumpsEvalutableExpressionProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tprovideEvaluatableExpression(document: vscode.TextDocument, position: vscode.Position): vscode.ProviderResult<vscode.EvaluatableExpression> {\n\t\tconst lineContent = document.lineAt(position.line).text;\n\t\tif (lineContent.charAt(position.character) === \")\") {\n\t\t\treturn MumpsEvalutableExpressionProvider.getExpression(position.line, lineContent.substring(0, position.character))\n\t\t}\n\t\tlet result: RegExpExecArray | null = null;\n\t\tconst expression = /([ (.,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)/g;\n\n\t\t// find the word under the cursor\n\t\t// eslint-disable-next-line no-cond-assign\n\t\twhile (result = expression.exec(lineContent)) {\n\t\t\tlet start = result.index;\n\t\t\tstart += result[0].length - result[2].length; // ignore first part of expression\n\t\t\tconst end = start + result[2].length - 1;\n\t\t\tif (start <= position.character && end >= position.character) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(position.line, start, position.line, end), result[2]);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\tstatic getExpression(line: number, content: string): vscode.EvaluatableExpression | undefined {\n\t\tlet isInsideString = false;\n\t\tfor (let i = 0; i < content.length; i++) {\n\t\t\tif (content.charAt(i) === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t}\n\t\tif (isInsideString) { //Closing Bracket is inside a String - no evaluable Expression\n\t\t\treturn;\n\t\t}\n\t\tlet level = 1;\n\t\tlet position = 0;\n\t\tfor (let i = content.length - 1; i > -1; i--) {\n\t\t\tconst char = content.charAt(i);\n\t\t\tif (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tlevel--;\n\t\t\t\tif (level === 0) {\n\t\t\t\t\tposition = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (char === ')' && !isInsideString) {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t}\n\t\tif (level === 0) { // Corresponding opening bracket found\n\t\t\tconst part = content.substring(0, position);\n\t\t\tconst expression = /([ (,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)$/\n\t\t\tconst match = part.match(expression);\n\t\t\tif (match) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(line, position - match[2].length, line, content.length + 1));\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalLogger = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst logger_1 = require(\"./logger\");\n/**\n * Manages logging, whether to console.log, file, or VS Code console.\n * Encapsulates the state specific to each logging session\n */\nclass InternalLogger {\n    constructor(logCallback, isServer) {\n        /** Dispose and allow exit to continue normally */\n        this.beforeExitCallback = () => this.dispose();\n        this._logCallback = logCallback;\n        this._logToConsole = isServer;\n        this._minLogLevel = logger_1.LogLevel.Warn;\n        this.disposeCallback = (signal, code) => {\n            this.dispose();\n            // Exit with 128 + value of the signal code.\n            // https://nodejs.org/api/process.html#process_exit_codes\n            code = code || 2; // SIGINT\n            code += 128;\n            process.exit(code);\n        };\n    }\n    async setup(options) {\n        this._minLogLevel = options.consoleMinLogLevel;\n        this._prependTimestamp = options.prependTimestamp;\n        // Open a log file in the specified location. Overwritten on each run.\n        if (options.logFilePath) {\n            if (!path.isAbsolute(options.logFilePath)) {\n                this.log(`logFilePath must be an absolute path: ${options.logFilePath}`, logger_1.LogLevel.Error);\n            }\n            else {\n                const handleError = (err) => this.sendLog(`Error creating log file at path: ${options.logFilePath}. Error: ${err.toString()}\\n`, logger_1.LogLevel.Error);\n                try {\n                    await fs.promises.mkdir(path.dirname(options.logFilePath), { recursive: true });\n                    this.log(`Verbose logs are written to:\\n`, logger_1.LogLevel.Warn);\n                    this.log(options.logFilePath + '\\n', logger_1.LogLevel.Warn);\n                    this._logFileStream = fs.createWriteStream(options.logFilePath);\n                    this.logDateTime();\n                    this.setupShutdownListeners();\n                    this._logFileStream.on('error', err => {\n                        handleError(err);\n                    });\n                }\n                catch (err) {\n                    handleError(err);\n                }\n            }\n        }\n    }\n    logDateTime() {\n        let d = new Date();\n        let dateString = d.getUTCFullYear() + '-' + `${d.getUTCMonth() + 1}` + '-' + d.getUTCDate();\n        const timeAndDateStamp = dateString + ', ' + getFormattedTimeString();\n        this.log(timeAndDateStamp + '\\n', logger_1.LogLevel.Verbose, false);\n    }\n    setupShutdownListeners() {\n        process.on('beforeExit', this.beforeExitCallback);\n        process.on('SIGTERM', this.disposeCallback);\n        process.on('SIGINT', this.disposeCallback);\n    }\n    removeShutdownListeners() {\n        process.removeListener('beforeExit', this.beforeExitCallback);\n        process.removeListener('SIGTERM', this.disposeCallback);\n        process.removeListener('SIGINT', this.disposeCallback);\n    }\n    dispose() {\n        return new Promise(resolve => {\n            this.removeShutdownListeners();\n            if (this._logFileStream) {\n                this._logFileStream.end(resolve);\n                this._logFileStream = null;\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    log(msg, level, prependTimestamp = true) {\n        if (this._minLogLevel === logger_1.LogLevel.Stop) {\n            return;\n        }\n        if (level >= this._minLogLevel) {\n            this.sendLog(msg, level);\n        }\n        if (this._logToConsole) {\n            const logFn = level === logger_1.LogLevel.Error ? console.error :\n                level === logger_1.LogLevel.Warn ? console.warn :\n                    null;\n            if (logFn) {\n                logFn((0, logger_1.trimLastNewline)(msg));\n            }\n        }\n        // If an error, prepend with '[Error]'\n        if (level === logger_1.LogLevel.Error) {\n            msg = `[${logger_1.LogLevel[level]}] ${msg}`;\n        }\n        if (this._prependTimestamp && prependTimestamp) {\n            msg = '[' + getFormattedTimeString() + '] ' + msg;\n        }\n        if (this._logFileStream) {\n            this._logFileStream.write(msg);\n        }\n    }\n    sendLog(msg, level) {\n        // Truncate long messages, they can hang VS Code\n        if (msg.length > 1500) {\n            const endsInNewline = !!msg.match(/(\\n|\\r\\n)$/);\n            msg = msg.substr(0, 1500) + '[...]';\n            if (endsInNewline) {\n                msg = msg + '\\n';\n            }\n        }\n        if (this._logCallback) {\n            const event = new logger_1.LogOutputEvent(msg, level);\n            this._logCallback(event);\n        }\n    }\n}\nexports.InternalLogger = InternalLogger;\nfunction getFormattedTimeString() {\n    let d = new Date();\n    let hourString = _padZeroes(2, String(d.getUTCHours()));\n    let minuteString = _padZeroes(2, String(d.getUTCMinutes()));\n    let secondString = _padZeroes(2, String(d.getUTCSeconds()));\n    let millisecondString = _padZeroes(3, String(d.getUTCMilliseconds()));\n    return hourString + ':' + minuteString + ':' + secondString + '.' + millisecondString + ' UTC';\n}\nfunction _padZeroes(minDesiredLength, numberToPad) {\n    if (numberToPad.length >= minDesiredLength) {\n        return numberToPad;\n    }\n    else {\n        return String('0'.repeat(minDesiredLength) + numberToPad).slice(-minDesiredLength);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = void 0;\nclass Handles {\n    constructor(startHandle) {\n        this.START_HANDLE = 1000;\n        this._handleMap = new Map();\n        this._nextHandle = typeof startHandle === 'number' ? startHandle : this.START_HANDLE;\n    }\n    reset() {\n        this._nextHandle = this.START_HANDLE;\n        this._handleMap = new Map();\n    }\n    create(value) {\n        var handle = this._nextHandle++;\n        this._handleMap.set(handle, value);\n        return handle;\n    }\n    get(handle, dflt) {\n        return this._handleMap.get(handle) || dflt;\n    }\n}\nexports.Handles = Handles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBRWhHLE1BQWEsT0FBTztJQU9uQixZQUFtQixXQUFvQjtRQUwvQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUdwQixlQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztRQUd6QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sV0FBVyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RGLENBQUM7SUFFTSxLQUFLO1FBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztJQUN4QyxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQVE7UUFDckIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNuQyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTSxHQUFHLENBQUMsTUFBYyxFQUFFLElBQVE7UUFDbEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDNUMsQ0FBQztDQUNEO0FBekJELDBCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5leHBvcnQgY2xhc3MgSGFuZGxlczxUPiB7XG5cblx0cHJpdmF0ZSBTVEFSVF9IQU5ETEUgPSAxMDAwO1xuXG5cdHByaXZhdGUgX25leHRIYW5kbGUgOiBudW1iZXI7XG5cdHByaXZhdGUgX2hhbmRsZU1hcCA9IG5ldyBNYXA8bnVtYmVyLCBUPigpO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihzdGFydEhhbmRsZT86IG51bWJlcikge1xuXHRcdHRoaXMuX25leHRIYW5kbGUgPSB0eXBlb2Ygc3RhcnRIYW5kbGUgPT09ICdudW1iZXInID8gc3RhcnRIYW5kbGUgOiB0aGlzLlNUQVJUX0hBTkRMRTtcblx0fVxuXG5cdHB1YmxpYyByZXNldCgpOiB2b2lkIHtcblx0XHR0aGlzLl9uZXh0SGFuZGxlID0gdGhpcy5TVEFSVF9IQU5ETEU7XG5cdFx0dGhpcy5faGFuZGxlTWFwID0gbmV3IE1hcDxudW1iZXIsIFQ+KCk7XG5cdH1cblxuXHRwdWJsaWMgY3JlYXRlKHZhbHVlOiBUKTogbnVtYmVyIHtcblx0XHR2YXIgaGFuZGxlID0gdGhpcy5fbmV4dEhhbmRsZSsrO1xuXHRcdHRoaXMuX2hhbmRsZU1hcC5zZXQoaGFuZGxlLCB2YWx1ZSk7XG5cdFx0cmV0dXJuIGhhbmRsZTtcblx0fVxuXG5cdHB1YmxpYyBnZXQoaGFuZGxlOiBudW1iZXIsIGRmbHQ/OiBUKTogVCB7XG5cdFx0cmV0dXJuIHRoaXMuX2hhbmRsZU1hcC5nZXQoaGFuZGxlKSB8fCBkZmx0O1xuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DebugSession = exports.ErrorDestination = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.CompletionItem = exports.Module = exports.Breakpoint = exports.Variable = exports.Thread = exports.StackFrame = exports.Scope = exports.Source = void 0;\nconst protocol_1 = require(\"./protocol\");\nconst messages_1 = require(\"./messages\");\nconst runDebugAdapter_1 = require(\"./runDebugAdapter\");\nconst url_1 = require(\"url\");\nclass Source {\n    constructor(name, path, id = 0, origin, data) {\n        this.name = name;\n        this.path = path;\n        this.sourceReference = id;\n        if (origin) {\n            this.origin = origin;\n        }\n        if (data) {\n            this.adapterData = data;\n        }\n    }\n}\nexports.Source = Source;\nclass Scope {\n    constructor(name, reference, expensive = false) {\n        this.name = name;\n        this.variablesReference = reference;\n        this.expensive = expensive;\n    }\n}\nexports.Scope = Scope;\nclass StackFrame {\n    constructor(i, nm, src, ln = 0, col = 0) {\n        this.id = i;\n        this.source = src;\n        this.line = ln;\n        this.column = col;\n        this.name = nm;\n    }\n}\nexports.StackFrame = StackFrame;\nclass Thread {\n    constructor(id, name) {\n        this.id = id;\n        if (name) {\n            this.name = name;\n        }\n        else {\n            this.name = 'Thread #' + id;\n        }\n    }\n}\nexports.Thread = Thread;\nclass Variable {\n    constructor(name, value, ref = 0, indexedVariables, namedVariables) {\n        this.name = name;\n        this.value = value;\n        this.variablesReference = ref;\n        if (typeof namedVariables === 'number') {\n            this.namedVariables = namedVariables;\n        }\n        if (typeof indexedVariables === 'number') {\n            this.indexedVariables = indexedVariables;\n        }\n    }\n}\nexports.Variable = Variable;\nclass Breakpoint {\n    constructor(verified, line, column, source) {\n        this.verified = verified;\n        const e = this;\n        if (typeof line === 'number') {\n            e.line = line;\n        }\n        if (typeof column === 'number') {\n            e.column = column;\n        }\n        if (source) {\n            e.source = source;\n        }\n    }\n    setId(id) {\n        this.id = id;\n    }\n}\nexports.Breakpoint = Breakpoint;\nclass Module {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.Module = Module;\nclass CompletionItem {\n    constructor(label, start, length = 0) {\n        this.label = label;\n        this.start = start;\n        this.length = length;\n    }\n}\nexports.CompletionItem = CompletionItem;\nclass StoppedEvent extends messages_1.Event {\n    constructor(reason, threadId, exceptionText) {\n        super('stopped');\n        this.body = {\n            reason: reason\n        };\n        if (typeof threadId === 'number') {\n            this.body.threadId = threadId;\n        }\n        if (typeof exceptionText === 'string') {\n            this.body.text = exceptionText;\n        }\n    }\n}\nexports.StoppedEvent = StoppedEvent;\nclass ContinuedEvent extends messages_1.Event {\n    constructor(threadId, allThreadsContinued) {\n        super('continued');\n        this.body = {\n            threadId: threadId\n        };\n        if (typeof allThreadsContinued === 'boolean') {\n            this.body.allThreadsContinued = allThreadsContinued;\n        }\n    }\n}\nexports.ContinuedEvent = ContinuedEvent;\nclass InitializedEvent extends messages_1.Event {\n    constructor() {\n        super('initialized');\n    }\n}\nexports.InitializedEvent = InitializedEvent;\nclass TerminatedEvent extends messages_1.Event {\n    constructor(restart) {\n        super('terminated');\n        if (typeof restart === 'boolean' || restart) {\n            const e = this;\n            e.body = {\n                restart: restart\n            };\n        }\n    }\n}\nexports.TerminatedEvent = TerminatedEvent;\nclass ExitedEvent extends messages_1.Event {\n    constructor(exitCode) {\n        super('exited');\n        this.body = {\n            exitCode: exitCode\n        };\n    }\n}\nexports.ExitedEvent = ExitedEvent;\nclass OutputEvent extends messages_1.Event {\n    constructor(output, category = 'console', data) {\n        super('output');\n        this.body = {\n            category: category,\n            output: output\n        };\n        if (data !== undefined) {\n            this.body.data = data;\n        }\n    }\n}\nexports.OutputEvent = OutputEvent;\nclass ThreadEvent extends messages_1.Event {\n    constructor(reason, threadId) {\n        super('thread');\n        this.body = {\n            reason: reason,\n            threadId: threadId\n        };\n    }\n}\nexports.ThreadEvent = ThreadEvent;\nclass BreakpointEvent extends messages_1.Event {\n    constructor(reason, breakpoint) {\n        super('breakpoint');\n        this.body = {\n            reason: reason,\n            breakpoint: breakpoint\n        };\n    }\n}\nexports.BreakpointEvent = BreakpointEvent;\nclass ModuleEvent extends messages_1.Event {\n    constructor(reason, module) {\n        super('module');\n        this.body = {\n            reason: reason,\n            module: module\n        };\n    }\n}\nexports.ModuleEvent = ModuleEvent;\nclass LoadedSourceEvent extends messages_1.Event {\n    constructor(reason, source) {\n        super('loadedSource');\n        this.body = {\n            reason: reason,\n            source: source\n        };\n    }\n}\nexports.LoadedSourceEvent = LoadedSourceEvent;\nclass CapabilitiesEvent extends messages_1.Event {\n    constructor(capabilities) {\n        super('capabilities');\n        this.body = {\n            capabilities: capabilities\n        };\n    }\n}\nexports.CapabilitiesEvent = CapabilitiesEvent;\nclass ProgressStartEvent extends messages_1.Event {\n    constructor(progressId, title, message) {\n        super('progressStart');\n        this.body = {\n            progressId: progressId,\n            title: title\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressStartEvent = ProgressStartEvent;\nclass ProgressUpdateEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressUpdate');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressUpdateEvent = ProgressUpdateEvent;\nclass ProgressEndEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressEnd');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressEndEvent = ProgressEndEvent;\nclass InvalidatedEvent extends messages_1.Event {\n    constructor(areas, threadId, stackFrameId) {\n        super('invalidated');\n        this.body = {};\n        if (areas) {\n            this.body.areas = areas;\n        }\n        if (threadId) {\n            this.body.threadId = threadId;\n        }\n        if (stackFrameId) {\n            this.body.stackFrameId = stackFrameId;\n        }\n    }\n}\nexports.InvalidatedEvent = InvalidatedEvent;\nclass MemoryEvent extends messages_1.Event {\n    constructor(memoryReference, offset, count) {\n        super('memory');\n        this.body = { memoryReference, offset, count };\n    }\n}\nexports.MemoryEvent = MemoryEvent;\nvar ErrorDestination;\n(function (ErrorDestination) {\n    ErrorDestination[ErrorDestination[\"User\"] = 1] = \"User\";\n    ErrorDestination[ErrorDestination[\"Telemetry\"] = 2] = \"Telemetry\";\n})(ErrorDestination = exports.ErrorDestination || (exports.ErrorDestination = {}));\n;\nclass DebugSession extends protocol_1.ProtocolServer {\n    constructor(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super();\n        const linesAndColumnsStartAt1 = typeof obsolete_debuggerLinesAndColumnsStartAt1 === 'boolean' ? obsolete_debuggerLinesAndColumnsStartAt1 : false;\n        this._debuggerLinesStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerColumnsStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerPathsAreURIs = false;\n        this._clientLinesStartAt1 = true;\n        this._clientColumnsStartAt1 = true;\n        this._clientPathsAreURIs = false;\n        this._isServer = typeof obsolete_isServer === 'boolean' ? obsolete_isServer : false;\n        this.on('close', () => {\n            this.shutdown();\n        });\n        this.on('error', (error) => {\n            this.shutdown();\n        });\n    }\n    setDebuggerPathFormat(format) {\n        this._debuggerPathsAreURIs = format !== 'path';\n    }\n    setDebuggerLinesStartAt1(enable) {\n        this._debuggerLinesStartAt1 = enable;\n    }\n    setDebuggerColumnsStartAt1(enable) {\n        this._debuggerColumnsStartAt1 = enable;\n    }\n    setRunAsServer(enable) {\n        this._isServer = enable;\n    }\n    /**\n     * A virtual constructor...\n     */\n    static run(debugSession) {\n        (0, runDebugAdapter_1.runDebugAdapter)(debugSession);\n    }\n    shutdown() {\n        if (this._isServer || this._isRunningInline()) {\n            // shutdown ignored in server mode\n        }\n        else {\n            // wait a bit before shutting down\n            setTimeout(() => {\n                process.exit(0);\n            }, 100);\n        }\n    }\n    sendErrorResponse(response, codeOrMessage, format, variables, dest = ErrorDestination.User) {\n        let msg;\n        if (typeof codeOrMessage === 'number') {\n            msg = {\n                id: codeOrMessage,\n                format: format\n            };\n            if (variables) {\n                msg.variables = variables;\n            }\n            if (dest & ErrorDestination.User) {\n                msg.showUser = true;\n            }\n            if (dest & ErrorDestination.Telemetry) {\n                msg.sendTelemetry = true;\n            }\n        }\n        else {\n            msg = codeOrMessage;\n        }\n        response.success = false;\n        response.message = DebugSession.formatPII(msg.format, true, msg.variables);\n        if (!response.body) {\n            response.body = {};\n        }\n        response.body.error = msg;\n        this.sendResponse(response);\n    }\n    runInTerminalRequest(args, timeout, cb) {\n        this.sendRequest('runInTerminal', args, timeout, cb);\n    }\n    dispatchRequest(request) {\n        const response = new messages_1.Response(request);\n        try {\n            if (request.command === 'initialize') {\n                var args = request.arguments;\n                if (typeof args.linesStartAt1 === 'boolean') {\n                    this._clientLinesStartAt1 = args.linesStartAt1;\n                }\n                if (typeof args.columnsStartAt1 === 'boolean') {\n                    this._clientColumnsStartAt1 = args.columnsStartAt1;\n                }\n                if (args.pathFormat !== 'path') {\n                    this.sendErrorResponse(response, 2018, 'debug adapter only supports native paths', null, ErrorDestination.Telemetry);\n                }\n                else {\n                    const initializeResponse = response;\n                    initializeResponse.body = {};\n                    this.initializeRequest(initializeResponse, args);\n                }\n            }\n            else if (request.command === 'launch') {\n                this.launchRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'attach') {\n                this.attachRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disconnect') {\n                this.disconnectRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'terminate') {\n                this.terminateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restart') {\n                this.restartRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setBreakpoints') {\n                this.setBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setFunctionBreakpoints') {\n                this.setFunctionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExceptionBreakpoints') {\n                this.setExceptionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'configurationDone') {\n                this.configurationDoneRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'continue') {\n                this.continueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'next') {\n                this.nextRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepIn') {\n                this.stepInRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepOut') {\n                this.stepOutRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepBack') {\n                this.stepBackRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'reverseContinue') {\n                this.reverseContinueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restartFrame') {\n                this.restartFrameRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'goto') {\n                this.gotoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'pause') {\n                this.pauseRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stackTrace') {\n                this.stackTraceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'scopes') {\n                this.scopesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'variables') {\n                this.variablesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setVariable') {\n                this.setVariableRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExpression') {\n                this.setExpressionRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'source') {\n                this.sourceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'threads') {\n                this.threadsRequest(response, request);\n            }\n            else if (request.command === 'terminateThreads') {\n                this.terminateThreadsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'evaluate') {\n                this.evaluateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepInTargets') {\n                this.stepInTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'gotoTargets') {\n                this.gotoTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'completions') {\n                this.completionsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'exceptionInfo') {\n                this.exceptionInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'loadedSources') {\n                this.loadedSourcesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'dataBreakpointInfo') {\n                this.dataBreakpointInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setDataBreakpoints') {\n                this.setDataBreakpointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'readMemory') {\n                this.readMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'writeMemory') {\n                this.writeMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disassemble') {\n                this.disassembleRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'cancel') {\n                this.cancelRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'breakpointLocations') {\n                this.breakpointLocationsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setInstructionBreakpoints') {\n                this.setInstructionBreakpointsRequest(response, request.arguments, request);\n            }\n            else {\n                this.customRequest(request.command, response, request.arguments, request);\n            }\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1104, '{_stack}', { _exception: e.message, _stack: e.stack }, ErrorDestination.Telemetry);\n        }\n    }\n    initializeRequest(response, args) {\n        // This default debug adapter does not support conditional breakpoints.\n        response.body.supportsConditionalBreakpoints = false;\n        // This default debug adapter does not support hit conditional breakpoints.\n        response.body.supportsHitConditionalBreakpoints = false;\n        // This default debug adapter does not support function breakpoints.\n        response.body.supportsFunctionBreakpoints = false;\n        // This default debug adapter implements the 'configurationDone' request.\n        response.body.supportsConfigurationDoneRequest = true;\n        // This default debug adapter does not support hovers based on the 'evaluate' request.\n        response.body.supportsEvaluateForHovers = false;\n        // This default debug adapter does not support the 'stepBack' request.\n        response.body.supportsStepBack = false;\n        // This default debug adapter does not support the 'setVariable' request.\n        response.body.supportsSetVariable = false;\n        // This default debug adapter does not support the 'restartFrame' request.\n        response.body.supportsRestartFrame = false;\n        // This default debug adapter does not support the 'stepInTargets' request.\n        response.body.supportsStepInTargetsRequest = false;\n        // This default debug adapter does not support the 'gotoTargets' request.\n        response.body.supportsGotoTargetsRequest = false;\n        // This default debug adapter does not support the 'completions' request.\n        response.body.supportsCompletionsRequest = false;\n        // This default debug adapter does not support the 'restart' request.\n        response.body.supportsRestartRequest = false;\n        // This default debug adapter does not support the 'exceptionOptions' attribute on the 'setExceptionBreakpoints' request.\n        response.body.supportsExceptionOptions = false;\n        // This default debug adapter does not support the 'format' attribute on the 'variables', 'evaluate', and 'stackTrace' request.\n        response.body.supportsValueFormattingOptions = false;\n        // This debug adapter does not support the 'exceptionInfo' request.\n        response.body.supportsExceptionInfoRequest = false;\n        // This debug adapter does not support the 'TerminateDebuggee' attribute on the 'disconnect' request.\n        response.body.supportTerminateDebuggee = false;\n        // This debug adapter does not support delayed loading of stack frames.\n        response.body.supportsDelayedStackTraceLoading = false;\n        // This debug adapter does not support the 'loadedSources' request.\n        response.body.supportsLoadedSourcesRequest = false;\n        // This debug adapter does not support the 'logMessage' attribute of the SourceBreakpoint.\n        response.body.supportsLogPoints = false;\n        // This debug adapter does not support the 'terminateThreads' request.\n        response.body.supportsTerminateThreadsRequest = false;\n        // This debug adapter does not support the 'setExpression' request.\n        response.body.supportsSetExpression = false;\n        // This debug adapter does not support the 'terminate' request.\n        response.body.supportsTerminateRequest = false;\n        // This debug adapter does not support data breakpoints.\n        response.body.supportsDataBreakpoints = false;\n        /** This debug adapter does not support the 'readMemory' request. */\n        response.body.supportsReadMemoryRequest = false;\n        /** The debug adapter does not support the 'disassemble' request. */\n        response.body.supportsDisassembleRequest = false;\n        /** The debug adapter does not support the 'cancel' request. */\n        response.body.supportsCancelRequest = false;\n        /** The debug adapter does not support the 'breakpointLocations' request. */\n        response.body.supportsBreakpointLocationsRequest = false;\n        /** The debug adapter does not support the 'clipboard' context value in the 'evaluate' request. */\n        response.body.supportsClipboardContext = false;\n        /** The debug adapter does not support stepping granularities for the stepping requests. */\n        response.body.supportsSteppingGranularity = false;\n        /** The debug adapter does not support the 'setInstructionBreakpoints' request. */\n        response.body.supportsInstructionBreakpoints = false;\n        /** The debug adapter does not support 'filterOptions' on the 'setExceptionBreakpoints' request. */\n        response.body.supportsExceptionFilterOptions = false;\n        this.sendResponse(response);\n    }\n    disconnectRequest(response, args, request) {\n        this.sendResponse(response);\n        this.shutdown();\n    }\n    launchRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    attachRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    terminateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setFunctionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExceptionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    configurationDoneRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    continueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    nextRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepOutRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepBackRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    reverseContinueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartFrameRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    pauseRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    sourceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    threadsRequest(response, request) {\n        this.sendResponse(response);\n    }\n    terminateThreadsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stackTraceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    scopesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    variablesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setVariableRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExpressionRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    evaluateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    completionsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    exceptionInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    loadedSourcesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    dataBreakpointInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setDataBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    readMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    writeMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    disassembleRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    cancelRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    breakpointLocationsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setInstructionBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    /**\n     * Override this hook to implement custom requests.\n     */\n    customRequest(command, response, args, request) {\n        this.sendErrorResponse(response, 1014, 'unrecognized request', null, ErrorDestination.Telemetry);\n    }\n    //---- protected -------------------------------------------------------------------------------------------------\n    convertClientLineToDebugger(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line + 1;\n        }\n        return this._clientLinesStartAt1 ? line - 1 : line;\n    }\n    convertDebuggerLineToClient(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line - 1;\n        }\n        return this._clientLinesStartAt1 ? line + 1 : line;\n    }\n    convertClientColumnToDebugger(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column + 1;\n        }\n        return this._clientColumnsStartAt1 ? column - 1 : column;\n    }\n    convertDebuggerColumnToClient(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column - 1;\n        }\n        return this._clientColumnsStartAt1 ? column + 1 : column;\n    }\n    convertClientPathToDebugger(clientPath) {\n        if (this._clientPathsAreURIs !== this._debuggerPathsAreURIs) {\n            if (this._clientPathsAreURIs) {\n                return DebugSession.uri2path(clientPath);\n            }\n            else {\n                return DebugSession.path2uri(clientPath);\n            }\n        }\n        return clientPath;\n    }\n    convertDebuggerPathToClient(debuggerPath) {\n        if (this._debuggerPathsAreURIs !== this._clientPathsAreURIs) {\n            if (this._debuggerPathsAreURIs) {\n                return DebugSession.uri2path(debuggerPath);\n            }\n            else {\n                return DebugSession.path2uri(debuggerPath);\n            }\n        }\n        return debuggerPath;\n    }\n    //---- private -------------------------------------------------------------------------------\n    static path2uri(path) {\n        if (process.platform === 'win32') {\n            if (/^[A-Z]:/.test(path)) {\n                path = path[0].toLowerCase() + path.substr(1);\n            }\n            path = path.replace(/\\\\/g, '/');\n        }\n        path = encodeURI(path);\n        let uri = new url_1.URL(`file:`); // ignore 'path' for now\n        uri.pathname = path; // now use 'path' to get the correct percent encoding (see https://url.spec.whatwg.org)\n        return uri.toString();\n    }\n    static uri2path(sourceUri) {\n        let uri = new url_1.URL(sourceUri);\n        let s = decodeURIComponent(uri.pathname);\n        if (process.platform === 'win32') {\n            if (/^\\/[a-zA-Z]:/.test(s)) {\n                s = s[1].toLowerCase() + s.substr(2);\n            }\n            s = s.replace(/\\//g, '\\\\');\n        }\n        return s;\n    }\n    /*\n    * If argument starts with '_' it is OK to send its value to telemetry.\n    */\n    static formatPII(format, excludePII, args) {\n        return format.replace(DebugSession._formatPIIRegexp, function (match, paramName) {\n            if (excludePII && paramName.length > 0 && paramName[0] !== '_') {\n                return match;\n            }\n            return args[paramName] && args.hasOwnProperty(paramName) ?\n                args[paramName] :\n                match;\n        });\n    }\n}\nexports.DebugSession = DebugSession;\nDebugSession._formatPIIRegexp = /{([^}]+)}/g;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWdTZXNzaW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2RlYnVnU2Vzc2lvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztnR0FHZ0c7OztBQUdoRyx5Q0FBNEM7QUFDNUMseUNBQTZDO0FBQzdDLHVEQUFvRDtBQUNwRCw2QkFBMEI7QUFHMUIsTUFBYSxNQUFNO0lBS2xCLFlBQW1CLElBQVksRUFBRSxJQUFhLEVBQUUsS0FBYSxDQUFDLEVBQUUsTUFBZSxFQUFFLElBQVU7UUFDMUYsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7UUFDMUIsSUFBSSxNQUFNLEVBQUU7WUFDTCxJQUFLLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUM1QjtRQUNELElBQUksSUFBSSxFQUFFO1lBQ0gsSUFBSyxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7U0FDL0I7SUFDRixDQUFDO0NBQ0Q7QUFoQkQsd0JBZ0JDO0FBRUQsTUFBYSxLQUFLO0lBS2pCLFlBQW1CLElBQVksRUFBRSxTQUFpQixFQUFFLFlBQXFCLEtBQUs7UUFDN0UsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLFNBQVMsQ0FBQztRQUNwQyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUM1QixDQUFDO0NBQ0Q7QUFWRCxzQkFVQztBQUVELE1BQWEsVUFBVTtJQWF0QixZQUFtQixDQUFTLEVBQUUsRUFBVSxFQUFFLEdBQVksRUFBRSxLQUFhLENBQUMsRUFBRSxNQUFjLENBQUM7UUFDdEYsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztRQUNsQixJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUs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LEVBQUUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3JDO1lBQ0QsQ0FBQyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQzNCO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDO0lBSUQ7O01BRUU7SUFDTSxNQUFNLENBQUMsU0FBUyxDQUFDLE1BQWEsRUFBRSxVQUFtQixFQUFFLElBQTZCO1FBQ3pGLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsVUFBUyxLQUFLLEVBQUUsU0FBUztZQUM3RSxJQUFJLFVBQVUsSUFBSSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO2dCQUMvRCxPQUFPLEtBQUssQ0FBQzthQUNiO1lBQ0QsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUN6RCxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDakIsS0FBSyxDQUFDO1FBQ1IsQ0FBQyxDQUFDLENBQUE7SUFDSCxDQUFDOztBQXhtQkYsb0NBeW1CQztBQWZlLDZCQUFnQixHQUFHLFlBQVksQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5pbXBvcnQgeyBEZWJ1Z1Byb3RvY29sIH0gZnJvbSAnQHZzY29kZS9kZWJ1Z3Byb3RvY29sJztcbmltcG9ydCB7IFByb3RvY29sU2VydmVyIH0gZnJvbSAnLi9wcm90b2NvbCc7XG5pbXBvcnQgeyBSZXNwb25zZSwgRXZlbnQgfSBmcm9tICcuL21lc3NhZ2VzJztcbmltcG9ydCB7IHJ1bkRlYnVnQWRhcHRlciB9IGZyb20gJy4vcnVuRGVidWdBZGFwdGVyJztcbmltcG9ydCB7IFVSTCB9IGZyb20gJ3VybCc7XG5cblxuZXhwb3J0IGNsYXNzIFNvdXJjZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuU291cmNlIHtcblx0bmFtZTogc3RyaW5nO1xuXHRwYXRoOiBzdHJpbmc7XG5cdHNvdXJjZVJlZmVyZW5jZTogbnVtYmVyO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsIHBhdGg/OiBzdHJpbmcsIGlkOiBudW1iZXIgPSAwLCBvcmlnaW4/OiBzdHJpbmcsIGRhdGE/OiBhbnkpIHtcblx0XHR0aGlzLm5hbWUgPSBuYW1lO1xuXHRcdHRoaXMucGF0aCA9IHBhdGg7XG5cdFx0dGhpcy5zb3VyY2VSZWZlcmVuY2UgPSBpZDtcblx0XHRpZiAob3JpZ2luKSB7XG5cdFx0XHQoPGFueT50aGlzKS5vcmlnaW4gPSBvcmlnaW47XG5cdFx0fVxuXHRcdGlmIChkYXRhKSB7XG5cdFx0XHQoPGFueT50aGlzKS5hZGFwdGVyRGF0YSA9IGRhdGE7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBTY29wZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuU2NvcGUge1xuXHRuYW1lOiBzdHJpbmc7XG5cdHZhcmlhYmxlc1JlZmVyZW5jZTogbnVtYmVyO1xuXHRleHBlbnNpdmU6IGJvb2xlYW47XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgcmVmZXJlbmNlOiBudW1iZXIsIGV4cGVuc2l2ZTogYm9vbGVhbiA9IGZhbHNlKSB7XG5cdFx0dGhpcy5uYW1lID0gbmFtZTtcblx0XHR0aGlzLnZhcmlhYmxlc1JlZmVyZW5jZSA9IHJlZmVyZW5jZTtcblx0XHR0aGlzLmV4cGVuc2l2ZSA9IGV4cGVuc2l2ZTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgU3RhY2tGcmFtZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuU3RhY2tGcmFtZSB7XG5cdGlkOiBudW1iZXI7XG5cdG5hbWU6IHN0cmluZztcblx0c291cmNlPzogRGVidWdQcm90b2NvbC5Tb3VyY2U7XG5cdGxpbmU6IG51bWJlcjtcblx0Y29sdW1uOiBudW1iZXI7XG5cdGVuZExpbmU/OiBudW1iZXI7XG5cdGVuZENvbHVtbj86IG51bWJlcjtcblx0Y2FuUmVzdGFydD86IGJvb2xlYW47XG5cdGluc3RydWN0aW9uUG9pbnRlclJlZmVyZW5jZT86IHN0cmluZztcblx0bW9kdWxlSWQ/OiBudW1iZXIgfCBzdHJpbmc7XG5cdHByZXNlbnRhdGlvbkhpbnQ/OiAnbm9ybWFsJyB8ICdsYWJlbCcgfCAnc3VidGxlJztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IoaTogbnVtYmVyLCBubTogc3RyaW5nLCBzcmM/OiBTb3VyY2UsIGxuOiBudW1iZXIgPSAwLCBjb2w6IG51bWJlciA9IDApIHtcblx0XHR0aGlzLmlkID0gaTtcblx0XHR0aGlzLnNvdXJjZSA9IHNyYztcblx0XHR0aGlzLmxpbmUgPSBsbjtcblx0XHR0aGlzLmNvbHVtbiA9IGNvbDtcblx0XHR0aGlzLm5hbWUgPSBubTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgVGhyZWFkIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5UaHJlYWQge1xuXHRpZDogbnVtYmVyO1xuXHRuYW1lOiBzdHJpbmc7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIsIG5hbWU6IHN0cmluZykge1xuXHRcdHRoaXMuaWQgPSBpZDtcblx0XHRpZiAobmFtZSkge1xuXHRcdFx0dGhpcy5uYW1lID0gbmFtZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5uYW1lID0gJ1RocmVhZCAjJyArIGlkO1xuXHRcdH1cblx0fVxufVxuXG5leHBvcnQgY2xhc3MgVmFyaWFibGUgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLlZhcmlhYmxlIHtcblx0bmFtZTogc3RyaW5nO1xuXHR2YWx1ZTogc3RyaW5nO1xuXHR2YXJpYWJsZXNSZWZlcmVuY2U6IG51bWJlcjtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IobmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCByZWY6IG51bWJlciA9IDAsIGluZGV4ZWRWYXJpYWJsZXM/OiBudW1iZXIsIG5hbWVkVmFyaWFibGVzPzogbnVtYmVyKSB7XG5cdFx0dGhpcy5uYW1lID0gbmFtZTtcblx0XHR0aGlzLnZhbHVlID0gdmFsdWU7XG5cdFx0dGhpcy52YXJpYWJsZXNSZWZlcmVuY2UgPSByZWY7XG5cdFx0aWYgKHR5cGVvZiBuYW1lZFZhcmlhYmxlcyA9PT0gJ251bWJlcicpIHtcblx0XHRcdCg8RGVidWdQcm90b2NvbC5WYXJpYWJsZT50aGlzKS5uYW1lZFZhcmlhYmxlcyA9IG5hbWVkVmFyaWFibGVzO1xuXHRcdH1cblx0XHRpZiAodHlwZW9mIGluZGV4ZWRWYXJpYWJsZXMgPT09ICdudW1iZXInKSB7XG5cdFx0XHQoPERlYnVnUHJvdG9jb2wuVmFyaWFibGU+dGhpcykuaW5kZXhlZFZhcmlhYmxlcyA9IGluZGV4ZWRWYXJpYWJsZXM7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBCcmVha3BvaW50IGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5CcmVha3BvaW50IHtcblx0dmVyaWZpZWQ6IGJvb2xlYW47XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHZlcmlmaWVkOiBib29sZWFuLCBsaW5lPzogbnVtYmVyLCBjb2x1bW4/OiBudW1iZXIsIHNvdXJjZT86IFNvdXJjZSkge1xuXHRcdHRoaXMudmVyaWZpZWQgPSB2ZXJpZmllZDtcblx0XHRjb25zdCBlOiBEZWJ1Z1Byb3RvY29sLkJyZWFrcG9pbnQgPSB0aGlzO1xuXHRcdGlmICh0eXBlb2YgbGluZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdGUubGluZSA9IGxpbmU7XG5cdFx0fVxuXHRcdGlmICh0eXBlb2YgY29sdW1uID09PSAnbnVtYmVyJykge1xuXHRcdFx0ZS5jb2x1bW4gPSBjb2x1bW47XG5cdFx0fVxuXHRcdGlmIChzb3VyY2UpIHtcblx0XHRcdGUuc291cmNlID0gc291cmNlO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBzZXRJZChpZDogbnVtYmVyKSB7XG5cdFx0KHRoaXMgYXMgRGVidWdQcm90b2NvbC5CcmVha3BvaW50KS5pZCA9IGlkO1xuIFx0fVxufVxuXG5leHBvcnQgY2xhc3MgTW9kdWxlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5Nb2R1bGUge1xuXHRpZDogbnVtYmVyIHwgc3RyaW5nO1xuXHRuYW1lOiBzdHJpbmc7XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIgfCBzdHJpbmcsIG5hbWU6IHN0cmluZykge1xuXHRcdHRoaXMuaWQgPSBpZDtcblx0XHR0aGlzLm5hbWUgPSBuYW1lO1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBDb21wbGV0aW9uSXRlbSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuQ29tcGxldGlvbkl0ZW0ge1xuXHRsYWJlbDogc3RyaW5nO1xuXHRzdGFydDogbnVtYmVyO1xuXHRsZW5ndGg6IG51bWJlcjtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IobGFiZWw6IHN0cmluZywgc3RhcnQ6IG51bWJlciwgbGVuZ3RoOiBudW1iZXIgPSAwKSB7XG5cdFx0dGhpcy5sYWJlbCA9IGxhYmVsO1xuXHRcdHRoaXMuc3RhcnQgPSBzdGFydDtcblx0XHR0aGlzLmxlbmd0aCA9IGxlbmd0aDtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgU3RvcHBlZEV2ZW50IGV4dGVuZHMgRXZlbnQgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLlN0b3BwZWRFdmVudCB7XG5cdGJvZHk6IHtcblx0XHRyZWFzb246IHN0cmluZztcblx0fTtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocmVhc29uOiBzdHJpbmcsIHRocmVhZElkPzogbnVtYmVyLCBleGNlcHRpb25UZXh0Pzogc3RyaW5nKSB7XG5cdFx0c3VwZXIoJ3N0b3BwZWQnKTtcblx0XHR0aGlzLmJvZHkgPSB7XG5cdFx0XHRyZWFzb246IHJlYXNvblxuXHRcdH07XG5cdFx0aWYgKHR5cGVvZiB0aHJlYWRJZCA9PT0gJ251bWJlcicpIHtcblx0XHRcdCh0aGlzIGFzIERlYnVnUHJvdG9jb2wuU3RvcHBlZEV2ZW50KS5ib2R5LnRocmVhZElkID0gdGhyZWFkSWQ7XG5cdFx0fVxuXHRcdGlmICh0eXBlb2YgZXhjZXB0aW9uVGV4dCA9PT0gJ3N0cmluZycpIHtcblx0XHRcdCh0aGlzIGFzIERlYnVnUHJvdG9jb2wuU3RvcHBlZEV2ZW50KS5ib2R5LnRleHQgPSBleGNlcHRpb25UZXh0O1xuXHRcdH1cblx0fVxufVxuXG5leHBvcnQgY2xhc3MgQ29udGludWVkRXZlbnQgZXh0ZW5kcyBFdmVudCBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuQ29udGludWVkRXZlbnQge1xuXHRib2R5OiB7XG5cdFx0dGhyZWFkSWQ6IG51bWJlcjtcblx0fTtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IodGhyZWFkSWQ6IG51bWJlciwgYWxsVGhyZWFkc0NvbnRpbnVlZD86IGJvb2xlYW4pIHtcblx0XHRzdXBlcignY29udGludWVkJyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0dGhyZWFkSWQ6IHRocmVhZElkXG5cdFx0fTtcblxuXHRcdGlmICh0eXBlb2YgYWxsVGhyZWFkc0NvbnRpbnVlZCA9PT0gJ2Jvb2xlYW4nKSB7XG5cdFx0XHQoPERlYnVnUHJvdG9jb2wuQ29udGludWVkRXZlbnQ+dGhpcykuYm9keS5hbGxUaHJlYWRzQ29udGludWVkID0gYWxsVGhyZWFkc0NvbnRpbnVlZDtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIEluaXRpYWxpemVkRXZlbnQgZXh0ZW5kcyBFdmVudCBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuSW5pdGlhbGl6ZWRFdmVudCB7XG5cdHB1YmxpYyBjb25zdHJ1Y3RvcigpIHtcblx0XHRzdXBlcignaW5pdGlhbGl6ZWQnKTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgVGVybWluYXRlZEV2ZW50IGV4dGVuZHMgRXZlbnQgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLlRlcm1pbmF0ZWRFdmVudCB7XG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihyZXN0YXJ0PzogYW55KSB7XG5cdFx0c3VwZXIoJ3Rlcm1pbmF0ZWQnKTtcblx0XHRpZiAodHlwZW9mIHJlc3RhcnQgPT09ICdib29sZWFuJyB8fCByZXN0YXJ0KSB7XG5cdFx0XHRjb25zdCBlOiBEZWJ1Z1Byb3RvY29sLlRlcm1pbmF0ZWRFdmVudCA9IHRoaXM7XG5cdFx0XHRlLmJvZHkgPSB7XG5cdFx0XHRcdHJlc3RhcnQ6IHJlc3RhcnRcblx0XHRcdH07XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBFeGl0ZWRFdmVudCBleHRlbmRzIEV2ZW50IGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5FeGl0ZWRFdmVudCB7XG5cdGJvZHk6IHtcblx0XHRleGl0Q29kZTogbnVtYmVyXG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGV4aXRDb2RlOiBudW1iZXIpIHtcblx0XHRzdXBlcignZXhpdGVkJyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0ZXhpdENvZGU6IGV4aXRDb2RlXG5cdFx0fTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgT3V0cHV0RXZlbnQgZXh0ZW5kcyBFdmVudCBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuT3V0cHV0RXZlbnQge1xuXHRib2R5OiB7XG5cdFx0Y2F0ZWdvcnk6IHN0cmluZyxcblx0XHRvdXRwdXQ6IHN0cmluZyxcblx0XHRkYXRhPzogYW55XG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKG91dHB1dDogc3RyaW5nLCBjYXRlZ29yeTogc3RyaW5nID0gJ2NvbnNvbGUnLCBkYXRhPzogYW55KSB7XG5cdFx0c3VwZXIoJ291dHB1dCcpO1xuXHRcdHRoaXMuYm9keSA9IHtcblx0XHRcdGNhdGVnb3J5OiBjYXRlZ29yeSxcblx0XHRcdG91dHB1dDogb3V0cHV0XG5cdFx0fTtcblx0XHRpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHR0aGlzLmJvZHkuZGF0YSA9IGRhdGE7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBUaHJlYWRFdmVudCBleHRlbmRzIEV2ZW50IGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5UaHJlYWRFdmVudCB7XG5cdGJvZHk6IHtcblx0XHRyZWFzb246IHN0cmluZyxcblx0XHR0aHJlYWRJZDogbnVtYmVyXG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHJlYXNvbjogc3RyaW5nLCB0aHJlYWRJZDogbnVtYmVyKSB7XG5cdFx0c3VwZXIoJ3RocmVhZCcpO1xuXHRcdHRoaXMuYm9keSA9IHtcblx0XHRcdHJlYXNvbjogcmVhc29uLFxuXHRcdFx0dGhyZWFkSWQ6IHRocmVhZElkXG5cdFx0fTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgQnJlYWtwb2ludEV2ZW50IGV4dGVuZHMgRXZlbnQgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLkJyZWFrcG9pbnRFdmVudCB7XG5cdGJvZHk6IHtcblx0XHRyZWFzb246IHN0cmluZyxcblx0XHRicmVha3BvaW50OiBEZWJ1Z1Byb3RvY29sLkJyZWFrcG9pbnRcblx0fTtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocmVhc29uOiBzdHJpbmcsIGJyZWFrcG9pbnQ6IERlYnVnUHJvdG9jb2wuQnJlYWtwb2ludCkge1xuXHRcdHN1cGVyKCdicmVha3BvaW50Jyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0cmVhc29uOiByZWFzb24sXG5cdFx0XHRicmVha3BvaW50OiBicmVha3BvaW50XG5cdFx0fTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgTW9kdWxlRXZlbnQgZXh0ZW5kcyBFdmVudCBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuTW9kdWxlRXZlbnQge1xuXHRib2R5OiB7XG5cdFx0cmVhc29uOiAnbmV3JyB8ICdjaGFuZ2VkJyB8ICdyZW1vdmVkJyxcblx0XHRtb2R1bGU6IERlYnVnUHJvdG9jb2wuTW9kdWxlXG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHJlYXNvbjogJ25ldycgfCAnY2hhbmdlZCcgfCAncmVtb3ZlZCcsIG1vZHVsZTogRGVidWdQcm90b2NvbC5Nb2R1bGUpIHtcblx0XHRzdXBlcignbW9kdWxlJyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0cmVhc29uOiByZWFzb24sXG5cdFx0XHRtb2R1bGU6IG1vZHVsZVxuXHRcdH07XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIExvYWRlZFNvdXJjZUV2ZW50IGV4dGVuZHMgRXZlbnQgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLkxvYWRlZFNvdXJjZUV2ZW50IHtcblx0Ym9keToge1xuXHRcdHJlYXNvbjogJ25ldycgfCAnY2hhbmdlZCcgfCAncmVtb3ZlZCcsXG5cdFx0c291cmNlOiBEZWJ1Z1Byb3RvY29sLlNvdXJjZVxuXHR9O1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihyZWFzb246ICduZXcnIHwgJ2NoYW5nZWQnIHwgJ3JlbW92ZWQnLCBzb3VyY2U6IERlYnVnUHJvdG9jb2wuU291cmNlKSB7XG5cdFx0c3VwZXIoJ2xvYWRlZFNvdXJjZScpO1xuXHRcdHRoaXMuYm9keSA9IHtcblx0XHRcdHJlYXNvbjogcmVhc29uLFxuXHRcdFx0c291cmNlOiBzb3VyY2Vcblx0XHR9O1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXBhYmlsaXRpZXNFdmVudCBleHRlbmRzIEV2ZW50IGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5DYXBhYmlsaXRpZXNFdmVudCB7XG5cdGJvZHk6IHtcblx0XHRjYXBhYmlsaXRpZXM6IERlYnVnUHJvdG9jb2wuQ2FwYWJpbGl0aWVzXG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKGNhcGFiaWxpdGllczogRGVidWdQcm90b2NvbC5DYXBhYmlsaXRpZXMpIHtcblx0XHRzdXBlcignY2FwYWJpbGl0aWVzJyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0Y2FwYWJpbGl0aWVzOiBjYXBhYmlsaXRpZXNcblx0XHR9O1xuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBQcm9ncmVzc1N0YXJ0RXZlbnQgZXh0ZW5kcyBFdmVudCBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuUHJvZ3Jlc3NTdGFydEV2ZW50IHtcblx0Ym9keToge1xuXHRcdHByb2dyZXNzSWQ6IHN0cmluZyxcblx0XHR0aXRsZTogc3RyaW5nXG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHByb2dyZXNzSWQ6IHN0cmluZywgdGl0bGU6IHN0cmluZywgbWVzc2FnZT86IHN0cmluZykge1xuXHRcdHN1cGVyKCdwcm9ncmVzc1N0YXJ0Jyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0cHJvZ3Jlc3NJZDogcHJvZ3Jlc3NJZCxcblx0XHRcdHRpdGxlOiB0aXRsZVxuXHRcdH07XG5cdFx0aWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuXHRcdFx0KHRoaXMgYXMgRGVidWdQcm90b2NvbC5Qcm9ncmVzc1N0YXJ0RXZlbnQpLmJvZHkubWVzc2FnZSA9IG1lc3NhZ2U7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBQcm9ncmVzc1VwZGF0ZUV2ZW50IGV4dGVuZHMgRXZlbnQgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLlByb2dyZXNzVXBkYXRlRXZlbnQge1xuXHRib2R5OiB7XG5cdFx0cHJvZ3Jlc3NJZDogc3RyaW5nXG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKHByb2dyZXNzSWQ6IHN0cmluZywgbWVzc2FnZT86IHN0cmluZykge1xuXHRcdHN1cGVyKCdwcm9ncmVzc1VwZGF0ZScpO1xuXHRcdHRoaXMuYm9keSA9IHtcblx0XHRcdHByb2dyZXNzSWQ6IHByb2dyZXNzSWRcblx0XHR9O1xuXHRcdGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycpIHtcblx0XHRcdCh0aGlzIGFzIERlYnVnUHJvdG9jb2wuUHJvZ3Jlc3NVcGRhdGVFdmVudCkuYm9keS5tZXNzYWdlID0gbWVzc2FnZTtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIFByb2dyZXNzRW5kRXZlbnQgZXh0ZW5kcyBFdmVudCBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuUHJvZ3Jlc3NFbmRFdmVudCB7XG5cdGJvZHk6IHtcblx0XHRwcm9ncmVzc0lkOiBzdHJpbmdcblx0fTtcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocHJvZ3Jlc3NJZDogc3RyaW5nLCBtZXNzYWdlPzogc3RyaW5nKSB7XG5cdFx0c3VwZXIoJ3Byb2dyZXNzRW5kJyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdFx0cHJvZ3Jlc3NJZDogcHJvZ3Jlc3NJZFxuXHRcdH07XG5cdFx0aWYgKHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJykge1xuXHRcdFx0KHRoaXMgYXMgRGVidWdQcm90b2NvbC5Qcm9ncmVzc0VuZEV2ZW50KS5ib2R5Lm1lc3NhZ2UgPSBtZXNzYWdlO1xuXHRcdH1cblx0fVxufVxuXG5leHBvcnQgY2xhc3MgSW52YWxpZGF0ZWRFdmVudCBleHRlbmRzIEV2ZW50IGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5JbnZhbGlkYXRlZEV2ZW50IHtcblx0Ym9keToge1xuXHRcdGFyZWFzPzogRGVidWdQcm90b2NvbC5JbnZhbGlkYXRlZEFyZWFzW107XG5cdFx0dGhyZWFkSWQ/OiBudW1iZXI7XG5cdFx0c3RhY2tGcmFtZUlkPzogbnVtYmVyO1xuXHR9O1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihhcmVhcz86IERlYnVnUHJvdG9jb2wuSW52YWxpZGF0ZWRBcmVhc1tdLCB0aHJlYWRJZD86IG51bWJlciwgc3RhY2tGcmFtZUlkPzogbnVtYmVyKSB7XG5cdFx0c3VwZXIoJ2ludmFsaWRhdGVkJyk7XG5cdFx0dGhpcy5ib2R5ID0ge1xuXHRcdH07XG5cdFx0aWYgKGFyZWFzKSB7XG5cdFx0XHR0aGlzLmJvZHkuYXJlYXMgPSBhcmVhcztcblx0XHR9XG5cdFx0aWYgKHRocmVhZElkKSB7XG5cdFx0XHR0aGlzLmJvZHkudGhyZWFkSWQgPSB0aHJlYWRJZDtcblx0XHR9XG5cdFx0aWYgKHN0YWNrRnJhbWVJZCkge1xuXHRcdFx0dGhpcy5ib2R5LnN0YWNrRnJhbWVJZCA9IHN0YWNrRnJhbWVJZDtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIE1lbW9yeUV2ZW50IGV4dGVuZHMgRXZlbnQgaW1wbGVtZW50cyBEZWJ1Z1Byb3RvY29sLk1lbW9yeUV2ZW50IHtcblx0Ym9keToge1xuXHRcdG1lbW9yeVJlZmVyZW5jZTogc3RyaW5nO1xuXHRcdG9mZnNldDogbnVtYmVyO1xuXHRcdGNvdW50OiBudW1iZXI7XG5cdH07XG5cblx0cHVibGljIGNvbnN0cnVjdG9yKG1lbW9yeVJlZmVyZW5jZTogc3RyaW5nLCBvZmZzZXQ6IG51bWJlciwgY291bnQ6IG51bWJlcikge1xuXHRcdHN1cGVyKCdtZW1vcnknKTtcblx0XHR0aGlzLmJvZHkgPSB7IG1lbW9yeVJlZmVyZW5jZSwgb2Zmc2V0LCBjb3VudCB9O1xuXHR9XG59XG5cbmV4cG9ydCBlbnVtIEVycm9yRGVzdGluYXRpb24ge1xuXHRVc2VyID0gMSxcblx0VGVsZW1ldHJ5ID0gMlxufTtcblxuZXhwb3J0IGNsYXNzIERlYnVnU2Vzc2lvbiBleHRlbmRzIFByb3RvY29sU2VydmVyIHtcblxuXHRwcml2YXRlIF9kZWJ1Z2dlckxpbmVzU3RhcnRBdDE6IGJvb2xlYW47XG5cdHByaXZhdGUgX2RlYnVnZ2VyQ29sdW1uc1N0YXJ0QXQxOiBib29sZWFuO1xuXHRwcml2YXRlIF9kZWJ1Z2dlclBhdGhzQXJlVVJJczogYm9vbGVhbjtcblxuXHRwcml2YXRlIF9jbGllbnRMaW5lc1N0YXJ0QXQxOiBib29sZWFuO1xuXHRwcml2YXRlIF9jbGllbnRDb2x1bW5zU3RhcnRBdDE6IGJvb2xlYW47XG5cdHByaXZhdGUgX2NsaWVudFBhdGhzQXJlVVJJczogYm9vbGVhbjtcblxuXHRwcm90ZWN0ZWQgX2lzU2VydmVyOiBib29sZWFuO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihvYnNvbGV0ZV9kZWJ1Z2dlckxpbmVzQW5kQ29sdW1uc1N0YXJ0QXQxPzogYm9vbGVhbiwgb2Jzb2xldGVfaXNTZXJ2ZXI/OiBib29sZWFuKSB7XG5cdFx0c3VwZXIoKTtcblxuXHRcdGNvbnN0IGxpbmVzQW5kQ29sdW1uc1N0YXJ0QXQxID0gdHlwZW9mIG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEgPT09ICdib29sZWFuJyA/IG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEgOiBmYWxzZTtcblx0XHR0aGlzLl9kZWJ1Z2dlckxpbmVzU3RhcnRBdDEgPSBsaW5lc0FuZENvbHVtbnNTdGFydEF0MTtcblx0XHR0aGlzLl9kZWJ1Z2dlckNvbHVtbnNTdGFydEF0MSA9IGxpbmVzQW5kQ29sdW1uc1N0YXJ0QXQxO1xuXHRcdHRoaXMuX2RlYnVnZ2VyUGF0aHNBcmVVUklzID0gZmFsc2U7XG5cblx0XHR0aGlzLl9jbGllbnRMaW5lc1N0YXJ0QXQxID0gdHJ1ZTtcblx0XHR0aGlzLl9jbGllbnRDb2x1bW5zU3RhcnRBdDEgPSB0cnVlO1xuXHRcdHRoaXMuX2NsaWVudFBhdGhzQXJlVVJJcyA9IGZhbHNlO1xuXG5cdFx0dGhpcy5faXNTZXJ2ZXIgPSB0eXBlb2Ygb2Jzb2xldGVfaXNTZXJ2ZXIgPT09ICdib29sZWFuJyA/IG9ic29sZXRlX2lzU2VydmVyIDogZmFsc2U7XG5cblx0XHR0aGlzLm9uKCdjbG9zZScsICgpID0+IHtcblx0XHRcdHRoaXMuc2h1dGRvd24oKTtcblx0XHR9KTtcblx0XHR0aGlzLm9uKCdlcnJvcicsIChlcnJvcikgPT4ge1xuXHRcdFx0dGhpcy5zaHV0ZG93bigpO1xuXHRcdH0pO1xuXHR9XG5cblx0cHVibGljIHNldERlYnVnZ2VyUGF0aEZvcm1hdChmb3JtYXQ6IHN0cmluZykge1xuXHRcdHRoaXMuX2RlYnVnZ2VyUGF0aHNBcmVVUklzID0gZm9ybWF0ICE9PSAncGF0aCc7XG5cdH1cblxuXHRwdWJsaWMgc2V0RGVidWdnZXJMaW5lc1N0YXJ0QXQxKGVuYWJsZTogYm9vbGVhbikge1xuXHRcdHRoaXMuX2RlYnVnZ2VyTGluZXNTdGFydEF0MSA9IGVuYWJsZTtcblx0fVxuXG5cdHB1YmxpYyBzZXREZWJ1Z2dlckNvbHVtbnNTdGFydEF0MShlbmFibGU6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9kZWJ1Z2dlckNvbHVtbnNTdGFydEF0MSA9IGVuYWJsZTtcblx0fVxuXG5cdHB1YmxpYyBzZXRSdW5Bc1NlcnZlcihlbmFibGU6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9pc1NlcnZlciA9IGVuYWJsZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBBIHZpcnR1YWwgY29uc3RydWN0b3IuLi5cblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgcnVuKGRlYnVnU2Vzc2lvbjogdHlwZW9mIERlYnVnU2Vzc2lvbikge1xuXHRcdHJ1bkRlYnVnQWRhcHRlcihkZWJ1Z1Nlc3Npb24pO1xuXHR9XG5cblx0cHVibGljIHNodXRkb3duKCk6IHZvaWQge1xuXHRcdGlmICh0aGlzLl9pc1NlcnZlciB8fCB0aGlzLl9pc1J1bm5pbmdJbmxpbmUoKSkge1xuXHRcdFx0Ly8gc2h1dGRvd24gaWdub3JlZCBpbiBzZXJ2ZXIgbW9kZVxuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyB3YWl0IGEgYml0IGJlZm9yZSBzaHV0dGluZyBkb3duXG5cdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcblx0XHRcdFx0cHJvY2Vzcy5leGl0KDApO1xuXHRcdFx0fSwgMTAwKTtcblx0XHR9XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2VuZEVycm9yUmVzcG9uc2UocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzcG9uc2UsIGNvZGVPck1lc3NhZ2U6IG51bWJlciB8IERlYnVnUHJvdG9jb2wuTWVzc2FnZSwgZm9ybWF0Pzogc3RyaW5nLCB2YXJpYWJsZXM/OiBhbnksIGRlc3Q6IEVycm9yRGVzdGluYXRpb24gPSBFcnJvckRlc3RpbmF0aW9uLlVzZXIpOiB2b2lkIHtcblxuXHRcdGxldCBtc2cgOiBEZWJ1Z1Byb3RvY29sLk1lc3NhZ2U7XG5cdFx0aWYgKHR5cGVvZiBjb2RlT3JNZXNzYWdlID09PSAnbnVtYmVyJykge1xuXHRcdFx0bXNnID0gPERlYnVnUHJvdG9jb2wuTWVzc2FnZT4ge1xuXHRcdFx0XHRpZDogPG51bWJlcj4gY29kZU9yTWVzc2FnZSxcblx0XHRcdFx0Zm9ybWF0OiBmb3JtYXRcblx0XHRcdH07XG5cdFx0XHRpZiAodmFyaWFibGVzKSB7XG5cdFx0XHRcdG1zZy52YXJpYWJsZXMgPSB2YXJpYWJsZXM7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZGVzdCAmIEVycm9yRGVzdGluYXRpb24uVXNlcikge1xuXHRcdFx0XHRtc2cuc2hvd1VzZXIgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGRlc3QgJiBFcnJvckRlc3RpbmF0aW9uLlRlbGVtZXRyeSkge1xuXHRcdFx0XHRtc2cuc2VuZFRlbGVtZXRyeSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1zZyA9IGNvZGVPck1lc3NhZ2U7XG5cdFx0fVxuXG5cdFx0cmVzcG9uc2Uuc3VjY2VzcyA9IGZhbHNlO1xuXHRcdHJlc3BvbnNlLm1lc3NhZ2UgPSBEZWJ1Z1Nlc3Npb24uZm9ybWF0UElJKG1zZy5mb3JtYXQsIHRydWUsIG1zZy52YXJpYWJsZXMpO1xuXHRcdGlmICghcmVzcG9uc2UuYm9keSkge1xuXHRcdFx0cmVzcG9uc2UuYm9keSA9IHsgfTtcblx0XHR9XG5cdFx0cmVzcG9uc2UuYm9keS5lcnJvciA9IG1zZztcblxuXHRcdHRoaXMuc2VuZFJlc3BvbnNlKHJlc3BvbnNlKTtcblx0fVxuXG5cdHB1YmxpYyBydW5JblRlcm1pbmFsUmVxdWVzdChhcmdzOiBEZWJ1Z1Byb3RvY29sLlJ1bkluVGVybWluYWxSZXF1ZXN0QXJndW1lbnRzLCB0aW1lb3V0OiBudW1iZXIsIGNiOiAocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUnVuSW5UZXJtaW5hbFJlc3BvbnNlKSA9PiB2b2lkKSB7XG5cdFx0dGhpcy5zZW5kUmVxdWVzdCgncnVuSW5UZXJtaW5hbCcsIGFyZ3MsIHRpbWVvdXQsIGNiIGFzIChyOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlKSA9PiB2b2lkKTtcblx0fVxuXG5cdHByb3RlY3RlZCBkaXNwYXRjaFJlcXVlc3QocmVxdWVzdDogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cblx0XHRjb25zdCByZXNwb25zZSA9IG5ldyBSZXNwb25zZShyZXF1ZXN0KTtcblxuXHRcdHRyeSB7XG5cdFx0XHRpZiAocmVxdWVzdC5jb21tYW5kID09PSAnaW5pdGlhbGl6ZScpIHtcblx0XHRcdFx0dmFyIGFyZ3MgPSA8RGVidWdQcm90b2NvbC5Jbml0aWFsaXplUmVxdWVzdEFyZ3VtZW50cz4gcmVxdWVzdC5hcmd1bWVudHM7XG5cblx0XHRcdFx0aWYgKHR5cGVvZiBhcmdzLmxpbmVzU3RhcnRBdDEgPT09ICdib29sZWFuJykge1xuXHRcdFx0XHRcdHRoaXMuX2NsaWVudExpbmVzU3RhcnRBdDEgPSBhcmdzLmxpbmVzU3RhcnRBdDE7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKHR5cGVvZiBhcmdzLmNvbHVtbnNTdGFydEF0MSA9PT0gJ2Jvb2xlYW4nKSB7XG5cdFx0XHRcdFx0dGhpcy5fY2xpZW50Q29sdW1uc1N0YXJ0QXQxID0gYXJncy5jb2x1bW5zU3RhcnRBdDE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoYXJncy5wYXRoRm9ybWF0ICE9PSAncGF0aCcpIHtcblx0XHRcdFx0XHR0aGlzLnNlbmRFcnJvclJlc3BvbnNlKHJlc3BvbnNlLCAyMDE4LCAnZGVidWcgYWRhcHRlciBvbmx5IHN1cHBvcnRzIG5hdGl2ZSBwYXRocycsIG51bGwsIEVycm9yRGVzdGluYXRpb24uVGVsZW1ldHJ5KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb25zdCBpbml0aWFsaXplUmVzcG9uc2UgPSA8RGVidWdQcm90b2NvbC5Jbml0aWFsaXplUmVzcG9uc2U+IHJlc3BvbnNlO1xuXHRcdFx0XHRcdGluaXRpYWxpemVSZXNwb25zZS5ib2R5ID0ge307XG5cdFx0XHRcdFx0dGhpcy5pbml0aWFsaXplUmVxdWVzdChpbml0aWFsaXplUmVzcG9uc2UsIGFyZ3MpO1xuXHRcdFx0XHR9XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnbGF1bmNoJykge1xuXHRcdFx0XHR0aGlzLmxhdW5jaFJlcXVlc3QoPERlYnVnUHJvdG9jb2wuTGF1bmNoUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnYXR0YWNoJykge1xuXHRcdFx0XHR0aGlzLmF0dGFjaFJlcXVlc3QoPERlYnVnUHJvdG9jb2wuQXR0YWNoUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnZGlzY29ubmVjdCcpIHtcblx0XHRcdFx0dGhpcy5kaXNjb25uZWN0UmVxdWVzdCg8RGVidWdQcm90b2NvbC5EaXNjb25uZWN0UmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAndGVybWluYXRlJykge1xuXHRcdFx0XHR0aGlzLnRlcm1pbmF0ZVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuVGVybWluYXRlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAncmVzdGFydCcpIHtcblx0XHRcdFx0dGhpcy5yZXN0YXJ0UmVxdWVzdCg8RGVidWdQcm90b2NvbC5SZXN0YXJ0UmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc2V0QnJlYWtwb2ludHMnKSB7XG5cdFx0XHRcdHRoaXMuc2V0QnJlYWtQb2ludHNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlNldEJyZWFrcG9pbnRzUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc2V0RnVuY3Rpb25CcmVha3BvaW50cycpIHtcblx0XHRcdFx0dGhpcy5zZXRGdW5jdGlvbkJyZWFrUG9pbnRzUmVxdWVzdCg8RGVidWdQcm90b2NvbC5TZXRGdW5jdGlvbkJyZWFrcG9pbnRzUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc2V0RXhjZXB0aW9uQnJlYWtwb2ludHMnKSB7XG5cdFx0XHRcdHRoaXMuc2V0RXhjZXB0aW9uQnJlYWtQb2ludHNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlNldEV4Y2VwdGlvbkJyZWFrcG9pbnRzUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnY29uZmlndXJhdGlvbkRvbmUnKSB7XG5cdFx0XHRcdHRoaXMuY29uZmlndXJhdGlvbkRvbmVSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLkNvbmZpZ3VyYXRpb25Eb25lUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnY29udGludWUnKSB7XG5cdFx0XHRcdHRoaXMuY29udGludWVSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLkNvbnRpbnVlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnbmV4dCcpIHtcblx0XHRcdFx0dGhpcy5uZXh0UmVxdWVzdCg8RGVidWdQcm90b2NvbC5OZXh0UmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc3RlcEluJykge1xuXHRcdFx0XHR0aGlzLnN0ZXBJblJlcXVlc3QoPERlYnVnUHJvdG9jb2wuU3RlcEluUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc3RlcE91dCcpIHtcblx0XHRcdFx0dGhpcy5zdGVwT3V0UmVxdWVzdCg8RGVidWdQcm90b2NvbC5TdGVwT3V0UmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc3RlcEJhY2snKSB7XG5cdFx0XHRcdHRoaXMuc3RlcEJhY2tSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlN0ZXBCYWNrUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAncmV2ZXJzZUNvbnRpbnVlJykge1xuXHRcdFx0XHR0aGlzLnJldmVyc2VDb250aW51ZVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuUmV2ZXJzZUNvbnRpbnVlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAncmVzdGFydEZyYW1lJykge1xuXHRcdFx0XHR0aGlzLnJlc3RhcnRGcmFtZVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuUmVzdGFydEZyYW1lUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnZ290bycpIHtcblx0XHRcdFx0dGhpcy5nb3RvUmVxdWVzdCg8RGVidWdQcm90b2NvbC5Hb3RvUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAncGF1c2UnKSB7XG5cdFx0XHRcdHRoaXMucGF1c2VSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlBhdXNlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc3RhY2tUcmFjZScpIHtcblx0XHRcdFx0dGhpcy5zdGFja1RyYWNlUmVxdWVzdCg8RGVidWdQcm90b2NvbC5TdGFja1RyYWNlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc2NvcGVzJykge1xuXHRcdFx0XHR0aGlzLnNjb3Blc1JlcXVlc3QoPERlYnVnUHJvdG9jb2wuU2NvcGVzUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAndmFyaWFibGVzJykge1xuXHRcdFx0XHR0aGlzLnZhcmlhYmxlc1JlcXVlc3QoPERlYnVnUHJvdG9jb2wuVmFyaWFibGVzUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc2V0VmFyaWFibGUnKSB7XG5cdFx0XHRcdHRoaXMuc2V0VmFyaWFibGVSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlNldFZhcmlhYmxlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc2V0RXhwcmVzc2lvbicpIHtcblx0XHRcdFx0dGhpcy5zZXRFeHByZXNzaW9uUmVxdWVzdCg8RGVidWdQcm90b2NvbC5TZXRFeHByZXNzaW9uUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAnc291cmNlJykge1xuXHRcdFx0XHR0aGlzLnNvdXJjZVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuU291cmNlUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cblx0XHRcdH0gZWxzZSBpZiAocmVxdWVzdC5jb21tYW5kID09PSAndGhyZWFkcycpIHtcblx0XHRcdFx0dGhpcy50aHJlYWRzUmVxdWVzdCg8RGVidWdQcm90b2NvbC5UaHJlYWRzUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICd0ZXJtaW5hdGVUaHJlYWRzJykge1xuXHRcdFx0XHR0aGlzLnRlcm1pbmF0ZVRocmVhZHNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlRlcm1pbmF0ZVRocmVhZHNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdldmFsdWF0ZScpIHtcblx0XHRcdFx0dGhpcy5ldmFsdWF0ZVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuRXZhbHVhdGVSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdzdGVwSW5UYXJnZXRzJykge1xuXHRcdFx0XHR0aGlzLnN0ZXBJblRhcmdldHNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlN0ZXBJblRhcmdldHNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdnb3RvVGFyZ2V0cycpIHtcblx0XHRcdFx0dGhpcy5nb3RvVGFyZ2V0c1JlcXVlc3QoPERlYnVnUHJvdG9jb2wuR290b1RhcmdldHNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdjb21wbGV0aW9ucycpIHtcblx0XHRcdFx0dGhpcy5jb21wbGV0aW9uc1JlcXVlc3QoPERlYnVnUHJvdG9jb2wuQ29tcGxldGlvbnNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdleGNlcHRpb25JbmZvJykge1xuXHRcdFx0XHR0aGlzLmV4Y2VwdGlvbkluZm9SZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLkV4Y2VwdGlvbkluZm9SZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdsb2FkZWRTb3VyY2VzJykge1xuXHRcdFx0XHR0aGlzLmxvYWRlZFNvdXJjZXNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLkxvYWRlZFNvdXJjZXNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdkYXRhQnJlYWtwb2ludEluZm8nKSB7XG5cdFx0XHRcdHRoaXMuZGF0YUJyZWFrcG9pbnRJbmZvUmVxdWVzdCg8RGVidWdQcm90b2NvbC5EYXRhQnJlYWtwb2ludEluZm9SZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdzZXREYXRhQnJlYWtwb2ludHMnKSB7XG5cdFx0XHRcdHRoaXMuc2V0RGF0YUJyZWFrcG9pbnRzUmVxdWVzdCg8RGVidWdQcm90b2NvbC5TZXREYXRhQnJlYWtwb2ludHNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdyZWFkTWVtb3J5Jykge1xuXHRcdFx0XHR0aGlzLnJlYWRNZW1vcnlSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlJlYWRNZW1vcnlSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICd3cml0ZU1lbW9yeScpIHtcblx0XHRcdFx0dGhpcy53cml0ZU1lbW9yeVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuV3JpdGVNZW1vcnlSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdkaXNhc3NlbWJsZScpIHtcblx0XHRcdFx0dGhpcy5kaXNhc3NlbWJsZVJlcXVlc3QoPERlYnVnUHJvdG9jb2wuRGlzYXNzZW1ibGVSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdjYW5jZWwnKSB7XG5cdFx0XHRcdHRoaXMuY2FuY2VsUmVxdWVzdCg8RGVidWdQcm90b2NvbC5DYW5jZWxSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdicmVha3BvaW50TG9jYXRpb25zJykge1xuXHRcdFx0XHR0aGlzLmJyZWFrcG9pbnRMb2NhdGlvbnNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLkJyZWFrcG9pbnRMb2NhdGlvbnNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LmNvbW1hbmQgPT09ICdzZXRJbnN0cnVjdGlvbkJyZWFrcG9pbnRzJykge1xuXHRcdFx0XHR0aGlzLnNldEluc3RydWN0aW9uQnJlYWtwb2ludHNSZXF1ZXN0KDxEZWJ1Z1Byb3RvY29sLlNldEluc3RydWN0aW9uQnJlYWtwb2ludHNSZXNwb25zZT4gcmVzcG9uc2UsIHJlcXVlc3QuYXJndW1lbnRzLCByZXF1ZXN0KTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5jdXN0b21SZXF1ZXN0KHJlcXVlc3QuY29tbWFuZCwgPERlYnVnUHJvdG9jb2wuUmVzcG9uc2U+IHJlc3BvbnNlLCByZXF1ZXN0LmFyZ3VtZW50cywgcmVxdWVzdCk7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0dGhpcy5zZW5kRXJyb3JSZXNwb25zZShyZXNwb25zZSwgMTEwNCwgJ3tfc3RhY2t9JywgeyBfZXhjZXB0aW9uOiBlLm1lc3NhZ2UsIF9zdGFjazogZS5zdGFjayB9LCBFcnJvckRlc3RpbmF0aW9uLlRlbGVtZXRyeSk7XG5cdFx0fVxuXHR9XG5cblx0cHJvdGVjdGVkIGluaXRpYWxpemVSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkluaXRpYWxpemVSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5Jbml0aWFsaXplUmVxdWVzdEFyZ3VtZW50cyk6IHZvaWQge1xuXG5cdFx0Ly8gVGhpcyBkZWZhdWx0IGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCBjb25kaXRpb25hbCBicmVha3BvaW50cy5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzQ29uZGl0aW9uYWxCcmVha3BvaW50cyA9IGZhbHNlO1xuXG5cdFx0Ly8gVGhpcyBkZWZhdWx0IGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCBoaXQgY29uZGl0aW9uYWwgYnJlYWtwb2ludHMuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0hpdENvbmRpdGlvbmFsQnJlYWtwb2ludHMgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVmYXVsdCBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgZnVuY3Rpb24gYnJlYWtwb2ludHMuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0Z1bmN0aW9uQnJlYWtwb2ludHMgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVmYXVsdCBkZWJ1ZyBhZGFwdGVyIGltcGxlbWVudHMgdGhlICdjb25maWd1cmF0aW9uRG9uZScgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzQ29uZmlndXJhdGlvbkRvbmVSZXF1ZXN0ID0gdHJ1ZTtcblxuXHRcdC8vIFRoaXMgZGVmYXVsdCBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgaG92ZXJzIGJhc2VkIG9uIHRoZSAnZXZhbHVhdGUnIHJlcXVlc3QuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0V2YWx1YXRlRm9ySG92ZXJzID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlZmF1bHQgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnc3RlcEJhY2snIHJlcXVlc3QuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c1N0ZXBCYWNrID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlZmF1bHQgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnc2V0VmFyaWFibGUnIHJlcXVlc3QuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c1NldFZhcmlhYmxlID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlZmF1bHQgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAncmVzdGFydEZyYW1lJyByZXF1ZXN0LlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNSZXN0YXJ0RnJhbWUgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVmYXVsdCBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgdGhlICdzdGVwSW5UYXJnZXRzJyByZXF1ZXN0LlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNTdGVwSW5UYXJnZXRzUmVxdWVzdCA9IGZhbHNlO1xuXG5cdFx0Ly8gVGhpcyBkZWZhdWx0IGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgJ2dvdG9UYXJnZXRzJyByZXF1ZXN0LlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNHb3RvVGFyZ2V0c1JlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVmYXVsdCBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgdGhlICdjb21wbGV0aW9ucycgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzQ29tcGxldGlvbnNSZXF1ZXN0ID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlZmF1bHQgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAncmVzdGFydCcgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzUmVzdGFydFJlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVmYXVsdCBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgdGhlICdleGNlcHRpb25PcHRpb25zJyBhdHRyaWJ1dGUgb24gdGhlICdzZXRFeGNlcHRpb25CcmVha3BvaW50cycgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzRXhjZXB0aW9uT3B0aW9ucyA9IGZhbHNlO1xuXG5cdFx0Ly8gVGhpcyBkZWZhdWx0IGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgJ2Zvcm1hdCcgYXR0cmlidXRlIG9uIHRoZSAndmFyaWFibGVzJywgJ2V2YWx1YXRlJywgYW5kICdzdGFja1RyYWNlJyByZXF1ZXN0LlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNWYWx1ZUZvcm1hdHRpbmdPcHRpb25zID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgJ2V4Y2VwdGlvbkluZm8nIHJlcXVlc3QuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0V4Y2VwdGlvbkluZm9SZXF1ZXN0ID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgJ1Rlcm1pbmF0ZURlYnVnZ2VlJyBhdHRyaWJ1dGUgb24gdGhlICdkaXNjb25uZWN0JyByZXF1ZXN0LlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydFRlcm1pbmF0ZURlYnVnZ2VlID0gZmFsc2U7XG5cblx0XHQvLyBUaGlzIGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCBkZWxheWVkIGxvYWRpbmcgb2Ygc3RhY2sgZnJhbWVzLlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNEZWxheWVkU3RhY2tUcmFjZUxvYWRpbmcgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnbG9hZGVkU291cmNlcycgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzTG9hZGVkU291cmNlc1JlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnbG9nTWVzc2FnZScgYXR0cmlidXRlIG9mIHRoZSBTb3VyY2VCcmVha3BvaW50LlxuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNMb2dQb2ludHMgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAndGVybWluYXRlVGhyZWFkcycgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzVGVybWluYXRlVGhyZWFkc1JlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnc2V0RXhwcmVzc2lvbicgcmVxdWVzdC5cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzU2V0RXhwcmVzc2lvbiA9IGZhbHNlO1xuXG5cdFx0Ly8gVGhpcyBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgdGhlICd0ZXJtaW5hdGUnIHJlcXVlc3QuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c1Rlcm1pbmF0ZVJlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8vIFRoaXMgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IGRhdGEgYnJlYWtwb2ludHMuXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0RhdGFCcmVha3BvaW50cyA9IGZhbHNlO1xuXG5cdFx0LyoqIFRoaXMgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAncmVhZE1lbW9yeScgcmVxdWVzdC4gKi9cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzUmVhZE1lbW9yeVJlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnZGlzYXNzZW1ibGUnIHJlcXVlc3QuICovXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0Rpc2Fzc2VtYmxlUmVxdWVzdCA9IGZhbHNlO1xuXG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgdGhlICdjYW5jZWwnIHJlcXVlc3QuICovXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0NhbmNlbFJlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnYnJlYWtwb2ludExvY2F0aW9ucycgcmVxdWVzdC4gKi9cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzQnJlYWtwb2ludExvY2F0aW9uc1JlcXVlc3QgPSBmYWxzZTtcblxuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSAnY2xpcGJvYXJkJyBjb250ZXh0IHZhbHVlIGluIHRoZSAnZXZhbHVhdGUnIHJlcXVlc3QuICovXG5cdFx0cmVzcG9uc2UuYm9keS5zdXBwb3J0c0NsaXBib2FyZENvbnRleHQgPSBmYWxzZTtcblxuXHRcdC8qKiBUaGUgZGVidWcgYWRhcHRlciBkb2VzIG5vdCBzdXBwb3J0IHN0ZXBwaW5nIGdyYW51bGFyaXRpZXMgZm9yIHRoZSBzdGVwcGluZyByZXF1ZXN0cy4gKi9cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzU3RlcHBpbmdHcmFudWxhcml0eSA9IGZhbHNlO1xuXG5cdFx0LyoqIFRoZSBkZWJ1ZyBhZGFwdGVyIGRvZXMgbm90IHN1cHBvcnQgdGhlICdzZXRJbnN0cnVjdGlvbkJyZWFrcG9pbnRzJyByZXF1ZXN0LiAqL1xuXHRcdHJlc3BvbnNlLmJvZHkuc3VwcG9ydHNJbnN0cnVjdGlvbkJyZWFrcG9pbnRzID0gZmFsc2U7XG5cblx0XHQvKiogVGhlIGRlYnVnIGFkYXB0ZXIgZG9lcyBub3Qgc3VwcG9ydCAnZmlsdGVyT3B0aW9ucycgb24gdGhlICdzZXRFeGNlcHRpb25CcmVha3BvaW50cycgcmVxdWVzdC4gKi9cblx0XHRyZXNwb25zZS5ib2R5LnN1cHBvcnRzRXhjZXB0aW9uRmlsdGVyT3B0aW9ucyA9IGZhbHNlO1xuXG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGRpc2Nvbm5lY3RSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkRpc2Nvbm5lY3RSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5EaXNjb25uZWN0QXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHRcdHRoaXMuc2h1dGRvd24oKTtcblx0fVxuXG5cdHByb3RlY3RlZCBsYXVuY2hSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkxhdW5jaFJlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLkxhdW5jaFJlcXVlc3RBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgYXR0YWNoUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5BdHRhY2hSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5BdHRhY2hSZXF1ZXN0QXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHRlcm1pbmF0ZVJlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuVGVybWluYXRlUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuVGVybWluYXRlQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHJlc3RhcnRSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3RhcnRSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5SZXN0YXJ0QXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHNldEJyZWFrUG9pbnRzUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5TZXRCcmVha3BvaW50c1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlNldEJyZWFrcG9pbnRzQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHNldEZ1bmN0aW9uQnJlYWtQb2ludHNSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlNldEZ1bmN0aW9uQnJlYWtwb2ludHNSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5TZXRGdW5jdGlvbkJyZWFrcG9pbnRzQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHNldEV4Y2VwdGlvbkJyZWFrUG9pbnRzUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5TZXRFeGNlcHRpb25CcmVha3BvaW50c1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlNldEV4Y2VwdGlvbkJyZWFrcG9pbnRzQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGNvbmZpZ3VyYXRpb25Eb25lUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5Db25maWd1cmF0aW9uRG9uZVJlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLkNvbmZpZ3VyYXRpb25Eb25lQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KTogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGNvbnRpbnVlUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5Db250aW51ZVJlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLkNvbnRpbnVlQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KSA6IHZvaWQge1xuXHRcdHRoaXMuc2VuZFJlc3BvbnNlKHJlc3BvbnNlKTtcblx0fVxuXG5cdHByb3RlY3RlZCBuZXh0UmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5OZXh0UmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuTmV4dEFyZ3VtZW50cywgcmVxdWVzdD86IERlYnVnUHJvdG9jb2wuUmVxdWVzdCkgOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc3RlcEluUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5TdGVwSW5SZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5TdGVwSW5Bcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpIDogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHN0ZXBPdXRSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlN0ZXBPdXRSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5TdGVwT3V0QXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KSA6IHZvaWQge1xuXHRcdHRoaXMuc2VuZFJlc3BvbnNlKHJlc3BvbnNlKTtcblx0fVxuXG5cdHByb3RlY3RlZCBzdGVwQmFja1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuU3RlcEJhY2tSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5TdGVwQmFja0FyZ3VtZW50cywgcmVxdWVzdD86IERlYnVnUHJvdG9jb2wuUmVxdWVzdCkgOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgcmV2ZXJzZUNvbnRpbnVlUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5SZXZlcnNlQ29udGludWVSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5SZXZlcnNlQ29udGludWVBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpIDogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHJlc3RhcnRGcmFtZVJlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzdGFydEZyYW1lUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuUmVzdGFydEZyYW1lQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KSA6IHZvaWQge1xuXHRcdHRoaXMuc2VuZFJlc3BvbnNlKHJlc3BvbnNlKTtcblx0fVxuXG5cdHByb3RlY3RlZCBnb3RvUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5Hb3RvUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuR290b0FyZ3VtZW50cywgcmVxdWVzdD86IERlYnVnUHJvdG9jb2wuUmVxdWVzdCkgOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgcGF1c2VSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlBhdXNlUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuUGF1c2VBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpIDogdm9pZCB7XG5cdFx0dGhpcy5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIHNvdXJjZVJlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuU291cmNlUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuU291cmNlQXJndW1lbnRzLCByZXF1ZXN0PzogRGVidWdQcm90b2NvbC5SZXF1ZXN0KSA6IHZvaWQge1xuXHRcdHRoaXMuc2VuZFJlc3BvbnNlKHJlc3BvbnNlKTtcblx0fVxuXG5cdHByb3RlY3RlZCB0aHJlYWRzUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5UaHJlYWRzUmVzcG9uc2UsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgdGVybWluYXRlVGhyZWFkc1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuVGVybWluYXRlVGhyZWFkc1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlRlcm1pbmF0ZVRocmVhZHNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc3RhY2tUcmFjZVJlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuU3RhY2tUcmFjZVJlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlN0YWNrVHJhY2VBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2NvcGVzUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5TY29wZXNSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5TY29wZXNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgdmFyaWFibGVzUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5WYXJpYWJsZXNSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5WYXJpYWJsZXNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2V0VmFyaWFibGVSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlNldFZhcmlhYmxlUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuU2V0VmFyaWFibGVBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2V0RXhwcmVzc2lvblJlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuU2V0RXhwcmVzc2lvblJlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlNldEV4cHJlc3Npb25Bcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZXZhbHVhdGVSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkV2YWx1YXRlUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuRXZhbHVhdGVBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc3RlcEluVGFyZ2V0c1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuU3RlcEluVGFyZ2V0c1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlN0ZXBJblRhcmdldHNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZ290b1RhcmdldHNSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkdvdG9UYXJnZXRzUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuR290b1RhcmdldHNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgY29tcGxldGlvbnNSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkNvbXBsZXRpb25zUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuQ29tcGxldGlvbnNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZXhjZXB0aW9uSW5mb1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuRXhjZXB0aW9uSW5mb1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLkV4Y2VwdGlvbkluZm9Bcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgbG9hZGVkU291cmNlc1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuTG9hZGVkU291cmNlc1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLkxvYWRlZFNvdXJjZXNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZGF0YUJyZWFrcG9pbnRJbmZvUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5EYXRhQnJlYWtwb2ludEluZm9SZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5EYXRhQnJlYWtwb2ludEluZm9Bcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2V0RGF0YUJyZWFrcG9pbnRzUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5TZXREYXRhQnJlYWtwb2ludHNSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5TZXREYXRhQnJlYWtwb2ludHNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgcmVhZE1lbW9yeVJlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVhZE1lbW9yeVJlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlJlYWRNZW1vcnlBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgd3JpdGVNZW1vcnlSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLldyaXRlTWVtb3J5UmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuV3JpdGVNZW1vcnlBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgZGlzYXNzZW1ibGVSZXF1ZXN0KHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLkRpc2Fzc2VtYmxlUmVzcG9uc2UsIGFyZ3M6IERlYnVnUHJvdG9jb2wuRGlzYXNzZW1ibGVBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgY2FuY2VsUmVxdWVzdChyZXNwb25zZTogRGVidWdQcm90b2NvbC5DYW5jZWxSZXNwb25zZSwgYXJnczogRGVidWdQcm90b2NvbC5DYW5jZWxBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgYnJlYWtwb2ludExvY2F0aW9uc1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuQnJlYWtwb2ludExvY2F0aW9uc1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLkJyZWFrcG9pbnRMb2NhdGlvbnNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2V0SW5zdHJ1Y3Rpb25CcmVha3BvaW50c1JlcXVlc3QocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuU2V0SW5zdHJ1Y3Rpb25CcmVha3BvaW50c1Jlc3BvbnNlLCBhcmdzOiBEZWJ1Z1Byb3RvY29sLlNldEluc3RydWN0aW9uQnJlYWtwb2ludHNBcmd1bWVudHMsIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRSZXNwb25zZShyZXNwb25zZSk7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcnJpZGUgdGhpcyBob29rIHRvIGltcGxlbWVudCBjdXN0b20gcmVxdWVzdHMuXG5cdCAqL1xuXHRwcm90ZWN0ZWQgY3VzdG9tUmVxdWVzdChjb21tYW5kOiBzdHJpbmcsIHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlLCBhcmdzOiBhbnksIHJlcXVlc3Q/OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHR0aGlzLnNlbmRFcnJvclJlc3BvbnNlKHJlc3BvbnNlLCAxMDE0LCAndW5yZWNvZ25pemVkIHJlcXVlc3QnLCBudWxsLCBFcnJvckRlc3RpbmF0aW9uLlRlbGVtZXRyeSk7XG5cdH1cblxuXHQvLy0tLS0gcHJvdGVjdGVkIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXHRwcm90ZWN0ZWQgY29udmVydENsaWVudExpbmVUb0RlYnVnZ2VyKGxpbmU6IG51bWJlcik6IG51bWJlciB7XG5cdFx0aWYgKHRoaXMuX2RlYnVnZ2VyTGluZXNTdGFydEF0MSkge1xuXHRcdFx0cmV0dXJuIHRoaXMuX2NsaWVudExpbmVzU3RhcnRBdDEgPyBsaW5lIDogbGluZSArIDE7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLl9jbGllbnRMaW5lc1N0YXJ0QXQxID8gbGluZSAtIDEgOiBsaW5lO1xuXHR9XG5cblx0cHJvdGVjdGVkIGNvbnZlcnREZWJ1Z2dlckxpbmVUb0NsaWVudChsaW5lOiBudW1iZXIpOiBudW1iZXIge1xuXHRcdGlmICh0aGlzLl9kZWJ1Z2dlckxpbmVzU3RhcnRBdDEpIHtcblx0XHRcdHJldHVybiB0aGlzLl9jbGllbnRMaW5lc1N0YXJ0QXQxID8gbGluZSA6IGxpbmUgLSAxO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5fY2xpZW50TGluZXNTdGFydEF0MSA/IGxpbmUgKyAxIDogbGluZTtcblx0fVxuXG5cdHByb3RlY3RlZCBjb252ZXJ0Q2xpZW50Q29sdW1uVG9EZWJ1Z2dlcihjb2x1bW46IG51bWJlcik6IG51bWJlciB7XG5cdFx0aWYgKHRoaXMuX2RlYnVnZ2VyQ29sdW1uc1N0YXJ0QXQxKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5fY2xpZW50Q29sdW1uc1N0YXJ0QXQxID8gY29sdW1uIDogY29sdW1uICsgMTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuX2NsaWVudENvbHVtbnNTdGFydEF0MSA/IGNvbHVtbiAtIDEgOiBjb2x1bW47XG5cdH1cblxuXHRwcm90ZWN0ZWQgY29udmVydERlYnVnZ2VyQ29sdW1uVG9DbGllbnQoY29sdW1uOiBudW1iZXIpOiBudW1iZXIge1xuXHRcdGlmICh0aGlzLl9kZWJ1Z2dlckNvbHVtbnNTdGFydEF0MSkge1xuXHRcdFx0cmV0dXJuIHRoaXMuX2NsaWVudENvbHVtbnNTdGFydEF0MSA/IGNvbHVtbiA6IGNvbHVtbiAtIDE7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLl9jbGllbnRDb2x1bW5zU3RhcnRBdDEgPyBjb2x1bW4gKyAxIDogY29sdW1uO1xuXHR9XG5cblx0cHJvdGVjdGVkIGNvbnZlcnRDbGllbnRQYXRoVG9EZWJ1Z2dlcihjbGllbnRQYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdGlmICh0aGlzLl9jbGllbnRQYXRoc0FyZVVSSXMgIT09IHRoaXMuX2RlYnVnZ2VyUGF0aHNBcmVVUklzKSB7XG5cdFx0XHRpZiAodGhpcy5fY2xpZW50UGF0aHNBcmVVUklzKSB7XG5cdFx0XHRcdHJldHVybiBEZWJ1Z1Nlc3Npb24udXJpMnBhdGgoY2xpZW50UGF0aCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gRGVidWdTZXNzaW9uLnBhdGgydXJpKGNsaWVudFBhdGgpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gY2xpZW50UGF0aDtcblx0fVxuXG5cdHByb3RlY3RlZCBjb252ZXJ0RGVidWdnZXJQYXRoVG9DbGllbnQoZGVidWdnZXJQYXRoOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdGlmICh0aGlzLl9kZWJ1Z2dlclBhdGhzQXJlVVJJcyAhPT0gdGhpcy5fY2xpZW50UGF0aHNBcmVVUklzKSB7XG5cdFx0XHRpZiAodGhpcy5fZGVidWdnZXJQYXRoc0FyZVVSSXMpIHtcblx0XHRcdFx0cmV0dXJuIERlYnVnU2Vzc2lvbi51cmkycGF0aChkZWJ1Z2dlclBhdGgpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIERlYnVnU2Vzc2lvbi5wYXRoMnVyaShkZWJ1Z2dlclBhdGgpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gZGVidWdnZXJQYXRoO1xuXHR9XG5cblx0Ly8tLS0tIHByaXZhdGUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cdHByaXZhdGUgc3RhdGljIHBhdGgydXJpKHBhdGg6IHN0cmluZyk6IHN0cmluZyB7XG5cblx0XHRpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJykge1xuXHRcdFx0aWYgKC9eW0EtWl06Ly50ZXN0KHBhdGgpKSB7XG5cdFx0XHRcdHBhdGggPSBwYXRoWzBdLnRvTG93ZXJDYXNlKCkgKyBwYXRoLnN1YnN0cigxKTtcblx0XHRcdH1cblx0XHRcdHBhdGggPSBwYXRoLnJlcGxhY2UoL1xcXFwvZywgJy8nKTtcblx0XHR9XG5cdFx0cGF0aCA9IGVuY29kZVVSSShwYXRoKTtcblxuXHRcdGxldCB1cmkgPSBuZXcgVVJMKGBmaWxlOmApO1x0Ly8gaWdub3JlICdwYXRoJyBmb3Igbm93XG5cdFx0dXJpLnBhdGhuYW1lID0gcGF0aDtcdC8vIG5vdyB1c2UgJ3BhdGgnIHRvIGdldCB0aGUgY29ycmVjdCBwZXJjZW50IGVuY29kaW5nIChzZWUgaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnKVxuXHRcdHJldHVybiB1cmkudG9TdHJpbmcoKTtcblx0fVxuXG5cdHByaXZhdGUgc3RhdGljIHVyaTJwYXRoKHNvdXJjZVVyaTogc3RyaW5nKTogc3RyaW5nIHtcblxuXHRcdGxldCB1cmkgPSBuZXcgVVJMKHNvdXJjZVVyaSk7XG5cdFx0bGV0IHMgPSBkZWNvZGVVUklDb21wb25lbnQodXJpLnBhdGhuYW1lKTtcblx0XHRpZiAocHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJykge1xuXHRcdFx0aWYgKC9eXFwvW2EtekEtWl06Ly50ZXN0KHMpKSB7XG5cdFx0XHRcdHMgPSBzWzFdLnRvTG93ZXJDYXNlKCkgKyBzLnN1YnN0cigyKTtcblx0XHRcdH1cblx0XHRcdHMgPSBzLnJlcGxhY2UoL1xcLy9nLCAnXFxcXCcpO1xuXHRcdH1cblx0XHRyZXR1cm4gcztcblx0fVxuXG5cdHByaXZhdGUgc3RhdGljIF9mb3JtYXRQSUlSZWdleHAgPSAveyhbXn1dKyl9L2c7XG5cblx0Lypcblx0KiBJZiBhcmd1bWVudCBzdGFydHMgd2l0aCAnXycgaXQgaXMgT0sgdG8gc2VuZCBpdHMgdmFsdWUgdG8gdGVsZW1ldHJ5LlxuXHQqL1xuXHRwcml2YXRlIHN0YXRpYyBmb3JtYXRQSUkoZm9ybWF0OnN0cmluZywgZXhjbHVkZVBJSTogYm9vbGVhbiwgYXJnczoge1trZXk6IHN0cmluZ106IHN0cmluZ30pOiBzdHJpbmcge1xuXHRcdHJldHVybiBmb3JtYXQucmVwbGFjZShEZWJ1Z1Nlc3Npb24uX2Zvcm1hdFBJSVJlZ2V4cCwgZnVuY3Rpb24obWF0Y2gsIHBhcmFtTmFtZSkge1xuXHRcdFx0aWYgKGV4Y2x1ZGVQSUkgJiYgcGFyYW1OYW1lLmxlbmd0aCA+IDAgJiYgcGFyYW1OYW1lWzBdICE9PSAnXycpIHtcblx0XHRcdFx0cmV0dXJuIG1hdGNoO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGFyZ3NbcGFyYW1OYW1lXSAmJiBhcmdzLmhhc093blByb3BlcnR5KHBhcmFtTmFtZSkgP1xuXHRcdFx0XHRhcmdzW3BhcmFtTmFtZV0gOlxuXHRcdFx0XHRtYXRjaDtcblx0XHR9KVxuXHR9XG59XG4iXX0=","import * as vscode from 'vscode';\nimport { MumpsLineParser, LabelInformation } from './mumpsLineParser'\n\nexport default class MumpsDocumentSymbolProvider implements vscode.DocumentSymbolProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tpublic provideDocumentSymbols(document: vscode.TextDocument): Promise<vscode.SymbolInformation[]> {\n\t\treturn new Promise(resolve => {\n\n\t\t\tconst labels: LabelInformation[] = MumpsLineParser.getLabels(document.getText());\n\t\t\tconst symbols: vscode.SymbolInformation[] = [];\n\n\t\t\tfor (let i = 0; i < labels.length; i++) {\n\t\t\t\tconst startPosition = new vscode.Position(labels[i].line, 0);\n\t\t\t\tlet endPostionLine = document.lineCount - 1;\n\t\t\t\tif (labels[i + 1] !== undefined) {\n\t\t\t\t\tendPostionLine = labels[i + 1].line\n\t\t\t\t}\n\t\t\t\tconst endPosition = new vscode.Position(endPostionLine, 0);\n\t\t\t\tconst methodRange = new vscode.Location(document.uri, new vscode.Range(startPosition, endPosition));\n\t\t\t\tsymbols.push(new vscode.SymbolInformation(labels[i].name, vscode.SymbolKind.Function, '', methodRange));\n\t\t\t}\n\n\t\t\tresolve(symbols);\n\t\t})\n\t}\n}","/* eslint-disable no-cond-assign */\r\n\r\n/* eslint-disable no-prototype-builtins */\r\nimport * as fs from 'fs';\r\nexport type ErrorInformation = {\r\n\ttext: string,\r\n\tposition: number,\r\n\tline?: number,\r\n\tindexFound?: boolean,\r\n\tglobalFound?: boolean,\r\n\tindirectionFound?: boolean\r\n}\r\nexport enum TokenType {\r\n\tglobal, local, exfunction, nonMfunction, entryref, operator, keyword, ifunction,\r\n\tlabel, comment, sysvariable, string, number, indentation, argPostcondition\r\n}\r\nexport type LineToken = {\r\n\ttype: TokenType,\r\n\tname: string,\r\n\tlongName?: string,\r\n\tisPostconditioned?: boolean,\r\n\tisExcludedVariable?: boolean,\r\n\tisUnreachable?: boolean,\r\n\thasArguments?: boolean,\r\n\tposition: number\r\n}\r\ntype LineComand = {\r\n\tcommand: string,\r\n\tposition: number\r\n}\r\ntype LineComment = {\r\n\tcomment: string,\r\n\tposition: number\r\n}\r\nexport type LineObject = {\r\n\tlineComment?: LineComment;\r\n\tlineIndentationArray?: string[];\r\n\tlineRoutines?: TmpFunction[];\r\n\tlineLeadSpace?: string,\r\n\tlineLabel?: string,\r\n\tlineExpression: string,\r\n\terrorText?: string,\r\n\terrorPosition?: number,\r\n\texpressionPosition: number\r\n}\r\ntype TmpFunction = {\r\n\tmCommand: string,\r\n\tmArguments: string,\r\n\tmPostCondition: string,\r\n\tcmdPosition: number,\r\n\targPosition: number,\r\n\tpcPosition: number\r\n}\r\ntype ModifiedLine = {\r\n\tlineText: string,\r\n\terrorText: string\r\n}\r\nexport type LineInformation = {\r\n\terror: ErrorInformation,\r\n\ttokens: LineToken[],\r\n\tindentationLevel: number\r\n}\r\nexport type LabelInformation = {\r\n\tname: string,\r\n\tline: number\r\n}\r\n//const label = /^[A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?/\r\nexport const label = /^(([A-Za-z%][A-Za-z0-9]*)|\\d+):?(\\(([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*)?\\))?/\r\nconst lvn = /^[A-Za-z%][A-Za-z0-9]*/\r\nconst gvn = /^\\^[A-Za-z%][A-Za-z0-9]*/\r\nconst isv = /^\\$(DEVICE|ECODE|EC|ESTACK|ES|ETRAP|ET|HALT|HOROLOG|H|IO|I|JOB|J|KEY|K|NAMESPACE|PRINCIPAL|P|QUIT|Q|REFERENCE|R|STACK|STORAGE|ST|SYSTEM|SY|S|TEST|THIS|TLEVEL|TL|T|USERNAME|X|Y|ZALLOCSTOR|ZA|ZB|ZCHSET|ZCLOSE|ZCMDLINE|ZCM|ZCOMPILE|ZCO|ZCSTATUS|ZCH[A-Z]*|ZC|ZDATEFORM|ZDA|ZDIRECTORY|ZD|ZEDITOR|ZED|ZEOF|ZEO|ZE[A-Z]*|ZGBLDIR|ZG|ZHRORLOG|ZH|ZININTERRUPT|ZINI|ZINTERRUPT|ZINT|ZIO|ZJOB|ZJ|ZKEY|ZLEVEL|ZL|ZMAXTPTIME|ZMAXTPTI|ZMODE|ZMO|ZONLNRLBK|ZPATNUMERIC|ZPATN|ZPIN|ZPOSITION|ZPOS|ZPOUT|ZPROMPT|ZQUIT|ZREALSTOR|ZRELDATE|ZRO[A-Z]*|ZSOURCE|ZSO|ZSTA[A-Z]*|ZSTEP|ZSTRP|ZSTRPLLIM|ZST|ZSYSTEM|ZSY|ZS|ZTEXIT|ZTE|ZTIMEOUT|ZTIM|ZTRAP|ZT|ZUSEDSTOR|ZUT|ZVERSION|ZV[A-Z]*|ZYERROR|ZYRELEASE|ZTDATA|ZTDELIM|ZTLEVEL|ZTNAME|ZTOLDVAL|ZTRIGGEROP|ZTSLATE|ZTUPDATE|ZTVALUE|ZTWORMHOLE)/i\r\nconst ifunction = /^\\$(ASCII|A|CHAR|C|DATA|D|EXTRACT|E|FIND|F|FNUMBER|FN|GET|G|INCREMENT|INCR|I|JUSTIFY|J|LENGTH|L|NAME|NA|NEXT|N|ORDER|O|PIECE|P|QLENGTH|QL|QSUBSCRIPT|QS|QUERY|Q|RANDOM|R|REVERSE|RE|SELECT|S|STACK|ST|TEXT|T|TRANSLATE|TR|VIEW|V|ZAHANDLE|ZAH|ZASCII|ZATRANSFORM|ZAT|ZA|ZBITAND|ZBITCOUNT|ZBITFIND|ZBITGET|ZBITLEN|ZBITNOT|ZBITOR|ZBITSET|ZBITSTR|ZBITXOR|ZCHAR|ZCH|ZCOLLATE|ZCONVERT|ZCO|ZDATE|ZDATA|ZD|ZEXTRACT|ZE|ZFIND|ZF|ZGETJPI|ZG|ZINCREMENT|ZINCR|ZJOBEXAM|ZJUSTIFY|ZJ|ZLENGTH|ZL|ZMESSAGE|ZM|ZPARSE|ZPEEK|ZPIECE|ZPI|ZPREVIOUS|ZP|ZQGBLMOD|ZSEARCH|ZSIGPROC|ZSOCKET|ZSUBSTR|ZSUB|ZSYSLOG|ZTRANSLATE|ZTRIGGER|ZTRI|ZTRNLNM|ZTR|ZWIDTH|ZWRITE|ZW|ZYHASH|ZYISSQLNULL|ZYSUFFIX)(?=\\()/i;\r\nconst nonMfunction = /^\\$&([A-Za-z%0-9][A-Za-z0-9]*\\.)?([A-Za-z%0-9][A-Za-z0-9]*)(\\^[A-Za-z%][A-Za-z0-9]*)?/\r\n//export const entryref = /^(&[A-Za-z0-9]*\\.?)?@?([A-Za-z%0-9][A-Za-z0-9]*)?(\\^@?[A-Za-z%][A-Za-z0-9]*)?/\r\nexport const entryref = /^(&[A-Za-z0-9]*\\.?)?([A-Za-z%0-9][A-Za-z0-9]*)?(\\^[A-Za-z%][A-Za-z0-9]*)?/\r\nconst routineref = /^\\^[A-Za-z%][A-Za-z0-9]*/\r\nconst numlit = /^(\\d+(\\.\\d*)?|\\.\\d+)(E-?\\d+)?/\r\nconst strlit = /^\"(\"\"|[^\"])*\"/\r\nconst command = /^[B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|U|USE|V|VIEW|W|WRITE|X|XECUTE|ZA|ZALLOCATE|ZBR|ZBREAK|ZC|ZCONTINUE|ZD|ZDEALLOCATE|ZE|ZEDIT|ZG|ZGOTO|ZHALT|ZH|ZHELP|ZK|ZKILL|ZL|ZLINK|ZM|ZMESSAGE|ZP|ZPRINT|ZRUPDATE|ZSH|ZSHOW|ZST|ZSTEP|ZSY|ZSYSTEM|ZTC|ZTCOMMIT|ZTR|ZTRIGGER|ZTS|ZTSTART|ZWI|ZWITHDRAW|ZWR|ZWRITE]/i\r\nconst binoperator = /^('=|'>|'<|<=|>=|'&|'!|'\\?|'\\[|'\\]\\]|'\\]|\\*\\*|\\+|-|\\*|\\/|\\\\|#|'|&|!|_|<|>|=|\\[|\\]\\]|\\]|\\?|@)/\r\nconst unaryoperator = /(-|'|\\+|@)/\r\nconst patcode = /^([A|C|E|L|N|P|U]|^\"(\"\"|[^\"])*\")+/i\r\nconst repititionCount = /^\\d*\\.?\\d*/\r\nconst openkeywords = /^APPEND|ATTACH=|BLOCK(SIZE)?=|COMM(AND)?=|CONNECT=|(NO)?DELIM(ITER)?=?|EXC(EPTION)?=|FIFO|(NO)?FIXED|GROUP=|[IO]?CHSET=|KEY|IKEY|INDEPENDENT|IOERROR=|NEW[A-Z]*|MOREREADTIME=|OKEY|OWNER=|PARSE|(NO)?RCHK|(NO)?READ(ONLY)?|RECORD(SIZE)?=|(NO)?RETRY|REWIND|SEEK=|SHELL=|STDERR=|(NO)?STREAM|SYSTEM=|(NO)?TRUNCATE|UIC=|VARIABLE|WORLD=|Z?(NO)?WRAP|WRITE(ONLY)?|ZBFSIZE=|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE=|Z?LISTEN=/i\r\nconst usekeywords = /^ATTACH=|(NO)?CENABLE|[IO]?CHSET=|CLEAR(SCREEN)?|CONNECT|(NO)?CONVERT|CTRAP=|(NO)?DELIM(ITER)?=?|DETACH=|DOWNSCROLL|(NO)?ECHO|(NO)?EDITING|ERASELINE|(NO)?ESC(APE)?|EXC(EPTION)?=|(NO)?FILTER=?|FLUSH|GROUP=|KEY|IKEY|IOERROR=|OKEY|OWNER=|(NO)?PASTHRU|(NO)?RCHK|(NO)?RETRY|REWIND|SEEK=|SKIPFILE=|SOCKET=|SPACE=|TERM(INATOR)?=|(NO)?TRUNCATE|(NO)?TTSNYC|(NO)?TYPEAHEAD|UPSCROLL|Z?LENGTH=|Z?WIDTH=|Z?(NO)?WRAP|WRITELB=|X=|Y=|ZBFSIZE|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE|LISTEN=/i\r\nconst closekeywords = /^DELETE|(NO)?DESTROY|EXCEPTION=|GROUP=|OWNER=|RENAME=|REPLACE=|SOCKET=|TIMEOUT=|UIC=|WORLD=/i\r\nconst jobkeywords = /^CMD=|CMDLINE=|DEF=|DEFAULT=|ERR=|ERROR=|GBL=|GBLDIR=|IN=|INPUT=|OUT=|OUTPUT=|PASS|PASSCURLVN|STA=|STARTUP=/i\r\nconst tstartkeywords = /^SERIAL|S|T=|TRANSACTIONID=/i\r\nconst cmdExpansions = {\r\n\t'B': 'BREAK', 'C': 'CLOSE', 'D': 'DO', 'E': 'ELSE', 'F': 'FOR', 'G': 'GOTO', 'H': 'HALT', 'I': 'IF', 'J': 'JOB', 'K': 'KILL', 'L': 'LOCK', 'M': 'MERGE', 'N': 'NEW',\r\n\t'O': 'OPEN', 'Q': 'QUIT', 'R': 'READ', 'S': 'SET', 'U': 'USE', 'V': 'VIEW', 'W': 'WRITE', 'X': 'XECUTE', 'ZA': 'ZALLOCATE', 'ZB': 'ZBREAK', 'ZC': 'ZCONTINUE',\r\n\t'ZD': 'ZDEALLOCATE', 'ZED': 'ZEDIT', 'ZG': 'ZGOTO', 'ZH': 'ZHELP', 'ZK': 'ZKILL', 'ZL': 'ZLINK', 'ZM': 'ZMESSAGE', 'ZP': 'ZPRINT', 'ZSH': 'ZSHOW',\r\n\t'ZST': 'ZSTEP', 'ZSY': 'ZSYSTEM', 'ZTC': 'ZTCOMMIT', 'ZTR': 'ZTRIGGER', 'ZTS': 'ZTSTART', 'ZWI': 'ZWITHDRAW', 'ZWR': 'ZWRITE'\r\n}\r\nconst funcExpansions = {\r\n\t'A': 'ASCII', 'C': 'CHAR', 'D': 'DATA', 'E': 'EXTRACT', 'F': 'FIND', 'FN': 'FNUMBER', 'G': 'GET', 'I': 'INCREMENT', 'INCR': 'INCREMENT', 'J': 'JUSTIFY', 'L': 'LENGTH', 'NA': 'NAME', 'N': 'NEXT', 'O': 'ORDER',\r\n\t'P': 'PIECE', 'QL': 'QLENGTH', 'QS': 'QSUBSCRIPT', 'Q': 'QUERY', 'R': 'RANDOM', 'RE': 'REVERSE', 'S': 'SELECT', 'ST': 'STACK', 'T': 'TEXT', 'TR': 'TRANSLATE', 'V': 'VIEW',\r\n\t'ZA': 'ZASCII', 'ZAH': 'ZAHANDLE', 'ZCH': 'ZCHAR', 'ZCO': 'ZCONVERT', 'ZD': 'ZDATE', 'ZE': 'ZEXTRACT', 'ZF': 'ZFIND', 'ZG': 'ZGETJPI', 'ZJ': 'ZJUSTIFY', 'ZL': 'ZLENGTH', 'ZM': 'ZMESSAGE', 'ZPI': 'ZPIECE', 'ZP': 'ZPREVIOUS',\r\n\t'ZSUB': 'ZSUBSTR', 'ZTR': 'ZTRANSLATE', 'ZTRI': 'ZTRIGGER', 'ZW': 'ZWIDTH'\r\n}\r\nconst isvExpansions = {\r\n\t'D': 'DEVICE', 'EC': 'ECODE', 'ES': 'ESTACK', 'ET': 'ETRAP', 'H': 'HOROLOG', 'I': 'IO', 'J': 'JOB', 'K': 'KEY', 'P': 'PRINCIPAL', 'Q': 'QUIT', 'R': 'REFERENCE', 'ST': 'STACK',\r\n\t'S': 'STORAGE', 'SY': 'SYSTEM', 'T': 'TEST', 'TL': 'TLEVEL', 'TR': 'TRESTART', 'ZC': 'ZCSTATUS', 'ZDA': 'ZDATEFORM', 'ZD': 'ZDIRECTORY', 'ZED': 'ZEDITOR', 'ZEO': 'ZEOF', 'ZE': 'ZERROR',\r\n\t'ZG': 'ZGBLDIR', 'ZH': 'ZHRORLOG', 'ZINI': 'ZININTERRUPT', 'ZINT': 'ZINTERRUPT', 'ZJ': 'ZJOB', 'ZL': 'ZLEVEL', 'ZMAXPTI': 'ZMAXTPTIME', 'ZMO': 'ZMODE', 'ZPOS': 'ZPOSITION',\r\n\t'ZPROM': 'ZPROMPT', 'ZRO': 'ZROUTINES', 'ZSO': 'ZSOURCE', 'ZS': 'ZSTATUS', 'ZST': 'ZSTEP', 'ZSTRP': 'ZSTRPLLIM', 'ZSY': 'ZSYSTEM', 'ZTE': 'ZTEXIT', 'ZTIM': 'ZTIMEOUT', 'ZT': 'ZTRAP',\r\n\t'ZV': 'ZVERSION', 'ZYER': 'ZYERROR', 'ZYRE': 'ZYRELEASE', 'ZTDE': 'ZTDELIM'\r\n\r\n}\r\nconst cmdParams = {\r\n\t'BREAK': {\r\n\t\t'abbreviation': 'B',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:tvexpr][,...]]'\r\n\t},\r\n\t'CLOSE': {\r\n\t\t'abbreviation': 'C',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'DO': {\r\n\t\t'abbreviation': 'D',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[(expr:.lvn[,...])][:tvexpr][,...]]'\r\n\t},\r\n\t'ELSE':\r\n\t{\r\n\t\t'abbreviation': 'E',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'FOR': {\r\n\t\t'abbreviation': 'F',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[lvn=expr[:numexpr1[:numexpr2]][,...]]]'\r\n\t},\r\n\t'GOTO': {\r\n\t\t'abbreviation': 'G',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[:tvexpr][,...]'\r\n\t},\r\n\t'HALT': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'HANG': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'numexpr[,...]'\r\n\t},\r\n\t'IF': {\r\n\t\t'abbreviation': 'I',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[tvexpr[,...]]'\r\n\t},\r\n\t'JOB': {\r\n\t\t'abbreviation': 'J',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]'\r\n\t},\r\n\t'KILL': {\r\n\t\t'abbreviation': 'K',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[glvn | (lvn[,...]) | *lname | *lvn ]'\r\n\t},\r\n\t'LOCK': {\r\n\t\t'abbreviation': 'L',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[-|+]nref|(nref[,...])[:numexpr] [,...]]'\r\n\t},\r\n\t'MERGE': {\r\n\t\t'abbreviation': 'M',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn=glvn[,...]'\r\n\t},\r\n\t'NEW': {\r\n\t\t'abbreviation': 'N',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[(]lvn[,...][)][,...]]'\r\n\t},\r\n\t'OPEN': {\r\n\t\t'abbreviation': 'O',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:[(keyword[=expr][:...])] [:numexpr]][,...]'\r\n\t},\r\n\t'QUIT': {\r\n\t\t'abbreviation': 'Q',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr | *lname | *lvn]'\r\n\t},\r\n\t'READ': {\r\n\t\t'abbreviation': 'R',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]'\r\n\t},\r\n\t'SET': {\r\n\t\t'abbreviation': 'S',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]'\r\n\t},\r\n\t'TCOMMIT': {\r\n\t\t'abbreviation': 'TC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TRESTART': {\r\n\t\t'abbreviation': 'TRE',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TROLLBACK': {\r\n\t\t'abbreviation': 'TRO',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'TSTART': {\r\n\t\t'abbreviation': 'TS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[([lvn...])|lvn|*|][:keyword|(keyword...)]'\r\n\t},\r\n\t'USE': {\r\n\t\t'abbreviation': 'U',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'VIEW': {\r\n\t\t'abbreviation': 'V',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'keyword[:expr[:...]][,...]'\r\n\t},\r\n\t'WRITE': {\r\n\t\t'abbreviation': 'W',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr|*intexpr|fcc[,...]'\r\n\t},\r\n\t'XECUTE': {\r\n\t\t'abbreviation': 'X',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:tvexpr][,...]'\r\n\t},\r\n\t'ZALLOCATE': {\r\n\t\t'abbreviation': 'ZA',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[(]nref[,...][)][:intexpr][,...]'\r\n\t},\r\n\t'ZBREAK': {\r\n\t\t'abbreviation': 'ZB',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[-]entryref[:[expr][:intexpr]][,...]'\r\n\t},\r\n\t'ZCOMPILE': {\r\n\t\t'abbreviation': 'ZCOM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZCONTINUE': {\r\n\t\t'abbreviation': 'ZC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZDEALLOCATE': {\r\n\t\t'abbreviation': 'ZD',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[nref[,...]]'\r\n\t},\r\n\t'ZEDIT': {\r\n\t\t'abbreviation': 'ZED',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[,...]]'\r\n\t},\r\n\t'ZGOTO': {\r\n\t\t'abbreviation': 'ZG',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t},\r\n\t'ZHALT': {\r\n\t\t'abbreviation': 'ZHALT',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZHELP': {\r\n\t\t'abbreviation': 'ZH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2],...]'\r\n\t},\r\n\t'ZKILL': {\r\n\t\t'abbreviation': 'ZK',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZLINK': {\r\n\t\t'abbreviation': 'ZL',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2][,...]]'\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'abbreviation': 'ZM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'intexpr[:expr2][:...]'\r\n\t},\r\n\t'ZPRINT': {\r\n\t\t'abbreviation': 'ZP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t},\r\n\t'ZRUPDATE': {\r\n\t\t'abbreviation': 'ZRUP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZSHOW': {\r\n\t\t'abbreviation': 'ZSH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:glvn][,...]]'\r\n\t},\r\n\t'ZSTEP': {\r\n\t\t'abbreviation': 'ZST',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[keyword[:expr]][,...]'\r\n\t},\r\n\t'ZSYSTEM': {\r\n\t\t'abbreviation': 'ZSY',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr][,...]]'\r\n\t},\r\n\t'ZTCOMMIT': {\r\n\t\t'abbreviation': 'ZTC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'abbreviation': 'ZTR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'gvn'\r\n\t},\r\n\t'ZTSTART': {\r\n\t\t'abbreviation': 'ZTS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZWITHDRAW': {\r\n\t\t'abbreviation': 'ZWI',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'abbreviation': 'ZWR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[zwrglvn[,...]]'\r\n\t}\r\n}\r\nconst funcParams = {\r\n\t'ASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'CHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'DATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'EXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FNUMBER': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'GET': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'INCREMENT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'JUSTIFY': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'LENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'NAME': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'NEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn('\r\n\t},\r\n\t'ORDER': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'PIECE': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'QLENGTH': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'expr'\r\n\t},\r\n\t'QSUBSCRIPT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'expr,expr'\r\n\t},\r\n\t'QUERY': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'RANDOM': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'REVERSE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'SELECT': {\r\n\t\t'maxparams': 99,\r\n\t\t'format': 'special'\r\n\t},\r\n\t'STACK': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'TEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'entryref'\r\n\t},\r\n\t'TRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'VIEW': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZAHANDLE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZATRANSFORM': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4,\r\n\t\t'format': 'expr,expr,bool,bool'\r\n\t},\r\n\t'ZBITAND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITCOUNT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITFIND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITGET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITLEN': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITNOT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITSET': {\r\n\t\t'minparams': 3,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITSTR': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITXOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZCHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'ZCOLLATE': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3,\r\n\t\t'format': 'expr,expr,bool'\r\n\t},\r\n\t'ZCONVERT': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZDATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'lvn'\r\n\t},\r\n\t'ZDATE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZEXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZFIND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZGETJPI': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZJOBEXAM': {\r\n\t\t'minparams': 0,\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZJUSTIFY': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZLENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZPARSE': {\r\n\t\t'maxparams': 5,\r\n\t\t'format': 'expr,expr|null,expr|null,expr|null,expr'\r\n\t},\r\n\t'ZPEEK': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPIECE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPREVIOUS': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'ZQGBLMOD': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'gvn'\r\n\t},\r\n\t'ZSEARCH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSIGPROC': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSOCKET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZSUBSTR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZSYSLOG': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZTRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZTRNLNM': {\r\n\t\t'maxparams': 6\r\n\t},\r\n\t'ZWIDTH': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZYHASH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZYISSQLNULL': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZYSUFFIX': {\r\n\t\t'maxparams': 1\r\n\t}\r\n}\r\nconst expressiontype = {\r\n\t\"Standard\": 0,\r\n\t\"Index\": 1,\r\n\t\"eArgument\": 2,\r\n\t\"iArgument\": 3,\r\n\t\"Atom\": 4\r\n}\r\n\r\nclass MumpsLineParser {\r\n\tprivate _tokens: LineToken[] = [];\r\n\tprivate _indentationLevel: number = 0;\r\n\tprivate cmdCompressions: object;\r\n\tprivate funcCompressions: object;\r\n\tprivate isvCompressions: object;\r\n\tprivate _tokenSaveEnabled: boolean = true;\r\n\t/**\r\n\t * Checks if the given File is correct M-Code\r\n\t * @param filename\r\n\t * @returns Array with list of errors or an empty array if no errors found in file\r\n\t */\r\n\tpublic checkFile(filename: string): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tlet content: string;\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch {\r\n\t\t\terrlist.push({ text: 'File read error: ' + filename, position: 0, line: 0 });\r\n\t\t\treturn errlist;\r\n\t\t}\r\n\t\tconst lines = content.split('\\n');\r\n\t\treturn this.checkLines(lines);\r\n\t}\r\n\tpublic checkLines(lines: string[]): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.checkLine(lines[i]);\r\n\t\t\tif (info.text !== '') {\r\n\t\t\t\tinfo.line = i + 1;\r\n\t\t\t\terrlist.push(info);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn errlist;\r\n\t}\r\n\tpublic checkLine(line: string): ErrorInformation {\r\n\t\tthis._tokens = [];\r\n\t\tthis._tokenSaveEnabled = true\r\n\t\tconst parsed = MumpsLineParser.parseLine(line);\r\n\t\tif (parsed.lineLabel) {\r\n\t\t\tthis._splitLabelAndParameters(parsed.lineLabel);\r\n\t\t}\r\n\t\tif (parsed.lineIndentationArray) {\r\n\t\t\tlet position = 0;\r\n\t\t\tif (parsed.lineLeadSpace) {\r\n\t\t\t\tposition += parsed.lineLeadSpace.length;\r\n\t\t\t}\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tposition += parsed.lineLabel.length;\r\n\t\t\t}\r\n\t\t\tthis._pushToken({ name: \".\".repeat(parsed.lineIndentationArray.length), type: TokenType.indentation, position });\r\n\t\t\tthis._indentationLevel = parsed.lineIndentationArray.length\r\n\t\t} else {\r\n\t\t\tthis._indentationLevel = 0;\r\n\t\t}\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (parsed.lineRoutines) {\r\n\t\t\tfor (let i = 0; i < parsed.lineRoutines.length; i++) {\r\n\t\t\t\tconst code = parsed.lineRoutines[i];\r\n\t\t\t\tif (code.mCommand.length > 0) {\r\n\t\t\t\t\tlet cmd = code.mCommand.toUpperCase();\r\n\t\t\t\t\tif (cmd === 'H') {\r\n\t\t\t\t\t\tif (code.mArguments === '') {\r\n\t\t\t\t\t\t\tcmd = 'HALT';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcmd = 'HANG';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (cmd.match(command)) {\r\n\t\t\t\t\t\tlet longcmd = cmd;\r\n\t\t\t\t\t\tif (cmdParams[cmd] === undefined) {\r\n\t\t\t\t\t\t\tlongcmd = cmdExpansions[cmd];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._pushToken({\r\n\t\t\t\t\t\t\tname: code.mCommand,\r\n\t\t\t\t\t\t\ttype: TokenType.keyword,\r\n\t\t\t\t\t\t\tposition: code.cmdPosition,\r\n\t\t\t\t\t\t\tlongName: longcmd,\r\n\t\t\t\t\t\t\tisPostconditioned: code.mPostCondition !== \"\",\r\n\t\t\t\t\t\t\thasArguments: code.mArguments !== \"\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (longcmd === undefined) {\r\n\t\t\t\t\t\t\tresult.text = 'Unknown Command';\r\n\t\t\t\t\t\t\tresult.position = code.cmdPosition;\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresult = this._checkCommand(line, longcmd, code);\r\n\t\t\t\t\t\t} catch (result) {\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn { text: 'Invalid Command', position: code.cmdPosition }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (parsed.lineComment) {\r\n\t\t\tthis._pushToken({ name: parsed.lineComment.comment, position: parsed.lineComment.position, type: TokenType.comment });\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic analyzeLine(line: string): LineInformation {\r\n\t\tthis._tokens = [];\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tconst errInfo = this.checkLine(line);\r\n\t\treturn { error: errInfo, tokens: this._tokens, indentationLevel: this._indentationLevel }\r\n\t}\r\n\tpublic analyzeLines(input: string): [string[], LineToken[][], ErrorInformation[], number[]] {\r\n\t\tconst lines = input.split('\\n');\r\n\t\tconst errors: ErrorInformation[] = [];\r\n\t\tconst linetokens: Array<Array<LineToken>> = [];\r\n\t\tconst indentationLevels: number[] = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\terrors[i] = this.checkLine(lines[i]);\r\n\t\t\tlinetokens[i] = this._tokens;\r\n\t\t\tindentationLevels[i] = this._indentationLevel;\r\n\t\t}\r\n\t\treturn [lines, linetokens, errors, indentationLevels];\r\n\t}\r\n\tpublic expandCompressFile(filename: string, doExpand: boolean): string {\r\n\t\tif (doExpand === undefined) { doExpand = false; }\r\n\t\tlet content: string;\r\n\t\tlet lines: string[] = [];\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch {\r\n\t\t\tlines[0] = 'File read error: ';\r\n\t\t\treturn lines[0];\r\n\t\t}\r\n\t\tlines = content.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t//lines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.expandCompressLine(lines[i], doExpand);\r\n\t\t\tif (info.errorText !== '') {\r\n\t\t\t\tlines = [];\r\n\t\t\t\tlines[0] = \"Error in Line \" + i + \" : \" + info.errorText;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlines[i] = info.lineText;\r\n\t\t}\r\n\t\treturn lines.join(\"\\n\");\r\n\t}\r\n\tpublic expandCompressLine(line: string, doExpand: boolean): ModifiedLine {\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tif (doExpand === false && this.cmdCompressions === undefined) {\r\n\t\t\tthis.cmdCompressions = {};\r\n\t\t\tObject.keys(cmdExpansions).forEach(shortCommand => {\r\n\t\t\t\tthis.cmdCompressions[cmdExpansions[shortCommand]] = shortCommand;\r\n\t\t\t});\r\n\t\t\tthis.funcCompressions = {};\r\n\t\t\tObject.keys(funcExpansions).forEach(shortFunction => {\r\n\t\t\t\tthis.funcCompressions[funcExpansions[shortFunction]] = shortFunction;\r\n\t\t\t});\r\n\t\t\tthis.isvCompressions = {};\r\n\t\t\tObject.keys(isvExpansions).forEach(shortIsv => {\r\n\t\t\t\tthis.isvCompressions[isvExpansions[shortIsv]] = shortIsv;\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst outline: ModifiedLine = { lineText: line, errorText: '' }\r\n\t\tconst errorinfo = this.checkLine(line);\r\n\t\tlet outText = line;\r\n\t\tif (errorinfo.text !== \"\") {\r\n\t\t\toutline.errorText = errorinfo.text;\r\n\t\t} else {\r\n\t\t\tlet posCorrector = 0;\r\n\t\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\t\tconst token = this._tokens[i];\r\n\t\t\t\tif (token.hasOwnProperty(\"longName\")) {\r\n\t\t\t\t\tconst name = token.name;\r\n\t\t\t\t\tlet longName = name;\r\n\t\t\t\t\tconst position = token.position;\r\n\t\t\t\t\tif (doExpand) {\r\n\r\n\t\t\t\t\t\tlongName = token.longName!.toLowerCase();\r\n\t\t\t\t\t\tif (longName[0] === \"$\") {\r\n\t\t\t\t\t\t\tlongName = \"$\" + longName[1].toUpperCase() + longName.substring(2);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlongName = longName[0].toUpperCase() + longName.substring(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet checkName = name.toUpperCase();\r\n\t\t\t\t\t\tif (name[0] === \"$\") { checkName = name.substring(1); }\r\n\t\t\t\t\t\tif (token.type === TokenType.keyword) {\r\n\t\t\t\t\t\t\tif (this.cmdCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = this.cmdCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.ifunction) {\r\n\t\t\t\t\t\t\tif (this.funcCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.funcCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.sysvariable) {\r\n\t\t\t\t\t\t\tif (this.isvCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.isvCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (name.length !== longName.length) {\r\n\t\t\t\t\t\toutText = outText.substring(0, posCorrector + position) + longName + outText.substring(posCorrector + position + name.length);\r\n\t\t\t\t\t\tposCorrector += longName.length - name.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\toutline.lineText = outText;\r\n\t\treturn outline;\r\n\t}\r\n\tpublic static getLabels(text: string): LabelInformation[] {\r\n\t\tconst labels: LabelInformation[] = [];\r\n\t\tconst lines = text.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tconst parsed = MumpsLineParser.parseLine(lines[i]);\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tparsed.lineLabel = parsed.lineLabel.replace(\":\", \"\")\r\n\t\t\t\tlabels.push({ name: parsed.lineLabel, line: i });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn labels;\r\n\t}\r\n\tpublic getTokenAt(line: string, position: number): LineToken | undefined {\r\n\t\tthis.checkLine(line);\r\n\t\tlet memPosition = 0\r\n\t\tlet tokenId = -1\r\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\tconst token = this._tokens[i];\r\n\t\t\tif (token.position >= memPosition && token.position <= position) {\r\n\t\t\t\tmemPosition = token.position;\r\n\t\t\t\ttokenId = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (tokenId === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn this._tokens[tokenId];\r\n\t}\r\n\tprivate _checkEntryRefAndPostcondition(line: string, position: number, withParams: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, withParams);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tthis._pushToken({ type: TokenType.argPostcondition, name: \":\", position });\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkEntryRef(line: string, position: number, withParams: boolean, isUserfunction?: boolean): ErrorInformation {\r\n\t\tisUserfunction = isUserfunction === undefined ? false : isUserfunction;\r\n\t\tlet tokentype: TokenType = isUserfunction ? TokenType.exfunction : TokenType.entryref;\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet refString = \"\"\r\n\t\tlet refPosition = position\r\n\t\tthis._tokenSaveEnabled = false\r\n\t\tif (line.substring(result.position).match(entryref) && line.substring(result.position).match(entryref)![0].length > 0) {\r\n\t\t\trefString = line.substring(result.position).match(entryref)![0];\r\n\t\t\tresult.position += refString.length;\r\n\t\t\tconst char = line[result.position]\r\n\t\t\tconst indRoutineString = line.substring(result.position, result.position + 2);\r\n\t\t\tif (!refString.includes(\"^\")) { //No ^ included, so a \"^@\", a \"+\" or a \"(\" has to follow or Entryref is complete\r\n\t\t\t\tif (char === '+') { //Check Label+Offset\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\trefString += char\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\t\trefString += routine\r\n\t\t\t\t\tresult.position += routine.length\r\n\t\t\t\t} else if (indRoutineString === \"^@\") {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t\t\t\trefString += \"^@\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (line[result.position] === '@') { //Check Indirection\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tconst indRoutineString = line.substring(result.position, result.position + 2);\r\n\t\t\tif (line[result.position] === '+') { //Check Label+Offset\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\t//refPosition = result.position\r\n\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\tresult.position += routine.length\r\n\t\t\t\trefString = routine\r\n\t\t\t} else if (indRoutineString === \"^@\") {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t\t\tif (line.substring(result.position, result.position + 2) === \"@(\" && withParams) {\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t}\r\n\t\t\t} else if (indRoutineString === \"@(\" && withParams) {\r\n\t\t\t\tresult.position++\r\n\t\t\t}\r\n\t\t} else if (line[result.position] === '+') { //Check offset without label\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\trefPosition = result.position\r\n\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\tresult.position += routine.length\r\n\t\t\t\trefString = routine\r\n\t\t\t} else if (line.substring(result.position, result.position + 2) === \"^@\") {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t\t\tif (line.substring(result.position, result.position + 2) === \"@(\" && withParams) {\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (line.substring(result.position, result.position + 2) === \"^@\") {\r\n\t\t\t//refString = \"^@\"\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid EntryRef';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\trefString = line.substring(refPosition, result.position)\r\n\t\tthis._tokenSaveEnabled = true\r\n\t\tif (refString.length > 0) {\r\n\t\t\tthis._pushToken({ 'type': tokentype, name: refString, position: refPosition });\r\n\t\t}\r\n\t\tif (line[result.position] === '(' && withParams) {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.eArgument, line, ++result.position, 1);\r\n\t\t}\r\n\t\tif (refString[0] === '&') {\r\n\t\t\ttokentype = TokenType.nonMfunction;\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\t// private _checkEntryRef(line: string, position: number, withParams: boolean, isUserfunction?: boolean): ErrorInformation {\r\n\t// \tisUserfunction = isUserfunction === undefined ? false : isUserfunction;\r\n\t// \tlet tokentype: TokenType = isUserfunction ? TokenType.exfunction : TokenType.entryref;\r\n\t// \tlet result: ErrorInformation = { text: '', position };\r\n\t// \tconst indRoutineString = line.substring(result.position, result.position + 2);\r\n\t// \tif (line[result.position] === '@') { //Check Indirection\r\n\t// \t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t// \t\tif (line[result.position] === '+') { //Check Label+Offset\r\n\t// \t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t// \t\t}\r\n\t// \t\tif (line[result.position] === '^') { //Check if it's a Label like xxx^yyy\r\n\t// \t\t\tif (line[result.position + 1] === '@') { // or a Label xxx^@expr\r\n\t// \t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t// \t\t\t} else {\r\n\t// \t\t\t\tif (line.substring(result.position).match(entryref)) {\r\n\t// \t\t\t\t\tconst ref = line.substring(result.position).match(entryref)![0];\r\n\t// \t\t\t\t\tresult.position += ref.length;\r\n\t// \t\t\t\t} else {\r\n\t// \t\t\t\t\tresult.text = 'Invalid EntryRef';\r\n\t// \t\t\t\t\tthrow result;\r\n\t// \t\t\t\t}\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t// \t\t\tresult.position++;\r\n\t// \t\t}\r\n\t// \t} else if (indRoutineString === \"^@\") {\r\n\t// \t\tresult.position += 2\r\n\t// \t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position);\r\n\t// \t} else if (line.substring(result.position).match(entryref)) { //No Indirection and a valid entryref\r\n\r\n\t// \t\tlet ref = line.substring(result.position).match(entryref)![0];\r\n\t// \t\tconst merkpos = result.position;\r\n\t// \t\tresult.position += ref.length;\r\n\t// \t\tconst char = line[result.position];\r\n\t// \t\tif (result.position >= line.length) {\r\n\t// \t\t\tif (ref.length > 0) {\r\n\t// \t\t\t\tif (ref[0] === '&') {\r\n\t// \t\t\t\t\ttokentype = TokenType.nonMfunction;\r\n\t// \t\t\t\t}\r\n\t// \t\t\t\tthis._pushToken({ 'type': tokentype, name: ref, position: merkpos });\r\n\t// \t\t\t\treturn result;\r\n\t// \t\t\t} else {\r\n\t// \t\t\t\tresult.text = 'Missing Entryref';\r\n\t// \t\t\t\tthrow result;\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tif (ref.indexOf('^') === -1 && char === '+') { //Entryref in the form xxx+yyy[^zzz]\r\n\t// \t\t\tconst tokenPosition = this._tokens.length\r\n\t// \t\t\tthis._pushToken({ 'type': tokentype, name: ref, position: merkpos })\r\n\t// \t\t\tconst position = ++result.position\r\n\t// \t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t// \t\t\tref += \"+\" + line.substring(position, result.position);\r\n\t// \t\t\tif (result.position >= line.length) {\r\n\t// \t\t\t\tthis._tokens[tokenPosition] = { 'type': tokentype, name: ref, position: merkpos }\r\n\t// \t\t\t\treturn result\r\n\t// \t\t\t}\r\n\t// \t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t// \t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t// \t\t\t\tref += routine;\r\n\t// \t\t\t\tresult.position += routine.length;\r\n\t// \t\t\t}\r\n\t// \t\t\tthis._tokens[tokenPosition] = { 'type': tokentype, name: ref, position: merkpos }\r\n\t// \t\t} else {\r\n\t// \t\t\tthis._pushToken({ 'type': tokentype, name: ref, position: merkpos });\r\n\t// \t\t}\r\n\t// \t} else {\r\n\t// \t\tresult.text = 'Invalid Entryref';\r\n\t// \t\tthrow result;\r\n\t// \t}\r\n\t// \tif (line[result.position] === '(' && withParams) {\r\n\t// \t\tresult = this._evaluateExpression(expressiontype.eArgument, line, ++result.position, 1);\r\n\t// \t}\r\n\t// \treturn result\r\n\t// }\r\n\tprivate _checkVar(line: string, position: number, globalOk?: boolean, indexOk?: boolean, isExcluded?: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position, indexFound: false, globalFound: false, indirectionFound: false };\r\n\t\tlet varFound = false;\r\n\t\tglobalOk = globalOk ?? true;\r\n\t\tindexOk = indexOk ?? true;\r\n\t\tisExcluded = isExcluded ?? false;\r\n\t\tif (line[result.position] === '@') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tresult.indirectionFound = true;\r\n\t\t\tvarFound = true;\r\n\t\t\tconst nextChars = line.substring(result.position, result.position + 2)\r\n\t\t\tif (nextChars === '@(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst startString = line.substring(result.position, result.position + 2)\r\n\t\t\tif (line.substring(result.position).match(gvn) || startString === '^|' || startString === '^[') {\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (startString === '^|' || startString === '^[') {\r\n\t\t\t\t\tresult.position += 2\r\n\t\t\t\t\tlet cuttedLine = line\r\n\t\t\t\t\tif (startString === '^[') cuttedLine = this._cutBeforeClosingBrace(line, result.position)\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, cuttedLine, result.position);\r\n\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, cuttedLine, ++result.position);\r\n\t\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (startString === '^|' && line[result.position] !== '|' || (startString === '^[' && line[result.position] !== ']')) {\r\n\t\t\t\t\t\tif (startString === '^|') result.text = 'Missing \"|\"';\r\n\t\t\t\t\t\telse result.text = 'Missing \"]\"';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tif (line.substring(result.position).match(lvn)) {\r\n\t\t\t\t\t\tconst global = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\t\t\tthis._pushToken({ name: global, type: TokenType.global, position: result.position });\r\n\t\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst global = line.substring(result.position).match(gvn)![0];\r\n\t\t\t\t\tthis._pushToken({ name: global, type: TokenType.global, position: result.position });\r\n\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t}\r\n\t\t\t} else if (line.substring(result.position).match(lvn)) {  // local variable found\r\n\t\t\t\tconst local = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\tthis._pushToken({ name: local, type: TokenType.local, position: result.position, isExcludedVariable: isExcluded });\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position += local.length;\r\n\t\t\t} else if (line.substring(result.position, result.position + 2) === '^(') {\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tvarFound = false;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (varFound && (line[result.position] === '(' || (line.substring(result.position, result.position + 2) === '@(' && result.indirectionFound === true))) {\r\n\t\t\tif (!indexOk) {\r\n\t\t\t\tresult.text = 'Index not allowed here';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t\t\t\tresult.position++\r\n\t\t\t}\r\n\t\t\tconst provResult = this._evaluateExpression(expressiontype.Index, line, ++result.position, 1);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tresult.indexFound = true;\r\n\t\t}\r\n\t\tif (!varFound) {\r\n\t\t\tresult.text = 'Name missing';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkBreak(line: string, position: number): ErrorInformation {\r\n\t\t//[expr[:tvexpr][,...]]\r\n\t\tlet result = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKeyword(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(keywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(keywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword.slice(-1) === '=') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for command found';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkOUC(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\t//expr[:(keyword[=expr][:...])][,...]\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFor(line: string, position: number, argNumber: number): ErrorInformation {\r\n\t\t//[lvn=expr[:numexpr1[:numexpr2]][,...]]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (argNumber > 1) { //If it's not the first Argument the Options are possible: F I=1:2:3,4 or F I=1:2:3,I=4:1:6\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, result.position, false);\r\n\t\t\t\tif (line[provResult.position] === '\"') {\r\n\t\t\t\t\tresult.position = provResult.position + 1;\r\n\t\t\t\t}\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (provResult.text !== \"Name missing\") {\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Missing equal-sign';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate static _checkJobKeyword(line: string, position: number): ErrorInformation {\r\n\t\tconst result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(jobkeywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(jobkeywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword[keyword.length - 1] === '=') {\r\n\t\t\t\tif (line.substring(result.position).match(strlit)) {\r\n\t\t\t\t\tconst stringlit = line.substring(result.position).match(strlit)![0];\r\n\t\t\t\t\tresult.position += stringlit.length;\r\n\t\t\t\t\tif (stringlit.length === 0) {\r\n\t\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for JOB Command';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkJob(line: string, position: number): ErrorInformation {\r\n\t\t//entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]\r\n\t\tlet result = this._checkEntryRef(line, position, true);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = MumpsLineParser._checkJobKeyword(line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = MumpsLineParser._checkJobKeyword(line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') { //Numeric expression for Job-Timeout\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKill(line: string, position: number): ErrorInformation {\r\n\t\t//[glvn | (lvn[,...]) | *lname | *lvn ]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkLock(line: string, position: number, isLock: boolean): ErrorInformation {\r\n\t\t//[[-|+]nref|(nref[,...])[:numexpr] [,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif ((line[result.position] === '+' || line[result.position] === '-') && isLock) {\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkMerge(line: string, position: number): ErrorInformation {\r\n\t\t//glvn=glvn[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkVar(line, result.position);\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._checkVar(line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkNew(line: string, position: number): ErrorInformation {\r\n\t\t//[[(]lvn[,...][)][,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._pushToken({ name: sysvariable, position: position, type: TokenType.sysvariable, longName, isExcludedVariable: true });\r\n\t\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false, true);\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t}\r\n\t\t\t\tthis._pushToken({ name: sysvariable, position: position, type: TokenType.sysvariable, longName, isExcludedVariable: false });\r\n\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkRead(line: string, position: number): ErrorInformation {\r\n\t\t//(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet starDetected = false;\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult.position++;\r\n\t\t\tstarDetected = true;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tif (line[result.position] === '#') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (result.text !== '') {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} catch {\r\n\t\t\tif (starDetected) {\r\n\t\t\t\tresult.text = 'Variable expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tif (mat = line.substring(result.position).match(strlit)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkSet(line: string, position: number): ErrorInformation {\r\n\t\t//setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tlet isBraced = false;\r\n\t\tif (line[result.position] === '*') { //*lvn=lname\r\n\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tconst savePosition = ++result.position;\r\n\t\t\ttry {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t} catch {\r\n\t\t\t\tif (line[savePosition] !== '$') {\r\n\t\t\t\t\tresult.text = \"Local Variable or Aliascontainer expected\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, savePosition)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tisBraced = true;\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tlet indirectionFound = false\r\n\t\tdo {\r\n\t\t\tindirectionFound = false\r\n\t\t\tif (line[result.position] === '@') {\r\n\t\t\t\tindirectionFound = true\r\n\t\t\t\t//result.position++\r\n\t\t\t\ttry { // Is it SET @VAR?\r\n\t\t\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\t\t\tresult.position = provResult.position;\r\n\t\t\t\t} catch { // It's not Set @VAR, is it Set @Expression?\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t}\r\n\t\t\t\tconst char = line[result.position]\r\n\t\t\t\tif (MumpsLineParser._isEndOfArgument(line, result.position)) {\r\n\t\t\t\t\tif (!isBraced) return result;\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tresult.text = \") expected\"\r\n\t\t\t\t\t\tthrow result\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (char === '=') {\r\n\t\t\t\t\tindirectionFound = false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (char === ',') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^\\$Z?(PIECE|PI|P|EXTRACT|E)\\(/i)) {\r\n\t\t\t\tlet functionname = mat[0].substring(1, mat[0].length - 1).toUpperCase();\r\n\t\t\t\tresult.position += functionname.length + 2\r\n\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\tthis._pushToken({ name: \"$\" + functionname, position: result.position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + funcExpansions[functionname] });\r\n\t\t\t\t\tfunctionname = funcExpansions[functionname];\r\n\t\t\t\t}\r\n\t\t\t\tresult = this._checkFunction(functionname, line, result.position);\r\n\t\t\t} else if (mat = line.substring(result.position).match(isv)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, true);\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',' && isBraced) {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ')' && isBraced) {\r\n\t\t\t\tisBraced = false\r\n\t\t\t\tindirectionFound = false\r\n\t\t\t\tresult.position++\r\n\t\t\t}\r\n\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position) && (isBraced || indirectionFound));\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkTstart(line: string, position: number): ErrorInformation {\r\n\t\t//[([lvn...])|lvn|*|][:keyword|(keyword...)]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ')') {\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t} else {\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (result.position < line.length)\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkView(line: string, position: number): ErrorInformation {\r\n\t\t//keyword[:expr[:...]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\twhile (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWrite(line: string, position: number): ErrorInformation {\r\n\t\t//expr|*intexpr|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult = this._checkWriteSocket(line, result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '?') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWriteSocket(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (mat = line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tconst fname = mat![0].toUpperCase();\r\n\t\t\tif (fname === '/EOF') {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] !== '(') {\r\n\t\t\t\tif (!fname.match(/^\\/(LISTEN|L|WAIT|W)/)) {\r\n\t\t\t\t\tresult.text = fname + ' needs Parameter(s)';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t\tlet maxparams = 99;\r\n\t\t\tif (fname === '/LISTEN' || fname === '/L' || fname === '/WAIT' || fname === '/W') {\r\n\t\t\t\tmaxparams = 1;\r\n\t\t\t} else if (fname === '/TLS') {\r\n\t\t\t\tmaxparams = 4;\r\n\t\t\t}\r\n\t\t\tlet paramCount = 0;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tparamCount++;\r\n\t\t\t\tif (paramCount > maxparams) {\r\n\t\t\t\t\tresult.text = 'More Parameters than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (fname === '/ACCEPT' && paramCount === 1) {\r\n\t\t\t\t\tif (line[result.position] !== '.') {\r\n\t\t\t\t\t\tresult.text = 'Local Variablereference expected (.lvn)';\r\n\t\t\t\t\t\tthrow result\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = this._checkVar(line, ++result.position, false, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (fname !== '/TLS' || paramCount !== 2 || line[result.position] !== \",\") {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing Parameter or \")\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkXecute(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZbreak(line: string, position: number): ErrorInformation {\r\n\t\t//[-]entryref[:[expr][:intexpr]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '-') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZprint(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._checkEntryRef(line, ++result.position, false);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZstep(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\r\n\t\tif (mat = line.substring(result.position).match(/^(INTO|OUTOF|OU|OVER|OV)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid ZSTEP Qualifier';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkCommand(line: string, longcmd: string, code: TmpFunction): ErrorInformation {\r\n\t\tconst para = cmdParams[longcmd];\r\n\t\tlet position = code.pcPosition\r\n\t\tconst postcondPossible = para.postcondition;\r\n\t\tconst argFormat = para.parameter;\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (!postcondPossible && code.mPostCondition !== '') {\r\n\t\t\tthrow { text: 'Poscondition not allowed', position }\r\n\t\t} else if (code.mPostCondition !== '') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\t}\r\n\t\tposition = code.argPosition;\r\n\t\tif (code.mArguments === '') {\r\n\t\t\tif (argFormat === '' || argFormat[0] === '[') {\r\n\t\t\t\treturn { text: '', position }\r\n\t\t\t} else {\r\n\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position }\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.position = position;\r\n\t\tlet argCount = 0;\r\n\t\tdo {\r\n\t\t\targCount++;\r\n\t\t\tswitch (longcmd) {\r\n\t\t\t\tcase 'BREAK':\r\n\t\t\t\t\tresult = this._checkBreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CLOSE':\r\n\t\t\t\t\tresult = this._checkOUC(closekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ELSE':\r\n\t\t\t\t\tif (line !== '') {\r\n\t\t\t\t\t\tthrow { text: 'No Argument expected', position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FOR':\r\n\t\t\t\t\tresult = this._checkFor(line, result.position, argCount);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'GOTO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'HANG':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'IF':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'JOB':\r\n\t\t\t\t\tresult = this._checkJob(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KILL':\r\n\t\t\t\t\tresult = this._checkKill(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LOCK':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MERGE':\r\n\t\t\t\t\tresult = this._checkMerge(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'NEW':\r\n\t\t\t\t\tresult = this._checkNew(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'OPEN':\r\n\t\t\t\t\tresult = this._checkOUC(openkeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'QUIT':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'Quit allows only one Argument'\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\t\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'READ':\r\n\t\t\t\t\tresult = this._checkRead(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SET':\r\n\t\t\t\t\tresult = this._checkSet(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TROLLBACK':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'TROLLBACK allows only one Argument'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TSTART':\r\n\t\t\t\t\tresult = this._checkTstart(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'USE':\r\n\t\t\t\t\tresult = this._checkOUC(usekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'VIEW':\r\n\t\t\t\t\tresult = this._checkView(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WRITE':\r\n\t\t\t\t\tresult = this._checkWrite(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'XECUTE':\r\n\t\t\t\t\tresult = this._checkXecute(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZALLOCATE':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZBREAK':\r\n\t\t\t\t\tresult = this._checkZbreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZCOMPILE':\r\n\t\t\t\t\t// 'abbreviation': 'ZCOM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZDEALLOCATE':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZD',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[nref[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZEDIT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZED',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZGOTO':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, ++result.position, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZG',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHALT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZHALT',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHELP':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZKILL':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZK',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZLINK':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZL',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2][,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZMESSAGE':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\twhile (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'intexpr[:expr2][:...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZPRINT':\r\n\t\t\t\t\t// 'abbreviation': 'ZP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\t\t\t\tresult = this._checkZprint(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZRUPDATE':\r\n\t\t\t\t\t// 'abbreviation': 'ZRUP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSHOW':\r\n\t\t\t\t\t// 'abbreviation': 'ZSH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[:glvn][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkVar(line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSTEP':\r\n\t\t\t\t\t// 'abbreviation': 'ZST',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\t\t\t\tresult = this._checkZstep(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSYSTEM':\r\n\t\t\t\t\t// 'abbreviation': 'ZSY',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTCOMMIT':\r\n\t\t\t\t\t// 'abbreviation': 'ZTC',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTRIGGER':\r\n\t\t\t\t\t// 'abbreviation': 'ZTR',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'gvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, true, false);\r\n\t\t\t\t\tif (!result.globalFound) {\r\n\t\t\t\t\t\tresult.text = 'Global Variable expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWITHDRAW':\r\n\t\t\t\t\t// 'abbreviation': 'ZWI',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWRITE':\r\n\t\t\t\t\t//'abbreviation': 'ZWR',\r\n\t\t\t\t\t//'postcondition': true,\r\n\t\t\t\t\t//'parameter': '[zwrglvn[,...]]'\r\n\t\t\t\t\t//not separately tested because ZWRITE is for debugging and should not appear in normal code\r\n\t\t\t\t\tresult.position += line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresult.position = line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tif (result.position === line.length) {\r\n\t\t\t\t\tif (argFormat !== '' && argFormat[0] !== '[') {\r\n\t\t\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position: result.position }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (line[result.position] !== undefined) {\r\n\t\t\t\tconst char = line[result.position];\r\n\t\t\t\tif (char === \" \" || char === \"\\t\" || char === \";\") { break; }\r\n\t\t\t\tresult.text = 'Unexpected Character \"' + line[result.position] + '\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (result.position < line.length)\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFunction(longfunc: string, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position: position };\r\n\t\tconst params = funcParams[longfunc];\r\n\t\tif (params === undefined) {\r\n\t\t\tresult.text = \"Unknown Function \" + longfunc;\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tconst minArguments = params.minparams !== undefined ? params.minparams : 1;\r\n\t\tconst formats = params.format !== undefined ? params.format.split(',') : undefined;\r\n\t\tlet argCount = 0;\r\n\t\tlongfunc = '$' + longfunc;\r\n\t\tif (minArguments === 0 && line[result.position] === ')') {\r\n\t\t\tresult.position++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tlet format = (formats !== undefined && formats[argCount] !== undefined) ? formats[argCount] : 'expr';\r\n\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\tformat = 'special';\r\n\t\t\t}\r\n\t\t\tif (format === 'glvn' || format === 'gvn' || format === 'glvn(' || format === 'lvn') {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tif (format === 'glvn(' && (!result.indexFound && !result.indirectionFound)) {\r\n\t\t\t\t\tresult.text = 'Variable with Index expected for ' + longfunc;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (format === 'lvn' && result.globalFound) {\r\n\t\t\t\t\tresult.text = 'Local variable expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'entryref') {\r\n\t\t\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\t\t} else if (format === 'expr') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t} else if (format === \"expr|null\") {\r\n\t\t\t\tif (line[result.position] !== \",\") {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'bool') {\r\n\t\t\t\tif (line[result.position] !== '0' && line[result.position] !== '1') {\r\n\t\t\t\t\tresult.text = '0/1 expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'special') {\r\n\t\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Missing Expression';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\targCount++;\r\n\t\t\tconst char = line[result.position];\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (argCount > params.maxparams) {\r\n\t\t\t\t\tresult.text = 'More Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (char === ')') {\r\n\t\t\t\tif (argCount < minArguments) {\r\n\t\t\t\t\tresult.text = 'Less Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tresult.text = 'Unxepected character ';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position));\r\n\r\n\t\treturn result;\r\n\t}\r\n\t// eslint-disable-next-line class-methods-use-this\r\n\tprivate _cutBeforeClosingBrace(line: string, position: number): string {\r\n\t\tlet insideString = false\r\n\t\tfor (let i = position; i < line.length; i++) {\r\n\t\t\tconst char = line[i]\r\n\t\t\tif (char === '\"') insideString = !insideString\r\n\t\t\tif (char === ']' && !insideString) return line.substring(0, i)\r\n\t\t}\r\n\t\treturn line;\r\n\t}\r\n\tprivate _evaluateExpression(exType: number, line: string, position: number, level?: number, pushTokens?: boolean): ErrorInformation {\r\n\t\tlet expressionComplete = false;\r\n\t\tlet startposition = position;\r\n\t\tlevel = level ?? 0;\r\n\t\tpushTokens = pushTokens ?? true\r\n\t\tlet lastExpression = '';\r\n\t\twhile (position < line.length) {\r\n\t\t\tlet char = line.charAt(position);\r\n\t\t\tif (char === '(') {\r\n\t\t\t\tlet subExType = expressiontype.Standard\r\n\t\t\t\tswitch (lastExpression) {\r\n\t\t\t\t\tcase 'ifunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.iArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'exfunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.eArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pattern':\r\n\t\t\t\t\t\tthrow { text: 'Unecpected \"(\"', position };\r\n\t\t\t\t}\r\n\t\t\t\tconst result = this._evaluateExpression(subExType, line, ++position, level + 1, pushTokens);\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = result.position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlastExpression = '';\r\n\t\t\tif (char === ')') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (level > 0) {\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t}\r\n\t\t\t\treturn { text: '', position: position };\r\n\t\t\t}\r\n\t\t\tif (char === '.' && (exType === expressiontype.eArgument || exType === expressiontype.Index)) {\r\n\t\t\t\tposition++;\r\n\t\t\t\tconst evalString = line.substring(position);\r\n\t\t\t\tif (evalString.match(lvn)) {\r\n\t\t\t\t\tconst localname = evalString.match(lvn)![0];\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ type: TokenType.local, name: localname, position: position });\r\n\t\t\t\t\tposition += localname.length;\r\n\t\t\t\t\tchar = line.charAt(position);\r\n\t\t\t\t\tif (char !== ',' && char !== ')') {\r\n\t\t\t\t\t\tthrow { text: 'Variablereference must stand alone', position }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tposition++\r\n\t\t\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\t\t\tstartposition = position;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (exType === expressiontype.Standard || exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tposition++\r\n\t\t\t\texpressionComplete = false;\r\n\t\t\t\tstartposition = position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (expressionComplete) {\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(position).match(binoperator)) {\r\n\t\t\t\t\tconst operator = line.substring(position).match(binoperator)![0];\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ name: operator, position: position, type: TokenType.operator });\r\n\t\t\t\t\tposition += operator.length;\r\n\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\tif (operator === '?' || operator === \"'?\") {\r\n\t\t\t\t\t\tconst result = this._evaluatePattern(line, position);\r\n\t\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tlastExpression = 'pattern';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst evalString = line.substring(position);\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, position);\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = provResult.position;\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (evalString.substring(0, 2) === '$$') {\r\n\t\t\t\t\tposition += 2;\r\n\t\t\t\t\t// eslint-disable-next-line no-ex-assign\r\n\t\t\t\t\tprovResult = this._checkEntryRef(line, position, true, true);\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\tposition = provResult.position;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(nonMfunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(nonMfunction)![0];\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ type: TokenType.nonMfunction, name: functionname, position });\r\n\t\t\t\t\tposition += functionname.length;\r\n\t\t\t\t\tlastExpression = 'exfunction'\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(ifunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(ifunction)![0].substring(1).toUpperCase();\r\n\t\t\t\t\tposition += functionname.length + 2\r\n\t\t\t\t\tlet longName = functionname;\r\n\t\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\t\tlongName = funcExpansions[functionname];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ name: \"$\" + functionname, position: position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + longName });\r\n\t\t\t\t\tconst result = this._checkFunction(longName, line, position);\r\n\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\tlastExpression = '';\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(isv)) {\r\n\t\t\t\t\tconst specialvarname = evalString.match(isv)![0];\r\n\t\t\t\t\tlet longName = specialvarname.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ name: specialvarname, position: position, type: TokenType.sysvariable, longName });\r\n\t\t\t\t\tposition += specialvarname.length\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(numlit) && evalString.match(numlit)![0] !== '') {\r\n\t\t\t\t\tconst numericliteral = evalString.match(numlit)![0];\r\n\t\t\t\t\tthis._pushToken({ name: numericliteral, type: TokenType.number, position });\r\n\t\t\t\t\tposition += numericliteral.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(strlit)) {\r\n\t\t\t\t\tconst stringlit = evalString.match(strlit)![0];\r\n\t\t\t\t\tthis._pushToken({ name: stringlit, type: TokenType.string, position });\r\n\t\t\t\t\tposition += stringlit.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (char.match(unaryoperator)) {\r\n\t\t\t\t\tthis._pushToken({ name: char, type: TokenType.operator, position });\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow { text: 'Unexpected Character ' + char, position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (expressionComplete) {\r\n\t\t\tif (level > 0) {\r\n\t\t\t\tthrow { text: 'Missing \")\"', position }\r\n\t\t\t}\r\n\t\t\treturn { text: '', position }\r\n\t\t} else {\r\n\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t}\r\n\t}\r\n\tprivate _pushToken(token: LineToken) {\r\n\t\tif (this._tokenSaveEnabled) this._tokens.push(token)\r\n\t}\r\n\r\n\t/**\r\n * Checks Mumps-patterns, throws error when error found in pattern\r\n * @param line: Line to be analyzed\r\n * @param position: startposition\r\n * @param level: is used for nested Patterns\r\n * @returns ErrorInformation, text empty when no error found, position is set behind pattern\r\n */\r\n\tprivate _evaluatePattern(line: string, position: number, level?: number): ErrorInformation {\r\n\t\tlet result = { text: '', position }\r\n\t\tlet patternComplete = false;\r\n\t\tif (level === undefined) {\r\n\t\t\tlevel = 0;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (line[position] === '@') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++position);\r\n\t\t\t\tpatternComplete = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position).match(repititionCount)) {\r\n\t\t\t\tconst repCount = line.substring(result.position).match(repititionCount)![0];\r\n\t\t\t\tif (repCount !== '') {\r\n\t\t\t\t\tpatternComplete = false;\r\n\t\t\t\t\tresult.position += repCount.length;\r\n\t\t\t\t\tif (line.substring(result.position).match(patcode)) {\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tresult.position += line.substring(result.position).match(patcode)![0].length;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (line[result.position] === '(') {\r\n\t\t\t\t\t\tresult = this._evaluatePattern(line, ++result.position, level + 1);\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (level > 0) {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (position < line.length)\r\n\t\tif (!patternComplete) {\r\n\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (level > 0) {\r\n\t\t\tresult.text = 'Missing \")\"';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t//Extract M-Commands.\r\n\t//Assumes inputLine has extracted comments/spacing/indentation.\r\n\tprivate static _extractCommands(inputObject: LineObject): LineObject {\r\n\r\n\t\tlet tmpFunction: TmpFunction;\r\n\t\tconst tmpFunctionArray: Array<TmpFunction> = [];\r\n\t\t//Divide Routines and Arguments.\r\n\t\tconst splitLine = this._splitCommandsAndArguments(inputObject);\r\n\t\t//Loop, even is function, odd is arguments.\r\n\t\tlet i = 0;\r\n\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\twhile (i < splitLine.length) {\r\n\t\t\tif (i % 2 === 0) {\r\n\t\t\t\ttmpFunction.mCommand = splitLine[i].command;\r\n\t\t\t\ttmpFunction.cmdPosition = splitLine[i].position;\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmpFunction.mArguments = splitLine[i].command;\r\n\t\t\t\ttmpFunction.argPosition = splitLine[i].position;\r\n\r\n\t\t\t\t//Custom handler for trailing argument spacing.\r\n\t\t\t\t//Go until splitline hits a non empty val.\r\n\t\t\t\tconst ii = i + 1;\r\n\t\t\t\twhile (ii < splitLine.length) {\r\n\t\t\t\t\tif (splitLine[ii].command === \"\") {\r\n\t\t\t\t\t\tsplitLine.splice(ii, 1);\r\n\t\t\t\t\t\t//tmpFunction.mArguments = tmpFunction.mArguments + \" \";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\t//Last command doesn't always require parameter, so if odd number of pairs, push it.\r\n\t\tif (splitLine.length % 2 !== 0) {\r\n\t\t\ttmpFunction.mCommand = splitLine[splitLine.length - 1].command;\r\n\t\t\ttmpFunction.cmdPosition = splitLine[splitLine.length - 1].position;\r\n\t\t\ttmpFunction.mArguments = '';\r\n\t\t\ttmpFunction.argPosition = inputObject.lineExpression!.length;\r\n\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t}\r\n\r\n\r\n\t\t//Extract and output Post Conditionals.\r\n\t\tconst postConditionFunctionArray = MumpsLineParser._extractPostConditional(tmpFunctionArray);\r\n\t\tif (postConditionFunctionArray.length > 0) {\r\n\t\t\tinputObject.lineRoutines = postConditionFunctionArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Comments.\r\n\tprivate static _extractComment(inputObject: LineObject): LineObject {\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\t//Semicolon identifies comments.\r\n\t\tif (inputLine.search(\";\") >= 0) {\r\n\t\t\tlet isInsideString = false;\r\n\t\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\t\t\t\tif (inputLine[i] === \";\") {\r\n\t\t\t\t\tif (!isInsideString) {\r\n\t\t\t\t\t\tinputObject.lineExpression = inputLine.substring(0, i);\r\n\t\t\t\t\t\tinputObject.lineComment = { comment: inputLine.substring(i).substring(1), position: i + inputObject.expressionPosition };\r\n\t\t\t\t\t\treturn inputObject;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Indentation.\r\n\t//Assumes inputLine has extracted comments/spacing.\r\n\tprivate static _extractIndentation(inputObject: LineObject): LineObject {\r\n\r\n\t\tconst lineIndentationArray: string[] = [];\r\n\t\tlet lineIndentation = 0;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tlet spacer = '';\r\n\t\tlet i = 0;\r\n\t\tfor (i = 0; i <= inputLine.length; i++) {\r\n\t\t\tconst char = inputLine[i];\r\n\t\t\tif (char === \".\") {\r\n\t\t\t\tif (lineIndentation > 0) {\r\n\t\t\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\t\t}\r\n\t\t\t\tlineIndentation++;\r\n\t\t\t\tspacer = '';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (char === \" \" || char === \"\\t\") {\r\n\t\t\t\tspacer += char;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (lineIndentation > 0) {\r\n\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition! += i;\r\n\t\t\tinputObject.lineIndentationArray = lineIndentationArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\tprivate static _extractLabel(inputObject: LineObject): LineObject {\r\n\t\tinputObject.lineLabel = '';\r\n\t\tconst inputLine = inputObject.lineExpression;\r\n\t\tinputObject.lineExpression = '';\r\n\t\tif (inputLine.match(label)) {\r\n\t\t\tinputObject.lineLabel = inputLine.match(label)![0];\r\n\t\t}\r\n\t\tconst position = inputObject.lineLabel.length;\r\n\t\tif (position === inputLine.length) {\r\n\t\t\treturn inputObject\r\n\t\t}\r\n\t\tif (!inputLine.charAt(position).match(/[\\s|;]/)) {\r\n\t\t\tinputObject.errorText = 'Unexpected Character' + inputLine.charAt(position);\r\n\t\t\tinputObject.errorPosition = position;\r\n\t\t\treturn inputObject;\r\n\t\t}\r\n\t\tlet i = 0;\r\n\t\tfor (i = position; i <= inputLine.length; i++) {\r\n\t\t\tif (inputLine[i] !== \" \" && inputLine[i] !== \"\\t\") {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tinputObject.lineLeadSpace = inputLine.substring(position, i);\r\n\t\tif (i !== (inputLine.length)) {\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition = i;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\tprivate static _extractPostConditional(tmpFunctionArray: TmpFunction[]): TmpFunction[] {\r\n\t\t//Extracts Post-Conditionals from Routines, used by extractRoutines.\r\n\r\n\t\t//Assign to new variable to truncate Routines.\r\n\t\tconst tmpObject = tmpFunctionArray;\r\n\t\tfor (let i = 0; i < tmpObject.length; i++) {\r\n\t\t\t//Colon indicates Post-Conditionals.\r\n\t\t\tconst tmpIndex = tmpObject[i].mCommand!.indexOf(\":\");\r\n\t\t\tif (tmpIndex > -1) {\r\n\t\t\t\ttmpObject[i].mPostCondition = tmpObject[i].mCommand.substring(tmpIndex + 1);\r\n\t\t\t\ttmpObject[i].mCommand = tmpObject[i].mCommand.substring(0, tmpIndex);\r\n\t\t\t\ttmpObject[i].pcPosition = tmpObject[i].cmdPosition + tmpIndex + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\tprivate static _isEndOfArgument(line: string, position: number): boolean {\r\n\t\tlet isEndOfArgument = false;\r\n\t\tconst char = line[position];\r\n\t\tif (char === undefined || char === \" \" || char === \"\\t\" || char === \";\") { isEndOfArgument = true; }\r\n\t\treturn isEndOfArgument;\r\n\t}\r\n\t/**\r\n * Divde inputString into Label, commands and comments and return corresponding LineObject\r\n * @param inputString\r\n * @returns LineObject\r\n */\r\n\tpublic static parseLine(inputString: string): LineObject {\r\n\r\n\t\tlet tmpObject: LineObject = { lineExpression: inputString, expressionPosition: 0 };\r\n\r\n\t\t//Parsing must be performed sequentially.\r\n\t\ttmpObject = MumpsLineParser._extractLabel(tmpObject);\r\n\t\tif (tmpObject.errorText) {\r\n\t\t\treturn tmpObject;\r\n\t\t}\r\n\t\ttmpObject = MumpsLineParser._extractComment(tmpObject);\r\n\t\ttmpObject = MumpsLineParser._extractIndentation(tmpObject);\r\n\t\ttmpObject = MumpsLineParser._extractCommands(tmpObject);\r\n\r\n\t\t//Line Expression is no longer needed.\r\n\t\ttmpObject.lineExpression = '';\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\t//Divide commands and arguments into array, used by extractRoutines.\r\n\tprivate static _splitCommandsAndArguments(inputObject: LineObject): LineComand[] {\r\n\r\n\t\tconst lineCommands: LineComand[] = [];\r\n\t\tlet tmpCursor = 0;\r\n\t\tlet isInsideString = false;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tconst start = inputObject.expressionPosition!;\r\n\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\r\n\t\t\t//Ensure space isn't quoted.\r\n\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t}\r\n\t\t\t//Flag spaces/tabs as dividers.\r\n\t\t\tif ((inputLine[i] === \" \" || inputLine[i] === \"\\t\") && !isInsideString) {\r\n\t\t\t\t//If has content, push.\r\n\t\t\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t\t//Otherwise, push empty commands.\r\n\t\t\t\t} else if (inputLine.substring(tmpCursor, i).length === 0 && (inputLine.substring(tmpCursor - 1, tmpCursor) === \" \" || inputLine.substring(tmpCursor - 1, tmpCursor) === \"\\t\")) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t}\r\n\t\t\t\ttmpCursor = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst i = inputLine.length;\r\n\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t//Gather empty commands from end of line.\r\n\t\t} else if (i === tmpCursor && (inputLine.substring(i - 1, i) === \" \" || inputLine.substring(i - 1, i) === \"/t\")) {\r\n\t\t\tlineCommands.push({ command: '', position: start + tmpCursor });\r\n\t\t}\r\n\t\treturn lineCommands;\r\n\t}\r\n\r\n\tprivate _splitLabelAndParameters(label: string) {\r\n\t\tif (label.indexOf('(') === -1) {\r\n\t\t\tthis._pushToken({ name: label, position: 0, type: TokenType.label });\r\n\t\t} else {\r\n\t\t\tconst labelparts = label.split('(');\r\n\t\t\tconst labeltext = labelparts[0];\r\n\t\t\tthis._pushToken({ name: labeltext, position: 0, type: TokenType.label });\r\n\t\t\tconst parameters = labelparts[1].split(')')[0];\r\n\t\t\tconst parameterVars = parameters.split(',');\r\n\t\t\tlet position = labeltext.length + 1\t\t// Position = lengths of Label + trailing \"(\"\r\n\t\t\tfor (let i = 0; i < parameterVars.length; i++) {\r\n\t\t\t\tconst parameterLength = parameterVars[i].length\r\n\t\t\t\tif (parameterLength > 0) this._pushToken({ name: parameterVars[i], position, type: TokenType.local });\r\n\t\t\t\tposition += parameterLength + 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n/*\r\nconst test = new MumpsLineParser();\r\nconst dir = \"x:\\\\\";\r\nlet erg: Array<ErrorInformation> = [];\r\nfs.readdir(dir, function (err, files) {\r\n\t//handling error\r\n\tif (err) {\r\n\t\treturn console.log('Unable to scan directory: ' + err);\r\n\t}\r\n\t//listing all files using forEach\r\n\tfiles.forEach(function (file: string) {\r\n\t\tif (file.substring(file.length - 2) === \".m\") {\r\n\t\t\terg = test.checkFile(dir + file);\r\n\t\t\tconsole.log(file);\r\n\t\t\tif (erg.length) {\r\n\t\t\t\tconsole.log(erg);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\nlet test = new MumpsLineParser();\r\nlet expanded = test.expandCompressFile(\"t:\\\\KTEST93.m\", true);\r\nconsole.log(expanded);\r\nlet lines = expanded.split(\"\\n\");\r\nfor (let i = 0; i < lines.length; i++) {\r\n\tconsole.log(test.expandCompressLine(lines[i], false).lineText);\r\n}\r\n\r\nlet result = test.checkLine('\tS VGZR=$E(YDL(2),5,6)-1 S:VGZR=0 VGZR=12_($E(YDL(2),1,4)-1)');\r\nconsole.log(result);\r\n*/\r\nexport { ifunction, isv, MumpsLineParser }","module.exports = require(\"fs\");","import * as vscode from 'vscode';\nimport { MumpsLineParser } from './mumpsLineParser';\nconst parser = new MumpsLineParser;\nexport default function expandCompress(state: vscode.Memento) {\n\tlet doExpand = true;\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst filename = editor.document.fileName;\n\t\tif (state.get(filename + \"_expandState\") === true) {\n\t\t\tdoExpand = false;\n\t\t\tstate.update(filename + \"_expandState\", false);\n\t\t} else {\n\t\t\tstate.update(filename + \"_expandState\", true);\n\t\t}\n\t\tconst document = editor.document.getText();\n\t\tconst lines = document.split(\"\\n\")\n\t\tconst lineCount = lines.length;\n\t\tif (lineCount) {\n\t\t\tconst lastLineLength = lines[lineCount - 1].length;\n\t\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\t\tconst info = parser.expandCompressLine(lines[i], doExpand);\n\t\t\t\tif (info.errorText === '') {\n\t\t\t\t\tlines[i] = info.lineText;\n\t\t\t\t}\n\t\t\t}\n\t\t\teditor.edit(editBuilder => {\n\t\t\t\teditBuilder.replace(new vscode.Range(0, 0, lineCount, lastLineLength), lines.join(\"\\n\"));\n\t\t\t})\n\t\t}\n\t}\n}\n","module.exports = require(\"path\");","module.exports = require(\"fs/promises\");","import * as vscode from 'vscode';\nimport { LineObject, MumpsLineParser } from './mumpsLineParser';\nasync function autoSpaceEnter() {\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst pos = editor.selection.active\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\n\t\tconst parsedLine = MumpsLineParser.parseLine(currentLine);\n\t\tlet newLine = '';\n\t\tif (pos.character !== 0) {\n\t\t\t//check for removing a trailing .\n\t\t\tif ((parsedLine.lineRoutines === undefined || parsedLine.lineRoutines.length === 0) && currentLine.indexOf(\";\") === -1 &&\n\t\t\t\tparsedLine.lineIndentationArray !== undefined && parsedLine.lineIndentationArray.length > 0) {\n\t\t\t\tparsedLine.lineIndentationArray.splice(-1)\n\t\t\t\teditor.edit((editBuilder) => {\n\t\t\t\t\teditBuilder.replace(new vscode.Range(pos.with(pos.line, 0), pos.with(pos.line, currentLine.length)), renderLine(parsedLine))\n\t\t\t\t})\n\t\t\t\t//check for adding indentation to the new line\n\t\t\t} else {\n\t\t\t\tif (parsedLine.lineIndentationArray === undefined) {\n\t\t\t\t\tparsedLine.lineIndentationArray = []\n\t\t\t\t}\n\t\t\t\tif (lineContainsNoParamDo(parsedLine)) {\n\t\t\t\t\tparsedLine.lineIndentationArray.push(\" \")\n\t\t\t\t}\n\t\t\t\tparsedLine.lineRoutines = []\n\t\t\t\tdelete parsedLine.lineComment\n\t\t\t\tdelete parsedLine.lineLabel\n\t\t\t\tnewLine = renderLine(parsedLine);\n\t\t\t}\n\t\t}\n\t\teditor.edit((editBuilder) => {\n\t\t\teditBuilder.insert(pos, \"\\n\" + newLine);\n\t\t})\n\t}\n}\n\nfunction lineContainsNoParamDo(parsed: LineObject) {\n\tconst cmds = parsed.lineRoutines;\n\tif (cmds) {\n\t\tfor (let i = 0; i < cmds.length; i++) {\n\t\t\tif (cmds[i].mCommand.match(/(d|do)/i) && !cmds[i].mArguments) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nasync function autoSpaceTab() {\n\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst pos = editor.selection.active\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\n\t\tconst parsed = MumpsLineParser.parseLine(currentLine);\n\t\tif ((parsed.lineRoutines === undefined || parsed.lineRoutines.length === 0) &&\n\t\t\tcurrentLine.indexOf(\";\") === -1 && parsed.lineIndentationArray !== undefined &&\n\t\t\tparsed.lineIndentationArray.length > 0) {\n\t\t\tparsed.lineIndentationArray.push(\" \")\n\t\t\teditor.edit((editBuilder) => {\n\t\t\t\tif (currentLine.charAt(pos.character - 1) === \" \") {\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \". \")\n\t\t\t\t} else {\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \" . \")\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\teditor.edit((eb) => {\n\t\t\t\teb.insert(pos, \"\\t\")\n\t\t\t})\n\t\t}\n\t}\n}\nfunction renderLine(inputObject: LineObject): string {\n\n\tlet tmpLine = \"\";\n\n\t//Rendering must be performed sequentially.\n\ttmpLine = appendLabel(inputObject, tmpLine);\n\ttmpLine = appendIndentation(inputObject, tmpLine);\n\ttmpLine = appendRoutines(inputObject, tmpLine);\n\ttmpLine = appendComment(inputObject, tmpLine);\n\n\treturn tmpLine;\n\n}\nfunction appendLabel(inputObject: LineObject, inputLine: string) {\n\tif (inputObject.lineLabel) {\n\t\tinputLine = inputLine + inputObject.lineLabel;\n\t}\n\tif (inputObject.lineLeadSpace) {\n\t\tinputLine = inputLine + inputObject.lineLeadSpace;\n\t}\n\treturn inputLine;\n}\n\n//Append Indentation to Label/Spacing.\nfunction appendIndentation(inputObject: LineObject, inputLine: string) {\n\tlet tmpIndentation = \"\";\n\tif (inputObject.lineIndentationArray) {\n\t\tif (inputObject.lineIndentationArray.length > 0) {\n\t\t\tfor (const i in inputObject.lineIndentationArray) {\n\t\t\t\ttmpIndentation = tmpIndentation + \".\" + inputObject.lineIndentationArray[i];\n\t\t\t}\n\t\t\tinputLine = inputLine + tmpIndentation;\n\t\t}\n\t}\n\treturn inputLine;\n}\n\n//Append Routines to Label/Spacing/Indentation.\nfunction appendRoutines(inputObject: LineObject, inputLine: string) {\n\tif (inputObject.lineRoutines) {\n\t\tfor (const i in inputObject.lineRoutines) {\n\t\t\tif (inputObject.lineRoutines[i].mCommand || inputObject.lineRoutines[i].mCommand === \"\") {\n\t\t\t\t//Leave off interval spacing for first Routine.\n\t\t\t\tif (i === \"0\") {\n\t\t\t\t\tinputLine = inputLine + inputObject.lineRoutines[i].mCommand;\n\t\t\t\t} else {\n\t\t\t\t\tinputLine = inputLine + \" \" + inputObject.lineRoutines[i].mCommand;\n\t\t\t\t}\n\t\t\t\t//Append Post-Conditional.\n\t\t\t\tif (inputObject.lineRoutines[i].mPostCondition) {\n\t\t\t\t\tinputLine = inputLine + \":\" + inputObject.lineRoutines[i].mPostCondition;\n\t\t\t\t}\n\t\t\t\t//Append Arguments.\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(inputObject.lineRoutines[i], \"mArguments\")) {\n\t\t\t\t\tinputLine = inputLine + \" \" + inputObject.lineRoutines[i].mArguments;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn inputLine;\n}\n\n//Append Comment.\nfunction appendComment(inputObject: LineObject, inputLine: string) {\n\tif (Object.prototype.hasOwnProperty.call(inputObject, \"lineComment\")) {\n\t\tinputLine = inputLine + \";\" + inputObject.lineComment;\n\t}\n\treturn inputLine;\n}\n\nexport { autoSpaceTab, autoSpaceEnter };","import * as vscode from 'vscode';\nimport MumpsParseDb from './mumpsParseDb';\nimport { TokenType } from './mumpsLineParser';\nimport { isLintingFile } from './mumpsLinter';\nexport default class MumpsCodeActionProvider implements vscode.CodeActionProvider {\n\tprivate _document: vscode.TextDocument | null = null\n\tprivate _actualDiagnostic: vscode.Diagnostic\n\tprivate _actualParameter: string\n\tprivate _parseDb: MumpsParseDb\n\tprovideCodeActions(\n\t\tdocument: vscode.TextDocument,\n\t\trange: vscode.Range,\n\t\tcontext: vscode.CodeActionContext,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\ttoken: vscode.CancellationToken\n\t): vscode.ProviderResult<(vscode.Command | vscode.CodeAction)[]> {\n\t\tif (!isLintingFile(document.uri.fsPath)) {\n\t\t\tthis._parseDb = MumpsParseDb.getInstance(document)\n\t\t\tconst diagnostics = context.diagnostics;\n\t\t\tconst codeActions: vscode.CodeAction[] = diagnostics.map((diagnostic) => {\n\t\t\t\tlet fix: vscode.CodeAction = new vscode.CodeAction('No Solution', vscode.CodeActionKind.Empty);\n\t\t\t\tif (diagnostic.code) {\n\t\t\t\t\tconst parts = diagnostic.code.toString().split(\":\")\n\t\t\t\t\tconst errorCode = parts[0]\n\t\t\t\t\tthis._actualParameter = parts[1]\n\t\t\t\t\tthis._document = document\n\t\t\t\t\tthis._actualDiagnostic = diagnostic\n\t\t\t\t\tswitch (errorCode) {\n\t\t\t\t\t\tcase \"VarAlreadyNewed\":\n\t\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"NewedButNotUsed\":\n\t\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"NewHidesParam\":\n\t\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"VarNotNewed\":\n\t\t\t\t\t\t\tfix = this._varNotNewed()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst lineTokens = this._parseDb.getLineTokens(range.end.line)\n\t\t\t\tif (lineTokens.length > 1 && lineTokens[lineTokens.length - 1].longName === \"SET\" && lineTokens[lineTokens.length - 2].longName === \"FOR\") {\n\t\t\t\t\tconst shortNames: boolean = lineTokens[lineTokens.length - 1].name.length === 1;\n\t\t\t\t\tconst isUppercase: boolean = lineTokens[lineTokens.length - 1].name[0] === \"S\"\n\t\t\t\t\tlet indentation = 0\n\t\t\t\t\tif (lineTokens[0].type === TokenType.indentation) {\n\t\t\t\t\t\tindentation = lineTokens[0].name.length;\n\t\t\t\t\t}\n\t\t\t\t\tfix.title = \"Create $ORDER-Loop\";\n\t\t\t\t\tfix.kind = vscode.CodeActionKind.QuickFix;\n\t\t\t\t\tfix.command = {\n\t\t\t\t\t\tcommand: \"mumps.generateForLoop\",\n\t\t\t\t\t\ttitle: \"Create $ORDER-Loop\",\n\t\t\t\t\t\targuments: [document, range, shortNames, isUppercase, indentation]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn fix;\n\t\t\t});\n\n\t\t\treturn codeActions;\n\t\t}\n\t}\n\tprivate _removeNewVariable(): vscode.CodeAction {\n\t\tconst fix = new vscode.CodeAction('Remove variable', vscode.CodeActionKind.QuickFix)\n\t\tfix.edit = new vscode.WorkspaceEdit()\n\t\tconst uri = this._document?.uri\n\t\tconst diagRange = this._actualDiagnostic.range\n\t\tconst line = diagRange.start.line\n\t\tlet startPosition = diagRange.start.character\n\t\tlet endPosition = diagRange.end.character\n\t\tconst tokens = this._parseDb.getLineTokens(line)\n\t\tconst lineContent = this._parseDb.getLine(line)\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tconst token = tokens[i]\n\t\t\tconst positionAfterToken = token.position + token.name.length\n\t\t\tif (token.position === startPosition) {\n\t\t\t\tif (lineContent[startPosition - 1] === \" \") { //First NEW argument or single argument\n\t\t\t\t\tif (lineContent[positionAfterToken] === \",\") {\n\t\t\t\t\t\tendPosition++\n\t\t\t\t\t} else { //Single NEW argument - delete NEW complete\n\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tif (tokens[j].type === TokenType.keyword && tokens[j].longName === \"NEW\") {\n\t\t\t\t\t\t\t\tstartPosition = tokens[j].position\n\t\t\t\t\t\t\t\tif (i === tokens.length) { //NEW argument is last token in the line\n\t\t\t\t\t\t\t\t\twhile (startPosition > 0) {\n\t\t\t\t\t\t\t\t\t\tif (/\\s/.test(lineContent[startPosition - 1])) {\n\t\t\t\t\t\t\t\t\t\t\tstartPosition--\n\t\t\t\t\t\t\t\t\t\t} else break\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (positionAfterToken < lineContent.length && lineContent[positionAfterToken] === \" \") endPosition++\n\t\t\t\t\t}\n\t\t\t\t} else { //not the first NEW argument\n\t\t\t\t\tif (lineContent[startPosition - 1] === \",\") {\n\t\t\t\t\t\tstartPosition--\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfix.edit.replace(uri!, new vscode.Range(\n\t\t\tnew vscode.Position(line, startPosition),\n\t\t\tnew vscode.Position(line, endPosition)\n\t\t), \"\")\n\t\treturn fix;\n\t}\n\tprivate _varNotNewed(): vscode.CodeAction {\n\t\tconst fix = new vscode.CodeAction('Add Variable to NEW-Statement', vscode.CodeActionKind.QuickFix);\n\t\tfix.edit = new vscode.WorkspaceEdit();\n\t\tconst diagnostic = this._actualDiagnostic\n\t\tconst line = diagnostic.range.start.line\n\t\tconst uri = this._document?.uri\n\t\tconst subroutineStartLine = this._getSubroutineStart(line)\n\t\tif (subroutineStartLine === line) {\n\t\t\tconst lineContent = this._parseDb.getLine(line)\n\t\t\tconst tokens = this._parseDb.getLineTokens(line)\n\t\t\tlet j = 1\n\t\t\tfor (; j < tokens.length; j++) {\n\t\t\t\tif (tokens[j].type !== TokenType.local) {\n\t\t\t\t\tj--\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst bracketPosition = tokens[j].position + tokens[j].name.length\n\t\t\tlet endReplace = bracketPosition + 1;\n\t\t\tif (/\\s/.test(lineContent[bracketPosition + 1])) endReplace++\n\t\t\tconst range = new vscode.Range(new vscode.Position(line, bracketPosition + 1), new vscode.Position(line, endReplace))\n\t\t\tfix.edit.replace(uri!, range, \"\\n\\tNEW \" + this._actualParameter + \"\\n\\t\")\n\t\t} else {\n\t\t\tfix.edit = this._getfixedNew(subroutineStartLine + 1, uri!, fix.edit)\n\t\t}\n\t\treturn fix;\n\t}\n\tprivate _getSubroutineStart(line: number): number {\n\t\tfor (let i = line; i >= 0; i--) {\n\t\t\tconst tokens = this._parseDb.getLineTokens(i);\n\t\t\tif (tokens.length > 0 &&\n\t\t\t\ttokens[0].type === TokenType.label &&\n\t\t\t\ttokens.length > 1 &&\n\t\t\t\ttokens[1].type === TokenType.local) { //Subroutine with parameters\n\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\tprivate _getfixedNew(line: number, uri: vscode.Uri, edit: vscode.WorkspaceEdit): vscode.WorkspaceEdit {\n\t\tconst lineCount = this._parseDb.getLineCount()\n\t\tlet i = line\n\t\tlet varStartPosition = 0\n\t\tconst variables: string[] = []\n\t\tfor (; i < lineCount; i++) {\n\t\t\tconst tokens = this._parseDb.getLineTokens(i)\n\t\t\tif (tokens.length === 0) continue\n\t\t\tif (tokens[0].type === TokenType.comment) continue\n\t\t\tif (tokens[0].type === TokenType.keyword && tokens[0].longName === \"NEW\" && tokens[0].isPostconditioned === false) {\n\t\t\t\tlet j = 1\n\t\t\t\tfor (; j < tokens.length; j++) {\n\t\t\t\t\tif (tokens[j].type !== TokenType.local) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (j == 1) varStartPosition = tokens[j].position\n\t\t\t\t\tvariables.push(tokens[j].name)\n\t\t\t\t}\n\t\t\t\tvariables.push(this._actualParameter)\n\t\t\t\tvariables.sort()\n\t\t\t\tconst varString = variables.join(\",\")\n\t\t\t\tconst startPosition = new vscode.Position(i, varStartPosition)\n\t\t\t\tconst endPosition = new vscode.Position(i, tokens[j - 1].position + tokens[j - 1].name.length)\n\t\t\t\tedit.replace(uri, new vscode.Range(startPosition, endPosition), varString)\n\t\t\t\treturn edit\n\t\t\t} else break\n\t\t}\n\t\tedit.insert(uri!, new vscode.Position(i, 0), \"\\tNEW \" + this._actualParameter + \"\\n\")\n\t\treturn edit\n\t}\n\tpublic generateForLoop(document: vscode.TextDocument, range: vscode.Range, shortNames: boolean, isUppercase: boolean, indentation: number): void {\n\t\tvscode.window.showInputBox({ prompt: \"Enter loop variable including indices:\" }).then((variableName) => {\n\t\t\tif (variableName) {\n\t\t\t\tthis._parseDb = MumpsParseDb.getInstance(document)\n\t\t\t\tconst variableParts = variableName.split(\"(\");\n\t\t\t\tif (variableParts.length === 2) {\n\t\t\t\t\tlet forToken = \"for\"\n\t\t\t\t\tlet setToken = \"set\"\n\t\t\t\t\tlet orderToken = \"$order(\"\n\t\t\t\t\tlet quitToken = \"quit\"\n\t\t\t\t\tlet doToken = \"do\"\n\t\t\t\t\tif (shortNames) {\n\t\t\t\t\t\tforToken = \"f\"\n\t\t\t\t\t\tsetToken = \"s\"\n\t\t\t\t\t\torderToken = \"$o(\"\n\t\t\t\t\t\tquitToken = \"q\"\n\t\t\t\t\t\tdoToken = \"d\"\n\t\t\t\t\t}\n\t\t\t\t\tif (isUppercase) {\n\t\t\t\t\t\tforToken = forToken.toUpperCase();\n\t\t\t\t\t\tsetToken = setToken.toUpperCase();\n\t\t\t\t\t\torderToken = orderToken.toUpperCase();\n\t\t\t\t\t\tquitToken = quitToken.toUpperCase();\n\t\t\t\t\t\tdoToken = doToken.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tconst variableStart = variableParts[0] + \"(\";\n\t\t\t\t\tconst indices = variableParts[1].split(\",\");\n\t\t\t\t\tconst indexCount = indices.length\n\t\t\t\t\tlet bracketCounter = 0;\n\t\t\t\t\tfor (const char of indices[indexCount - 1]) {\n\t\t\t\t\t\tif (char === \"(\") {\n\t\t\t\t\t\t\tbracketCounter++;\n\t\t\t\t\t\t} else if (char === \")\") {\n\t\t\t\t\t\t\tbracketCounter--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bracketCounter < 0) {\n\t\t\t\t\t\tindices[indexCount - 1] = indices[indexCount - 1]!.slice(0, -1)\n\t\t\t\t\t}\n\t\t\t\t\tconst startIndex = this.getStartVariable(range.end.line, indices);\n\t\t\t\t\tlet forLoop = \" \" + indices[startIndex] + \"=\" + orderToken + variableStart\n\t\t\t\t\tfor (let i = 0; i <= startIndex; i++) {\n\t\t\t\t\t\tforLoop += indices[i]\n\t\t\t\t\t\tif (i < startIndex) forLoop += \",\"\n\t\t\t\t\t}\n\t\t\t\t\tforLoop += \")) \" + quitToken + \":\" + indices[0] + '=\"\"  ' + doToken + \"\\n\";\n\t\t\t\t\tif (indexCount > startIndex + 1) {\n\t\t\t\t\t\tfor (let i = startIndex + 1; i < indexCount; i++) {\n\t\t\t\t\t\t\tforLoop += \"\\t\" + \". \".repeat(i - startIndex + indentation) + setToken + \" \" + indices[i] + '=\"\" ' + forToken + \"  \" +\n\t\t\t\t\t\t\t\tsetToken + \" \" + indices[i] + \"=\" + orderToken + variableStart + indices[0] + \",\"\n\t\t\t\t\t\t\tfor (let j = 1; j <= i; j++) {\n\t\t\t\t\t\t\t\tforLoop += indices[j];\n\t\t\t\t\t\t\t\tif (j < i) { forLoop += \",\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tforLoop += \")) \" + quitToken + \":\" + indices[i] + '=\"\"  ' + doToken + \"\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tforLoop += \"\\t\" + \". \".repeat(indexCount - startIndex + indentation)\n\t\t\t\t\t}\n\t\t\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\t\t\tif (!editor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst line = document.lineAt(range.end.line);\n\t\t\t\t\tconst lineText = line.text.trimEnd()\n\n\t\t\t\t\teditor.edit((editBuilder) => {\n\t\t\t\t\t\teditBuilder.replace(line.range, lineText + forLoop);\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t// Setze den Cursor an das Ende des eingefügten Textes\n\t\t\t\t\t\tconst newEndPosition = new vscode.Position(range.end.line + indexCount - startIndex, 99);\n\t\t\t\t\t\teditor.selection = new vscode.Selection(newEndPosition, newEndPosition);\n\t\t\t\t\t\teditor.revealRange(new vscode.Range(newEndPosition, newEndPosition));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\tprivate getStartVariable(startLine: number, indices: string[]): number {\n\t\tlet startIndex = 0\n\t\tconst lineTokens = this._parseDb.getLineTokens(startLine)\n\t\tconst tokenCount = lineTokens.length\n\t\tfor (let i = tokenCount - 3; i >= 0; i--) {\n\t\t\tif (lineTokens[i].longName === \"SET\") {\n\t\t\t\tfor (let j = i + 1; j < tokenCount - 2; j++) {\n\t\t\t\t\tif (lineTokens[j].type === TokenType.local) {\n\t\t\t\t\t\tstartIndex = indices.indexOf(lineTokens[j].name)\n\t\t\t\t\t\tif (startIndex === -1) {\n\t\t\t\t\t\t\tstartIndex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLine > 0) {\n\t\t\tconst lineTokens = this._parseDb.getLineTokens(startLine - 1)\n\t\t\tconst tokenCount = lineTokens.length\n\t\t\tfor (let i = tokenCount - 2; i >= 0; i--) {\n\t\t\t\tif (lineTokens[i].longName === \"SET\") {\n\t\t\t\t\tfor (let j = i + 1; j < tokenCount - 1; j++) {\n\t\t\t\t\t\tif (lineTokens[j].type === TokenType.local) {\n\t\t\t\t\t\t\tstartIndex = indices.indexOf(lineTokens[j].name)\n\t\t\t\t\t\t\tif (startIndex === -1) {\n\t\t\t\t\t\t\t\tstartIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn startIndex\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["module","exports","require","MUMPSDIAGNOSTICS","vscode","languages","createDiagnosticCollection","MumpsDebugSession","DebugSession","super","_variableHandles","Handles","_variableBases","_configurationDone","Subject","_localScope","this","create","_systemScope","setDebuggerLinesStartAt1","setDebuggerColumnsStartAt1","_program","_mconnect","MumpsConnect","on","sendEvent","StoppedEvent","THREAD_ID","e","filePosition","debug","activeDebugConsole","append","file","line","appendLine","bp","BreakpointEvent","verified","id","TerminatedEvent","initializeRequest","response","body","supportsConfigurationDoneRequest","supportsEvaluateForHovers","supportsDataBreakpoints","supportsConditionalBreakpoints","supportsCompletionsRequest","completionTriggerCharacters","supportsCancelRequest","supportsBreakpointLocationsRequest","supportsExceptionInfoRequest","supportsRestartRequest","sendResponse","InitializedEvent","configurationDoneRequest","args","notify","launchRequest","wait","setLocalRoutinesPath","localRoutinesPath","init","hostname","port","window","activeTextEditor","document","updateDiagnostics","MumpsGlobalProvider","setMconnect","program","start","stopOnEntry","OutputEvent","success","message","setBreakPointsRequest","path","source","clearBreakpoints","bpArgs","breakpoints","actualBreakpoints","setBreakPoint","requestBreakpoints","errorMessage","Error","String","threadsRequest","threads","Thread","stackTraceRequest","startFrame","endFrame","levels","stk","stack","stackFrames","frames","map","f","StackFrame","index","name","createSource","convertDebuggerLineToClient","totalFrames","count","length","scopesRequest","scopes","Scope","variablesRequest","variables","insertVariable","varReference","variablesReference","varId","get","varObject","getVariables","VariableType","system","varname","push","type","value","varparts","split","indexCount","parseInt","pop","varBase","join","local","lastVar","lastRef","actualVar","varAnalyze","undefined","_checkVars","bases","dummyVar","returnVar","actualReference","content","continueRequest","continue","nextRequest","step","stepInRequest","stepOutRequest","evaluateRequest","context","varReply","getSingleVar","expression","result","includes","restartRequest","sourceLines","readFileSync","toString","checkRoutine","showErrorMessage","restart","disconnectRequest","disconnect","filePath","Source","basename","convertDebuggerPathToClient","exceptionInfoRequest","statVariable","status","trashlength","description","substring","exceptionId","breakMode","details","typeName","indexcount","klammerpos","indexOf","countKomma","i","onDidChangeTreeData","_onDidChangeTreeData","event","getInstance","instance","refresh","fire","search","node","searchFor","globalName","showInputBox","title","placeHolder","searchNode","GlobalNode","TreeItemCollapsibleState","None","getChildren","trailingPara","slice","keys","forEach","key","isNaN","parseFloat","ending","Expanded","mconnect","getTreeItem","element","getMoreNodes","globalNodes","nodes","contextValue","getGlobals","variable","isCollapsed","hasChildren","Collapsed","moreToFollow","Promise","resolve","EventEmitter","TreeItem","constructor","collapsibleState","label","_linetokens","_subroutines","editor","languageId","parseDb","getDocumentTokens","errors","getDocumentErrors","errorFound","_newSortedLines","lineCount","text","_lookforNextSubroutineEnd","startSortLine","startSubroutine","_generateSubroutineInfo","Object","subroutineNames","sort","subroutine","startLine","endLine","lineAt","lastLineLength","edit","editBuilder","replace","Range","tokens","subroutineEndFound","j","token","TokenType","indentation","keyword","command","longName","isPostconditioned","hasPostcondition","k","argPostcondition","labelExists","QuitState","symbols","collection","_indentationLevels","_errorInformation","_diags","_variablesToBeIgnored","_enableVariableCheck","_enableUnreachableCodeWarning","_labelTable","Set","_routine","parameters","_level","_lineWithDo","_isBehindQuit","_startUnreachable","_activeSubroutine","_collection","isLintingFile","fileName","startLintingFile","_parseDb","_uri","uri","configuration","workspace","getConfiguration","mumps","variablesToBeIgnoredAtNewCheck","enableVariableCheck","warnIfCodeIsUnreachable","_startUpdate","getindentationLevels","Array","fill","noQuit","delete","_generateLabelTable","errorInformation","_addWarning","position","DiagnosticSeverity","_checkLine","_addSymbol","analyzeSubroutine","set","updateFileDiagnostics","fileContent","options","fsPath","getFileInstance","checkNEWs","checkUnreachable","routine","code","_varStates","_levelExclusiveNew","level","parameter","isParameter","parameterPosition","newLevel","_reduceindentationLevel","getLine","isArray","anyVariablesNewed","containsExclusions","_checkNewed","sysvariable","isExcludedVariable","varName","varState","isExcluded","newedAtLevel","newedAtLine","newedAtPostion","Warning","_checkVariableUsage","state","isUsed","_isIgnoredVariable","isNewed","startPosition","len","severity","endline","endPosition","range","Position","ifFlag","newindentationLevel","expectedLevel","_removeQuits","_getindentationPosition","tokenId","comment","match","ignoreVarsCommentString","ignoredVariables","variableName","trim","concat","_checkUnreachable","hasArguments","entryref","_labelExists","exists_not","behindLevelQuit","behindQuit","exfunction","setUnreachable","some","clear","lineTokens","labelName","add","startsWith","convertMumpsPosition","exists","has","isIgnoredVariable","RegExp","test","splice","found","memLine","memPosition","methodRange","Location","SymbolInformation","SymbolKind","Function","defineProperty","trimLastNewline","LogOutputEvent","logger","Logger","LogLevel","internalLogger_1","debugSession_1","_pendingLogQ","log","msg","Log","_write","verbose","Verbose","warn","Warn","error","dispose","_currentLogger","disposeP","setup","consoleMinLogLevel","_logFilePath","prependTimestamp","logFilePath","_logFilePathFromInit","then","logQ","item","logCallback","logToConsole","InternalLogger","str","MUMPS_MODE","language","scheme","mumpsDiagnostics","storage","storageUri","fs","existsSync","mkdirSync","dbFile","subscriptions","registerCompletionItemProvider","wsState","workspaceState","statusBarItem","createStatusBarItem","StatusBarAlignment","Left","tooltip","hide","commands","registerCommand","autoSpaceEnter","autoSpaceTab","entryRef","globalDirectoryProvider","shortNames","isUppercase","mumpsCodeActionProvider","generateForLoop","cancellationTokenSource","cancel","userOptions","config","picked","selectedOptions","showQuickPick","canPickMany","option","update","ConfigurationTarget","Workspace","askUserForLintOptions","CancellationTokenSource","show","lintAllFiles","showInformationMessage","registerDebugConfigurationProvider","registerDebugAdapterDescriptorFactory","InlineDebugAdapterFactory","registerHoverProvider","registerDefinitionProvider","registerEvaluatableExpressionProvider","registerSignatureHelpProvider","registerDocumentSymbolProvider","registerDocumentSemanticTokensProvider","MumpsHighlighter","SemanticTokens","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerReferenceProvider","registerFoldingRangeProvider","registerCodeActionsProvider","registerTreeDataProvider","onDidChangeActiveTextEditor","triggerUpdateDiagnostics","onDidChangeTextDocument","onDidOpenTextDocument","workspaceFolders","timeout","createDebugAdapterDescriptor","DebugAdapterInlineImplementation","clearTimeout","setTimeout","removeLintFileFlag","resolveDebugConfiguration","folder","request","lintingFiles","diagnosticsCollection","lintOptions","diagnosticsProvider","processedFiles","totalFiles","lintPromises","isCancellationRequested","mumpsFiles","findFiles","RelativePattern","readFile","toFixed","all","LoggingDebugSession","obsolete_logFilePath","obsolete_debuggerLinesAndColumnsStartAt1","obsolete_isServer","inStream","outStream","_isServer","objectToLog","data","doNotLogOutput","output","JSON","stringify","sendRequest","cb","dispatchRequest","arguments","tokentypes","SemanticTokensLegend","provideDocumentSemanticTokens","documentTokens","tokensBuilder","SemanticTokensBuilder","t","typeString","isUnreachable","build","runDebugAdapter","Net","debugSession","process","argv","val","array","portMatch","exec","console","createServer","socket","session","setRunAsServer","listen","shutdown","stdin","stdout","waiters","prototype","self","waiter","promise","resolved","noRemove","pos","isFinite","notifyAll","definitionsArray","provideDefinition","MumpsTokenHelper","getTokenRefLocation","parser","MumpsLineParser","definitions","Uri","EXTENSIONS","cache","addDefinition","definition","abbreviation","_document","_position","_getText","getText","getTokenSignature","myToken","_getFunctionToken","ifunction","getTokenData","help","SignatureHelp","signatures","convertDefinition","activeSignature","activeParameter","_calculateActiveParameter","character","getTokenHoverInfo","getTokenAt","snippet","Hover","commentText","lineText","parametersStartIndex","insertIndex","active","depth","isInsideString","char","charAt","tokendata","location","functionName","functionType","matches","toUpperCase","assign","locationInfo","getPositionForLabel","_extractDefinition","optional","ParameterInformation","returns","signature","SignatureInformation","fileUri","nakedLabel","offset","labelLine","fullPath","extension","extendedPath","lines","labelLength","reverse","labelLines","parameterNames","parametersByName","param","paramDescription","provideSignatureHelp","ProtocolServer","ee","messages_1","Emitter","_event","listener","thisArg","_listener","_this","call","hasListener","_sendMessage","_sequence","_pendingRequests","Map","onDidSendMessage","handleMessage","clb","request_seq","_isRunningInline","_writableStream","_rawData","Buffer","alloc","_handleData","_emitEvent","Event","resume","stop","end","_send","seq","timer","Response","emit","typ","json","write","byteLength","_contentLength","parse","idx","TWO_CRLF","pair","MumpsParseDb","_lines","_indentationLevel","noDiagnostics","_documentName","version","_documentVersion","updateData","updateFromFileData","analyzeLines","getindentationLevel","getLineTokens","getLineCount","unreachable","connectState","_socket","Socket","_breakpointId","_logging","_singleVar","_singleVarContent","_lastError","_commandQueue","_connectState","disconnected","_readedData","_mVars","_globals","_mStack","_activeBreakpoints","_breakPoints","_errorLines","_hints","internals","checkEvents","_hostname","_port","reject","connect","_log","executeCommand","waitingforStart","chunk","n","processLine","vartype","waitingForVars","waitingForBreakpoints","waitingForSingleVar","waitingForErrorReport","waitingForHints","waitingForGlobals","variableType","verifyBreakpoints","waitingForSingleVarContent","indicator","isDefined","writeln","shift","unshift","sendBreakpoint","onOff","condition","stopAtStart","fileposition","Math","min","confirmedBreakpoints","breakpoint","newBreakpoint","existingBreakpoint","find","clearBreakPoint","bps","findIndex","merk","internalBp","normalizeDrive","parts","toLowerCase","searchInGlobal","gblsCompleteListener","removeListener","ErrorreportReceived","errorLines","filter","searchLabel","lineInfo","analyzeLine","reply","varType","SingleVarReceived","singleVar","singleVarContent","mumpsposition","mumpsstatus","positionstring","showNotFound","getLocalRoutinesPath","endsWith","getWworkspaceFolder","filecontent","startlabel","labelRegexp","localLabelRegexp","labelFound","ln","LineStatus","labeldb","_labelsReady","_dbfile","_refreshLabelDB","provideCompletionItems","parsed","lineStatus","noJumplabel","startString","lineRoutines","cmd","mPostCondition","pcPosition","lastIndex","lastIndexOf","jumplabel","mArguments","argPosition","mCommand","getLineStatus","parseLine","_refreshLocalLabels","completionItems","replaceRange","_findLabel","db","labels","routines","writeFileSync","err","_labelDB","dbChanged","files","_filesToCheck","stat","stats","_checkReady","ms","mtimeMs","size","_refreshFileLabels","writeFile","existingLabels","existingLabelsMap","labelsinDocumentChanged","firstLineLabel","labelMatch","existingLabel","updatedLabels","labelItem","startstring","list","hitlist","localLabels","getLabels","sortText","suchstring","routinepart","detail","Message","provideReferences","searchType","searchToken","externalLabel","docLines","foundPosition","extPosition","getallLabelReferences","global","filesToCheck","provideHover","InsertPosition","selection","with","translate","insert","makeSignature","DIVIDERLINE","Signature","parameterString","ErrorDestination","CompletionItem","Module","Breakpoint","Variable","MemoryEvent","InvalidatedEvent","ProgressEndEvent","ProgressUpdateEvent","ProgressStartEvent","CapabilitiesEvent","LoadedSourceEvent","ModuleEvent","ThreadEvent","ContinuedEvent","ExitedEvent","enumerable","loggingDebugSession_1","handles_1","formatDocumentLine","lineNumber","textEdits","TextEdit","endSpace","replacementString","dotPosition","dotCount","spaceCount","provideDocumentFormattingEdits","provideDocumentRangeFormattingEdits","_foldingRanges","provideFoldingRanges","_generateFoldingInfo","_separateCommentsandCode","subroutineName","commentStart","commentLines","MumpsEvalutableExpressionProvider","provideEvaluatableExpression","lineContent","getExpression","EvaluatableExpression","logger_1","getFormattedTimeString","d","Date","_padZeroes","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","minDesiredLength","numberToPad","repeat","isServer","beforeExitCallback","_logCallback","_logToConsole","_minLogLevel","disposeCallback","signal","exit","_prependTimestamp","isAbsolute","handleError","sendLog","promises","mkdir","dirname","recursive","_logFileStream","createWriteStream","logDateTime","setupShutdownListeners","timeAndDateStamp","getUTCFullYear","getUTCMonth","getUTCDate","removeShutdownListeners","Stop","logFn","endsInNewline","substr","startHandle","START_HANDLE","_handleMap","_nextHandle","reset","handle","dflt","protocol_1","runDebugAdapter_1","url_1","origin","sourceReference","adapterData","reference","expensive","nm","src","col","column","ref","indexedVariables","namedVariables","setId","reason","threadId","exceptionText","allThreadsContinued","exitCode","category","capabilities","progressId","areas","stackFrameId","memoryReference","linesAndColumnsStartAt1","_debuggerLinesStartAt1","_debuggerColumnsStartAt1","_debuggerPathsAreURIs","_clientLinesStartAt1","_clientColumnsStartAt1","_clientPathsAreURIs","setDebuggerPathFormat","format","enable","run","sendErrorResponse","codeOrMessage","dest","User","showUser","Telemetry","sendTelemetry","formatPII","runInTerminalRequest","linesStartAt1","columnsStartAt1","pathFormat","initializeResponse","attachRequest","terminateRequest","setFunctionBreakPointsRequest","setExceptionBreakPointsRequest","stepBackRequest","reverseContinueRequest","restartFrameRequest","gotoRequest","pauseRequest","setVariableRequest","setExpressionRequest","sourceRequest","terminateThreadsRequest","stepInTargetsRequest","gotoTargetsRequest","completionsRequest","loadedSourcesRequest","dataBreakpointInfoRequest","setDataBreakpointsRequest","readMemoryRequest","writeMemoryRequest","disassembleRequest","cancelRequest","breakpointLocationsRequest","setInstructionBreakpointsRequest","customRequest","_exception","_stack","supportsHitConditionalBreakpoints","supportsFunctionBreakpoints","supportsStepBack","supportsSetVariable","supportsRestartFrame","supportsStepInTargetsRequest","supportsGotoTargetsRequest","supportsExceptionOptions","supportsValueFormattingOptions","supportTerminateDebuggee","supportsDelayedStackTraceLoading","supportsLoadedSourcesRequest","supportsLogPoints","supportsTerminateThreadsRequest","supportsSetExpression","supportsTerminateRequest","supportsReadMemoryRequest","supportsDisassembleRequest","supportsClipboardContext","supportsSteppingGranularity","supportsInstructionBreakpoints","supportsExceptionFilterOptions","convertClientLineToDebugger","convertClientColumnToDebugger","convertDebuggerColumnToClient","convertClientPathToDebugger","clientPath","uri2path","path2uri","debuggerPath","platform","encodeURI","URL","pathname","sourceUri","s","decodeURIComponent","excludePII","_formatPIIRegexp","paramName","hasOwnProperty","provideDocumentSymbols","endPostionLine","lvn","gvn","isv","nonMfunction","routineref","numlit","strlit","binoperator","unaryoperator","patcode","repititionCount","openkeywords","usekeywords","closekeywords","jobkeywords","tstartkeywords","cmdExpansions","funcExpansions","isvExpansions","cmdParams","funcParams","_tokens","_tokenSaveEnabled","checkFile","filename","errlist","checkLines","info","checkLine","lineLabel","_splitLabelAndParameters","lineIndentationArray","lineLeadSpace","_pushToken","cmdPosition","longcmd","_checkCommand","lineComment","indentationLevel","input","linetokens","indentationLevels","expandCompressFile","doExpand","expandCompressLine","errorText","cmdCompressions","shortCommand","funcCompressions","shortFunction","isvCompressions","shortIsv","outline","errorinfo","outText","posCorrector","checkName","_checkEntryRefAndPostcondition","withParams","_checkEntryRef","_evaluateExpression","isUserfunction","tokentype","refString","refPosition","indRoutineString","_checkVar","globalOk","indexOk","indexFound","globalFound","indirectionFound","varFound","cuttedLine","_cutBeforeClosingBrace","provResult","_checkBreak","_checkKeyword","keywords","_checkOUC","braceComplete","_isEndOfArgument","_checkFor","argNumber","_checkJobKeyword","stringlit","_checkJob","_checkKill","_checkLock","isLock","_checkMerge","_checkNew","_checkRead","mat","starDetected","_checkSet","isBraced","savePosition","functionname","_checkFunction","_checkTstart","_checkView","_checkWrite","_checkWriteSocket","fname","maxparams","paramCount","_checkXecute","_checkZbreak","_checkZprint","_checkZstep","para","postcondPossible","postcondition","argFormat","argCount","longfunc","params","minArguments","minparams","formats","insideString","exType","pushTokens","expressionComplete","startposition","lastExpression","subExType","evalString","localname","operator","_evaluatePattern","specialvarname","numericliteral","number","string","patternComplete","repCount","_extractCommands","inputObject","tmpFunction","tmpFunctionArray","splitLine","_splitCommandsAndArguments","ii","lineExpression","postConditionFunctionArray","_extractPostConditional","_extractComment","inputLine","expressionPosition","_extractIndentation","lineIndentation","spacer","_extractLabel","errorPosition","tmpObject","tmpIndex","isEndOfArgument","inputString","lineCommands","tmpCursor","labelparts","labeltext","parameterVars","parameterLength","currentLine","eb","parsedLine","newLine","renderLine","cmds","lineContainsNoParamDo","tmpLine","appendLabel","tmpIndentation","appendIndentation","appendRoutines","appendComment","provideCodeActions","diagnostics","diagnostic","fix","CodeAction","CodeActionKind","Empty","errorCode","_actualParameter","_actualDiagnostic","_removeNewVariable","_varNotNewed","kind","QuickFix","WorkspaceEdit","diagRange","positionAfterToken","subroutineStartLine","_getSubroutineStart","bracketPosition","endReplace","_getfixedNew","varStartPosition","varString","prompt","variableParts","forToken","setToken","orderToken","quitToken","doToken","variableStart","indices","bracketCounter","startIndex","getStartVariable","forLoop","trimEnd","newEndPosition","Selection","revealRange","tokenCount","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}