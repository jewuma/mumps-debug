{"version":3,"file":"extension.js","mappings":"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","sources":[".././node_modules/@vscode/debugadapter/lib/debugSession.js",".././node_modules/@vscode/debugadapter/lib/handles.js",".././node_modules/@vscode/debugadapter/lib/internalLogger.js",".././node_modules/@vscode/debugadapter/lib/logger.js",".././node_modules/@vscode/debugadapter/lib/loggingDebugSession.js",".././node_modules/@vscode/debugadapter/lib/main.js",".././node_modules/@vscode/debugadapter/lib/messages.js",".././node_modules/@vscode/debugadapter/lib/protocol.js",".././node_modules/@vscode/debugadapter/lib/runDebugAdapter.js",".././node_modules/await-notify/index.js",".././src/extension.ts",".././src/language-definitions.ts",".././src/mumpsAutospace.ts",".././src/mumpsCodeActionProvider.ts",".././src/mumpsCompExp.ts",".././src/mumpsCompletionItemProvider.ts",".././src/mumpsConfigurationProvider.ts",".././src/mumpsConnect.ts",".././src/mumpsDebug.ts",".././src/mumpsDefinitionProvider.ts",".././src/mumpsDiagnosticsProvider.ts",".././src/mumpsDocumentSymbolProvider.ts",".././src/mumpsDocumenter.ts",".././src/mumpsEvalutableExpressionProvider.ts",".././src/mumpsFoldingProvider.ts",".././src/mumpsFormattingHelpProvider.ts",".././src/mumpsGlobalProvider.ts",".././src/mumpsHighlighter.ts",".././src/mumpsHoverProvider.ts",".././src/mumpsLineParser.ts",".././src/mumpsLinter.ts",".././src/mumpsParseDb.ts",".././src/mumpsReferenceProvider.ts",".././src/mumpsRoutineSorter.ts",".././src/mumpsSignatureHelpProvider.ts",".././src/mumpsTokenData.ts","../external commonjs \"vscode\"","../external node-commonjs \"events\"","../external node-commonjs \"fs\"","../external node-commonjs \"fs/promises\"","../external node-commonjs \"net\"","../external node-commonjs \"path\"","../external node-commonjs \"url\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DebugSession = exports.ErrorDestination = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.CompletionItem = exports.Module = exports.Breakpoint = exports.Variable = exports.Thread = exports.StackFrame = exports.Scope = exports.Source = void 0;\nconst protocol_1 = require(\"./protocol\");\nconst messages_1 = require(\"./messages\");\nconst runDebugAdapter_1 = require(\"./runDebugAdapter\");\nconst url_1 = require(\"url\");\nclass Source {\n    constructor(name, path, id = 0, origin, data) {\n        this.name = name;\n        this.path = path;\n        this.sourceReference = id;\n        if (origin) {\n            this.origin = origin;\n        }\n        if (data) {\n            this.adapterData = data;\n        }\n    }\n}\nexports.Source = Source;\nclass Scope {\n    constructor(name, reference, expensive = false) {\n        this.name = name;\n        this.variablesReference = reference;\n        this.expensive = expensive;\n    }\n}\nexports.Scope = Scope;\nclass StackFrame {\n    constructor(i, nm, src, ln = 0, col = 0) {\n        this.id = i;\n        this.source = src;\n        this.line = ln;\n        this.column = col;\n        this.name = nm;\n    }\n}\nexports.StackFrame = StackFrame;\nclass Thread {\n    constructor(id, name) {\n        this.id = id;\n        if (name) {\n            this.name = name;\n        }\n        else {\n            this.name = 'Thread #' + id;\n        }\n    }\n}\nexports.Thread = Thread;\nclass Variable {\n    constructor(name, value, ref = 0, indexedVariables, namedVariables) {\n        this.name = name;\n        this.value = value;\n        this.variablesReference = ref;\n        if (typeof namedVariables === 'number') {\n            this.namedVariables = namedVariables;\n        }\n        if (typeof indexedVariables === 'number') {\n            this.indexedVariables = indexedVariables;\n        }\n    }\n}\nexports.Variable = Variable;\nclass Breakpoint {\n    constructor(verified, line, column, source) {\n        this.verified = verified;\n        const e = this;\n        if (typeof line === 'number') {\n            e.line = line;\n        }\n        if (typeof column === 'number') {\n            e.column = column;\n        }\n        if (source) {\n            e.source = source;\n        }\n    }\n    setId(id) {\n        this.id = id;\n    }\n}\nexports.Breakpoint = Breakpoint;\nclass Module {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\nexports.Module = Module;\nclass CompletionItem {\n    constructor(label, start, length = 0) {\n        this.label = label;\n        this.start = start;\n        this.length = length;\n    }\n}\nexports.CompletionItem = CompletionItem;\nclass StoppedEvent extends messages_1.Event {\n    constructor(reason, threadId, exceptionText) {\n        super('stopped');\n        this.body = {\n            reason: reason\n        };\n        if (typeof threadId === 'number') {\n            this.body.threadId = threadId;\n        }\n        if (typeof exceptionText === 'string') {\n            this.body.text = exceptionText;\n        }\n    }\n}\nexports.StoppedEvent = StoppedEvent;\nclass ContinuedEvent extends messages_1.Event {\n    constructor(threadId, allThreadsContinued) {\n        super('continued');\n        this.body = {\n            threadId: threadId\n        };\n        if (typeof allThreadsContinued === 'boolean') {\n            this.body.allThreadsContinued = allThreadsContinued;\n        }\n    }\n}\nexports.ContinuedEvent = ContinuedEvent;\nclass InitializedEvent extends messages_1.Event {\n    constructor() {\n        super('initialized');\n    }\n}\nexports.InitializedEvent = InitializedEvent;\nclass TerminatedEvent extends messages_1.Event {\n    constructor(restart) {\n        super('terminated');\n        if (typeof restart === 'boolean' || restart) {\n            const e = this;\n            e.body = {\n                restart: restart\n            };\n        }\n    }\n}\nexports.TerminatedEvent = TerminatedEvent;\nclass ExitedEvent extends messages_1.Event {\n    constructor(exitCode) {\n        super('exited');\n        this.body = {\n            exitCode: exitCode\n        };\n    }\n}\nexports.ExitedEvent = ExitedEvent;\nclass OutputEvent extends messages_1.Event {\n    constructor(output, category = 'console', data) {\n        super('output');\n        this.body = {\n            category: category,\n            output: output\n        };\n        if (data !== undefined) {\n            this.body.data = data;\n        }\n    }\n}\nexports.OutputEvent = OutputEvent;\nclass ThreadEvent extends messages_1.Event {\n    constructor(reason, threadId) {\n        super('thread');\n        this.body = {\n            reason: reason,\n            threadId: threadId\n        };\n    }\n}\nexports.ThreadEvent = ThreadEvent;\nclass BreakpointEvent extends messages_1.Event {\n    constructor(reason, breakpoint) {\n        super('breakpoint');\n        this.body = {\n            reason: reason,\n            breakpoint: breakpoint\n        };\n    }\n}\nexports.BreakpointEvent = BreakpointEvent;\nclass ModuleEvent extends messages_1.Event {\n    constructor(reason, module) {\n        super('module');\n        this.body = {\n            reason: reason,\n            module: module\n        };\n    }\n}\nexports.ModuleEvent = ModuleEvent;\nclass LoadedSourceEvent extends messages_1.Event {\n    constructor(reason, source) {\n        super('loadedSource');\n        this.body = {\n            reason: reason,\n            source: source\n        };\n    }\n}\nexports.LoadedSourceEvent = LoadedSourceEvent;\nclass CapabilitiesEvent extends messages_1.Event {\n    constructor(capabilities) {\n        super('capabilities');\n        this.body = {\n            capabilities: capabilities\n        };\n    }\n}\nexports.CapabilitiesEvent = CapabilitiesEvent;\nclass ProgressStartEvent extends messages_1.Event {\n    constructor(progressId, title, message) {\n        super('progressStart');\n        this.body = {\n            progressId: progressId,\n            title: title\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressStartEvent = ProgressStartEvent;\nclass ProgressUpdateEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressUpdate');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressUpdateEvent = ProgressUpdateEvent;\nclass ProgressEndEvent extends messages_1.Event {\n    constructor(progressId, message) {\n        super('progressEnd');\n        this.body = {\n            progressId: progressId\n        };\n        if (typeof message === 'string') {\n            this.body.message = message;\n        }\n    }\n}\nexports.ProgressEndEvent = ProgressEndEvent;\nclass InvalidatedEvent extends messages_1.Event {\n    constructor(areas, threadId, stackFrameId) {\n        super('invalidated');\n        this.body = {};\n        if (areas) {\n            this.body.areas = areas;\n        }\n        if (threadId) {\n            this.body.threadId = threadId;\n        }\n        if (stackFrameId) {\n            this.body.stackFrameId = stackFrameId;\n        }\n    }\n}\nexports.InvalidatedEvent = InvalidatedEvent;\nclass MemoryEvent extends messages_1.Event {\n    constructor(memoryReference, offset, count) {\n        super('memory');\n        this.body = { memoryReference, offset, count };\n    }\n}\nexports.MemoryEvent = MemoryEvent;\nvar ErrorDestination;\n(function (ErrorDestination) {\n    ErrorDestination[ErrorDestination[\"User\"] = 1] = \"User\";\n    ErrorDestination[ErrorDestination[\"Telemetry\"] = 2] = \"Telemetry\";\n})(ErrorDestination = exports.ErrorDestination || (exports.ErrorDestination = {}));\n;\nclass DebugSession extends protocol_1.ProtocolServer {\n    constructor(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super();\n        const linesAndColumnsStartAt1 = typeof obsolete_debuggerLinesAndColumnsStartAt1 === 'boolean' ? obsolete_debuggerLinesAndColumnsStartAt1 : false;\n        this._debuggerLinesStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerColumnsStartAt1 = linesAndColumnsStartAt1;\n        this._debuggerPathsAreURIs = false;\n        this._clientLinesStartAt1 = true;\n        this._clientColumnsStartAt1 = true;\n        this._clientPathsAreURIs = false;\n        this._isServer = typeof obsolete_isServer === 'boolean' ? obsolete_isServer : false;\n        this.on('close', () => {\n            this.shutdown();\n        });\n        this.on('error', (error) => {\n            this.shutdown();\n        });\n    }\n    setDebuggerPathFormat(format) {\n        this._debuggerPathsAreURIs = format !== 'path';\n    }\n    setDebuggerLinesStartAt1(enable) {\n        this._debuggerLinesStartAt1 = enable;\n    }\n    setDebuggerColumnsStartAt1(enable) {\n        this._debuggerColumnsStartAt1 = enable;\n    }\n    setRunAsServer(enable) {\n        this._isServer = enable;\n    }\n    /**\n     * A virtual constructor...\n     */\n    static run(debugSession) {\n        (0, runDebugAdapter_1.runDebugAdapter)(debugSession);\n    }\n    shutdown() {\n        if (this._isServer || this._isRunningInline()) {\n            // shutdown ignored in server mode\n        }\n        else {\n            // wait a bit before shutting down\n            setTimeout(() => {\n                process.exit(0);\n            }, 100);\n        }\n    }\n    sendErrorResponse(response, codeOrMessage, format, variables, dest = ErrorDestination.User) {\n        let msg;\n        if (typeof codeOrMessage === 'number') {\n            msg = {\n                id: codeOrMessage,\n                format: format\n            };\n            if (variables) {\n                msg.variables = variables;\n            }\n            if (dest & ErrorDestination.User) {\n                msg.showUser = true;\n            }\n            if (dest & ErrorDestination.Telemetry) {\n                msg.sendTelemetry = true;\n            }\n        }\n        else {\n            msg = codeOrMessage;\n        }\n        response.success = false;\n        response.message = DebugSession.formatPII(msg.format, true, msg.variables);\n        if (!response.body) {\n            response.body = {};\n        }\n        response.body.error = msg;\n        this.sendResponse(response);\n    }\n    runInTerminalRequest(args, timeout, cb) {\n        this.sendRequest('runInTerminal', args, timeout, cb);\n    }\n    dispatchRequest(request) {\n        const response = new messages_1.Response(request);\n        try {\n            if (request.command === 'initialize') {\n                var args = request.arguments;\n                if (typeof args.linesStartAt1 === 'boolean') {\n                    this._clientLinesStartAt1 = args.linesStartAt1;\n                }\n                if (typeof args.columnsStartAt1 === 'boolean') {\n                    this._clientColumnsStartAt1 = args.columnsStartAt1;\n                }\n                if (args.pathFormat !== 'path') {\n                    this.sendErrorResponse(response, 2018, 'debug adapter only supports native paths', null, ErrorDestination.Telemetry);\n                }\n                else {\n                    const initializeResponse = response;\n                    initializeResponse.body = {};\n                    this.initializeRequest(initializeResponse, args);\n                }\n            }\n            else if (request.command === 'launch') {\n                this.launchRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'attach') {\n                this.attachRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disconnect') {\n                this.disconnectRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'terminate') {\n                this.terminateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restart') {\n                this.restartRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setBreakpoints') {\n                this.setBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setFunctionBreakpoints') {\n                this.setFunctionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExceptionBreakpoints') {\n                this.setExceptionBreakPointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'configurationDone') {\n                this.configurationDoneRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'continue') {\n                this.continueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'next') {\n                this.nextRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepIn') {\n                this.stepInRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepOut') {\n                this.stepOutRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepBack') {\n                this.stepBackRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'reverseContinue') {\n                this.reverseContinueRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'restartFrame') {\n                this.restartFrameRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'goto') {\n                this.gotoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'pause') {\n                this.pauseRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stackTrace') {\n                this.stackTraceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'scopes') {\n                this.scopesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'variables') {\n                this.variablesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setVariable') {\n                this.setVariableRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setExpression') {\n                this.setExpressionRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'source') {\n                this.sourceRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'threads') {\n                this.threadsRequest(response, request);\n            }\n            else if (request.command === 'terminateThreads') {\n                this.terminateThreadsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'evaluate') {\n                this.evaluateRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'stepInTargets') {\n                this.stepInTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'gotoTargets') {\n                this.gotoTargetsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'completions') {\n                this.completionsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'exceptionInfo') {\n                this.exceptionInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'loadedSources') {\n                this.loadedSourcesRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'dataBreakpointInfo') {\n                this.dataBreakpointInfoRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setDataBreakpoints') {\n                this.setDataBreakpointsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'readMemory') {\n                this.readMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'writeMemory') {\n                this.writeMemoryRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'disassemble') {\n                this.disassembleRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'cancel') {\n                this.cancelRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'breakpointLocations') {\n                this.breakpointLocationsRequest(response, request.arguments, request);\n            }\n            else if (request.command === 'setInstructionBreakpoints') {\n                this.setInstructionBreakpointsRequest(response, request.arguments, request);\n            }\n            else {\n                this.customRequest(request.command, response, request.arguments, request);\n            }\n        }\n        catch (e) {\n            this.sendErrorResponse(response, 1104, '{_stack}', { _exception: e.message, _stack: e.stack }, ErrorDestination.Telemetry);\n        }\n    }\n    initializeRequest(response, args) {\n        // This default debug adapter does not support conditional breakpoints.\n        response.body.supportsConditionalBreakpoints = false;\n        // This default debug adapter does not support hit conditional breakpoints.\n        response.body.supportsHitConditionalBreakpoints = false;\n        // This default debug adapter does not support function breakpoints.\n        response.body.supportsFunctionBreakpoints = false;\n        // This default debug adapter implements the 'configurationDone' request.\n        response.body.supportsConfigurationDoneRequest = true;\n        // This default debug adapter does not support hovers based on the 'evaluate' request.\n        response.body.supportsEvaluateForHovers = false;\n        // This default debug adapter does not support the 'stepBack' request.\n        response.body.supportsStepBack = false;\n        // This default debug adapter does not support the 'setVariable' request.\n        response.body.supportsSetVariable = false;\n        // This default debug adapter does not support the 'restartFrame' request.\n        response.body.supportsRestartFrame = false;\n        // This default debug adapter does not support the 'stepInTargets' request.\n        response.body.supportsStepInTargetsRequest = false;\n        // This default debug adapter does not support the 'gotoTargets' request.\n        response.body.supportsGotoTargetsRequest = false;\n        // This default debug adapter does not support the 'completions' request.\n        response.body.supportsCompletionsRequest = false;\n        // This default debug adapter does not support the 'restart' request.\n        response.body.supportsRestartRequest = false;\n        // This default debug adapter does not support the 'exceptionOptions' attribute on the 'setExceptionBreakpoints' request.\n        response.body.supportsExceptionOptions = false;\n        // This default debug adapter does not support the 'format' attribute on the 'variables', 'evaluate', and 'stackTrace' request.\n        response.body.supportsValueFormattingOptions = false;\n        // This debug adapter does not support the 'exceptionInfo' request.\n        response.body.supportsExceptionInfoRequest = false;\n        // This debug adapter does not support the 'TerminateDebuggee' attribute on the 'disconnect' request.\n        response.body.supportTerminateDebuggee = false;\n        // This debug adapter does not support delayed loading of stack frames.\n        response.body.supportsDelayedStackTraceLoading = false;\n        // This debug adapter does not support the 'loadedSources' request.\n        response.body.supportsLoadedSourcesRequest = false;\n        // This debug adapter does not support the 'logMessage' attribute of the SourceBreakpoint.\n        response.body.supportsLogPoints = false;\n        // This debug adapter does not support the 'terminateThreads' request.\n        response.body.supportsTerminateThreadsRequest = false;\n        // This debug adapter does not support the 'setExpression' request.\n        response.body.supportsSetExpression = false;\n        // This debug adapter does not support the 'terminate' request.\n        response.body.supportsTerminateRequest = false;\n        // This debug adapter does not support data breakpoints.\n        response.body.supportsDataBreakpoints = false;\n        /** This debug adapter does not support the 'readMemory' request. */\n        response.body.supportsReadMemoryRequest = false;\n        /** The debug adapter does not support the 'disassemble' request. */\n        response.body.supportsDisassembleRequest = false;\n        /** The debug adapter does not support the 'cancel' request. */\n        response.body.supportsCancelRequest = false;\n        /** The debug adapter does not support the 'breakpointLocations' request. */\n        response.body.supportsBreakpointLocationsRequest = false;\n        /** The debug adapter does not support the 'clipboard' context value in the 'evaluate' request. */\n        response.body.supportsClipboardContext = false;\n        /** The debug adapter does not support stepping granularities for the stepping requests. */\n        response.body.supportsSteppingGranularity = false;\n        /** The debug adapter does not support the 'setInstructionBreakpoints' request. */\n        response.body.supportsInstructionBreakpoints = false;\n        /** The debug adapter does not support 'filterOptions' on the 'setExceptionBreakpoints' request. */\n        response.body.supportsExceptionFilterOptions = false;\n        this.sendResponse(response);\n    }\n    disconnectRequest(response, args, request) {\n        this.sendResponse(response);\n        this.shutdown();\n    }\n    launchRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    attachRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    terminateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setFunctionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExceptionBreakPointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    configurationDoneRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    continueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    nextRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepOutRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepBackRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    reverseContinueRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    restartFrameRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    pauseRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    sourceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    threadsRequest(response, request) {\n        this.sendResponse(response);\n    }\n    terminateThreadsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stackTraceRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    scopesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    variablesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setVariableRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setExpressionRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    evaluateRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    stepInTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    gotoTargetsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    completionsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    exceptionInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    loadedSourcesRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    dataBreakpointInfoRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setDataBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    readMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    writeMemoryRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    disassembleRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    cancelRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    breakpointLocationsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    setInstructionBreakpointsRequest(response, args, request) {\n        this.sendResponse(response);\n    }\n    /**\n     * Override this hook to implement custom requests.\n     */\n    customRequest(command, response, args, request) {\n        this.sendErrorResponse(response, 1014, 'unrecognized request', null, ErrorDestination.Telemetry);\n    }\n    //---- protected -------------------------------------------------------------------------------------------------\n    convertClientLineToDebugger(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line + 1;\n        }\n        return this._clientLinesStartAt1 ? line - 1 : line;\n    }\n    convertDebuggerLineToClient(line) {\n        if (this._debuggerLinesStartAt1) {\n            return this._clientLinesStartAt1 ? line : line - 1;\n        }\n        return this._clientLinesStartAt1 ? line + 1 : line;\n    }\n    convertClientColumnToDebugger(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column + 1;\n        }\n        return this._clientColumnsStartAt1 ? column - 1 : column;\n    }\n    convertDebuggerColumnToClient(column) {\n        if (this._debuggerColumnsStartAt1) {\n            return this._clientColumnsStartAt1 ? column : column - 1;\n        }\n        return this._clientColumnsStartAt1 ? column + 1 : column;\n    }\n    convertClientPathToDebugger(clientPath) {\n        if (this._clientPathsAreURIs !== this._debuggerPathsAreURIs) {\n            if (this._clientPathsAreURIs) {\n                return DebugSession.uri2path(clientPath);\n            }\n            else {\n                return DebugSession.path2uri(clientPath);\n            }\n        }\n        return clientPath;\n    }\n    convertDebuggerPathToClient(debuggerPath) {\n        if (this._debuggerPathsAreURIs !== this._clientPathsAreURIs) {\n            if (this._debuggerPathsAreURIs) {\n                return DebugSession.uri2path(debuggerPath);\n            }\n            else {\n                return DebugSession.path2uri(debuggerPath);\n            }\n        }\n        return debuggerPath;\n    }\n    //---- private -------------------------------------------------------------------------------\n    static path2uri(path) {\n        if (process.platform === 'win32') {\n            if (/^[A-Z]:/.test(path)) {\n                path = path[0].toLowerCase() + path.substr(1);\n            }\n            path = path.replace(/\\\\/g, '/');\n        }\n        path = encodeURI(path);\n        let uri = new url_1.URL(`file:`); // ignore 'path' for now\n        uri.pathname = path; // now use 'path' to get the correct percent encoding (see https://url.spec.whatwg.org)\n        return uri.toString();\n    }\n    static uri2path(sourceUri) {\n        let uri = new url_1.URL(sourceUri);\n        let s = decodeURIComponent(uri.pathname);\n        if (process.platform === 'win32') {\n            if (/^\\/[a-zA-Z]:/.test(s)) {\n                s = s[1].toLowerCase() + s.substr(2);\n            }\n            s = s.replace(/\\//g, '\\\\');\n        }\n        return s;\n    }\n    /*\n    * If argument starts with '_' it is OK to send its value to telemetry.\n    */\n    static formatPII(format, excludePII, args) {\n        return format.replace(DebugSession._formatPIIRegexp, function (match, paramName) {\n            if (excludePII && paramName.length > 0 && paramName[0] !== '_') {\n                return match;\n            }\n            return args[paramName] && args.hasOwnProperty(paramName) ?\n                args[paramName] :\n                match;\n        });\n    }\n}\nexports.DebugSession = DebugSession;\nDebugSession._formatPIIRegexp = /{([^}]+)}/g;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = void 0;\nclass Handles {\n    constructor(startHandle) {\n        this.START_HANDLE = 1000;\n        this._handleMap = new Map();\n        this._nextHandle = typeof startHandle === 'number' ? startHandle : this.START_HANDLE;\n    }\n    reset() {\n        this._nextHandle = this.START_HANDLE;\n        this._handleMap = new Map();\n    }\n    create(value) {\n        var handle = this._nextHandle++;\n        this._handleMap.set(handle, value);\n        return handle;\n    }\n    get(handle, dflt) {\n        return this._handleMap.get(handle) || dflt;\n    }\n}\nexports.Handles = Handles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBRWhHLE1BQWEsT0FBTztJQU9uQixZQUFtQixXQUFvQjtRQUwvQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUdwQixlQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztRQUd6QyxJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sV0FBVyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RGLENBQUM7SUFFTSxLQUFLO1FBQ1gsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxHQUFHLEVBQWEsQ0FBQztJQUN4QyxDQUFDO0lBRU0sTUFBTSxDQUFDLEtBQVE7UUFDckIsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNuQyxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7SUFFTSxHQUFHLENBQUMsTUFBYyxFQUFFLElBQVE7UUFDbEMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDNUMsQ0FBQztDQUNEO0FBekJELDBCQXlCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5leHBvcnQgY2xhc3MgSGFuZGxlczxUPiB7XG5cblx0cHJpdmF0ZSBTVEFSVF9IQU5ETEUgPSAxMDAwO1xuXG5cdHByaXZhdGUgX25leHRIYW5kbGUgOiBudW1iZXI7XG5cdHByaXZhdGUgX2hhbmRsZU1hcCA9IG5ldyBNYXA8bnVtYmVyLCBUPigpO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihzdGFydEhhbmRsZT86IG51bWJlcikge1xuXHRcdHRoaXMuX25leHRIYW5kbGUgPSB0eXBlb2Ygc3RhcnRIYW5kbGUgPT09ICdudW1iZXInID8gc3RhcnRIYW5kbGUgOiB0aGlzLlNUQVJUX0hBTkRMRTtcblx0fVxuXG5cdHB1YmxpYyByZXNldCgpOiB2b2lkIHtcblx0XHR0aGlzLl9uZXh0SGFuZGxlID0gdGhpcy5TVEFSVF9IQU5ETEU7XG5cdFx0dGhpcy5faGFuZGxlTWFwID0gbmV3IE1hcDxudW1iZXIsIFQ+KCk7XG5cdH1cblxuXHRwdWJsaWMgY3JlYXRlKHZhbHVlOiBUKTogbnVtYmVyIHtcblx0XHR2YXIgaGFuZGxlID0gdGhpcy5fbmV4dEhhbmRsZSsrO1xuXHRcdHRoaXMuX2hhbmRsZU1hcC5zZXQoaGFuZGxlLCB2YWx1ZSk7XG5cdFx0cmV0dXJuIGhhbmRsZTtcblx0fVxuXG5cdHB1YmxpYyBnZXQoaGFuZGxlOiBudW1iZXIsIGRmbHQ/OiBUKTogVCB7XG5cdFx0cmV0dXJuIHRoaXMuX2hhbmRsZU1hcC5nZXQoaGFuZGxlKSB8fCBkZmx0O1xuXHR9XG59XG4iXX0=","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalLogger = void 0;\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst logger_1 = require(\"./logger\");\n/**\n * Manages logging, whether to console.log, file, or VS Code console.\n * Encapsulates the state specific to each logging session\n */\nclass InternalLogger {\n    constructor(logCallback, isServer) {\n        /** Dispose and allow exit to continue normally */\n        this.beforeExitCallback = () => this.dispose();\n        this._logCallback = logCallback;\n        this._logToConsole = isServer;\n        this._minLogLevel = logger_1.LogLevel.Warn;\n        this.disposeCallback = (signal, code) => {\n            this.dispose();\n            // Exit with 128 + value of the signal code.\n            // https://nodejs.org/api/process.html#process_exit_codes\n            code = code || 2; // SIGINT\n            code += 128;\n            process.exit(code);\n        };\n    }\n    async setup(options) {\n        this._minLogLevel = options.consoleMinLogLevel;\n        this._prependTimestamp = options.prependTimestamp;\n        // Open a log file in the specified location. Overwritten on each run.\n        if (options.logFilePath) {\n            if (!path.isAbsolute(options.logFilePath)) {\n                this.log(`logFilePath must be an absolute path: ${options.logFilePath}`, logger_1.LogLevel.Error);\n            }\n            else {\n                const handleError = (err) => this.sendLog(`Error creating log file at path: ${options.logFilePath}. Error: ${err.toString()}\\n`, logger_1.LogLevel.Error);\n                try {\n                    await fs.promises.mkdir(path.dirname(options.logFilePath), { recursive: true });\n                    this.log(`Verbose logs are written to:\\n`, logger_1.LogLevel.Warn);\n                    this.log(options.logFilePath + '\\n', logger_1.LogLevel.Warn);\n                    this._logFileStream = fs.createWriteStream(options.logFilePath);\n                    this.logDateTime();\n                    this.setupShutdownListeners();\n                    this._logFileStream.on('error', err => {\n                        handleError(err);\n                    });\n                }\n                catch (err) {\n                    handleError(err);\n                }\n            }\n        }\n    }\n    logDateTime() {\n        let d = new Date();\n        let dateString = d.getUTCFullYear() + '-' + `${d.getUTCMonth() + 1}` + '-' + d.getUTCDate();\n        const timeAndDateStamp = dateString + ', ' + getFormattedTimeString();\n        this.log(timeAndDateStamp + '\\n', logger_1.LogLevel.Verbose, false);\n    }\n    setupShutdownListeners() {\n        process.on('beforeExit', this.beforeExitCallback);\n        process.on('SIGTERM', this.disposeCallback);\n        process.on('SIGINT', this.disposeCallback);\n    }\n    removeShutdownListeners() {\n        process.removeListener('beforeExit', this.beforeExitCallback);\n        process.removeListener('SIGTERM', this.disposeCallback);\n        process.removeListener('SIGINT', this.disposeCallback);\n    }\n    dispose() {\n        return new Promise(resolve => {\n            this.removeShutdownListeners();\n            if (this._logFileStream) {\n                this._logFileStream.end(resolve);\n                this._logFileStream = null;\n            }\n            else {\n                resolve();\n            }\n        });\n    }\n    log(msg, level, prependTimestamp = true) {\n        if (this._minLogLevel === logger_1.LogLevel.Stop) {\n            return;\n        }\n        if (level >= this._minLogLevel) {\n            this.sendLog(msg, level);\n        }\n        if (this._logToConsole) {\n            const logFn = level === logger_1.LogLevel.Error ? console.error :\n                level === logger_1.LogLevel.Warn ? console.warn :\n                    null;\n            if (logFn) {\n                logFn((0, logger_1.trimLastNewline)(msg));\n            }\n        }\n        // If an error, prepend with '[Error]'\n        if (level === logger_1.LogLevel.Error) {\n            msg = `[${logger_1.LogLevel[level]}] ${msg}`;\n        }\n        if (this._prependTimestamp && prependTimestamp) {\n            msg = '[' + getFormattedTimeString() + '] ' + msg;\n        }\n        if (this._logFileStream) {\n            this._logFileStream.write(msg);\n        }\n    }\n    sendLog(msg, level) {\n        // Truncate long messages, they can hang VS Code\n        if (msg.length > 1500) {\n            const endsInNewline = !!msg.match(/(\\n|\\r\\n)$/);\n            msg = msg.substr(0, 1500) + '[...]';\n            if (endsInNewline) {\n                msg = msg + '\\n';\n            }\n        }\n        if (this._logCallback) {\n            const event = new logger_1.LogOutputEvent(msg, level);\n            this._logCallback(event);\n        }\n    }\n}\nexports.InternalLogger = InternalLogger;\nfunction getFormattedTimeString() {\n    let d = new Date();\n    let hourString = _padZeroes(2, String(d.getUTCHours()));\n    let minuteString = _padZeroes(2, String(d.getUTCMinutes()));\n    let secondString = _padZeroes(2, String(d.getUTCSeconds()));\n    let millisecondString = _padZeroes(3, String(d.getUTCMilliseconds()));\n    return hourString + ':' + minuteString + ':' + secondString + '.' + millisecondString + ' UTC';\n}\nfunction _padZeroes(minDesiredLength, numberToPad) {\n    if (numberToPad.length >= minDesiredLength) {\n        return numberToPad;\n    }\n    else {\n        return String('0'.repeat(minDesiredLength) + numberToPad).slice(-minDesiredLength);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimLastNewline = exports.LogOutputEvent = exports.logger = exports.Logger = exports.LogLevel = void 0;\nconst internalLogger_1 = require(\"./internalLogger\");\nconst debugSession_1 = require(\"./debugSession\");\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Log\"] = 1] = \"Log\";\n    LogLevel[LogLevel[\"Warn\"] = 2] = \"Warn\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Stop\"] = 4] = \"Stop\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nclass Logger {\n    constructor() {\n        this._pendingLogQ = [];\n    }\n    log(msg, level = LogLevel.Log) {\n        msg = msg + '\\n';\n        this._write(msg, level);\n    }\n    verbose(msg) {\n        this.log(msg, LogLevel.Verbose);\n    }\n    warn(msg) {\n        this.log(msg, LogLevel.Warn);\n    }\n    error(msg) {\n        this.log(msg, LogLevel.Error);\n    }\n    dispose() {\n        if (this._currentLogger) {\n            const disposeP = this._currentLogger.dispose();\n            this._currentLogger = null;\n            return disposeP;\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * `log` adds a newline, `write` doesn't\n     */\n    _write(msg, level = LogLevel.Log) {\n        // [null, undefined] => string\n        msg = msg + '';\n        if (this._pendingLogQ) {\n            this._pendingLogQ.push({ msg, level });\n        }\n        else if (this._currentLogger) {\n            this._currentLogger.log(msg, level);\n        }\n    }\n    /**\n     * Set the logger's minimum level to log in the console, and whether to log to the file. Log messages are queued before this is\n     * called the first time, because minLogLevel defaults to Warn.\n     */\n    setup(consoleMinLogLevel, _logFilePath, prependTimestamp = true) {\n        const logFilePath = typeof _logFilePath === 'string' ?\n            _logFilePath :\n            (_logFilePath && this._logFilePathFromInit);\n        if (this._currentLogger) {\n            const options = {\n                consoleMinLogLevel,\n                logFilePath,\n                prependTimestamp\n            };\n            this._currentLogger.setup(options).then(() => {\n                // Now that we have a minimum logLevel, we can clear out the queue of pending messages\n                if (this._pendingLogQ) {\n                    const logQ = this._pendingLogQ;\n                    this._pendingLogQ = null;\n                    logQ.forEach(item => this._write(item.msg, item.level));\n                }\n            });\n        }\n    }\n    init(logCallback, logFilePath, logToConsole) {\n        // Re-init, create new global Logger\n        this._pendingLogQ = this._pendingLogQ || [];\n        this._currentLogger = new internalLogger_1.InternalLogger(logCallback, logToConsole);\n        this._logFilePathFromInit = logFilePath;\n    }\n}\nexports.Logger = Logger;\nexports.logger = new Logger();\nclass LogOutputEvent extends debugSession_1.OutputEvent {\n    constructor(msg, level) {\n        const category = level === LogLevel.Error ? 'stderr' :\n            level === LogLevel.Warn ? 'console' :\n                'stdout';\n        super(msg, category);\n    }\n}\nexports.LogOutputEvent = LogOutputEvent;\nfunction trimLastNewline(str) {\n    return str.replace(/(\\n|\\r\\n)$/, '');\n}\nexports.trimLastNewline = trimLastNewline;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingDebugSession = void 0;\nconst Logger = require(\"./logger\");\nconst logger = Logger.logger;\nconst debugSession_1 = require(\"./debugSession\");\nclass LoggingDebugSession extends debugSession_1.DebugSession {\n    constructor(obsolete_logFilePath, obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer) {\n        super(obsolete_debuggerLinesAndColumnsStartAt1, obsolete_isServer);\n        this.obsolete_logFilePath = obsolete_logFilePath;\n        this.on('error', (event) => {\n            logger.error(event.body);\n        });\n    }\n    start(inStream, outStream) {\n        super.start(inStream, outStream);\n        logger.init(e => this.sendEvent(e), this.obsolete_logFilePath, this._isServer);\n    }\n    /**\n     * Overload sendEvent to log\n     */\n    sendEvent(event) {\n        if (!(event instanceof Logger.LogOutputEvent)) {\n            // Don't create an infinite loop...\n            let objectToLog = event;\n            if (event instanceof debugSession_1.OutputEvent && event.body && event.body.data && event.body.data.doNotLogOutput) {\n                delete event.body.data.doNotLogOutput;\n                objectToLog = { ...event };\n                objectToLog.body = { ...event.body, output: '<output not logged>' };\n            }\n            logger.verbose(`To client: ${JSON.stringify(objectToLog)}`);\n        }\n        super.sendEvent(event);\n    }\n    /**\n     * Overload sendRequest to log\n     */\n    sendRequest(command, args, timeout, cb) {\n        logger.verbose(`To client: ${JSON.stringify(command)}(${JSON.stringify(args)}), timeout: ${timeout}`);\n        super.sendRequest(command, args, timeout, cb);\n    }\n    /**\n     * Overload sendResponse to log\n     */\n    sendResponse(response) {\n        logger.verbose(`To client: ${JSON.stringify(response)}`);\n        super.sendResponse(response);\n    }\n    dispatchRequest(request) {\n        logger.verbose(`From client: ${request.command}(${JSON.stringify(request.arguments)})`);\n        super.dispatchRequest(request);\n    }\n}\nexports.LoggingDebugSession = LoggingDebugSession;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2luZ0RlYnVnU2Vzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9sb2dnaW5nRGVidWdTZXNzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7O2dHQUdnRzs7O0FBSWhHLG1DQUFtQztBQUNuQyxNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdCLGlEQUF5RDtBQUV6RCxNQUFhLG1CQUFvQixTQUFRLDJCQUFZO0lBQ3BELFlBQTJCLG9CQUE2QixFQUFFLHdDQUFrRCxFQUFFLGlCQUEyQjtRQUN4SSxLQUFLLENBQUMsd0NBQXdDLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR6Qyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQVM7UUFHdkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUU7WUFDL0MsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQStCLEVBQUUsU0FBZ0M7UUFDN0UsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRUQ7O09BRUc7SUFDSSxTQUFTLENBQUMsS0FBMEI7UUFDMUMsSUFBSSxDQUFDLENBQUMsS0FBSyxZQUFZLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUM5QyxtQ0FBbUM7WUFFbkMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQ3hCLElBQUksS0FBSyxZQUFZLDBCQUFXLElBQUksS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BHLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2dCQUN0QyxXQUFXLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBRSxDQUFDO2dCQUMzQixXQUFXLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxxQkFBcUIsRUFBRSxDQUFBO2FBQ25FO1lBRUQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzVEO1FBRUQsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxXQUFXLENBQUMsT0FBZSxFQUFFLElBQVMsRUFBRSxPQUFlLEVBQUUsRUFBOEM7UUFDN0csTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQ3RHLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVEOztPQUVHO0lBQ0ksWUFBWSxDQUFDLFFBQWdDO1FBQ25ELE1BQU0sQ0FBQyxPQUFPLENBQUMsY0FBYyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6RCxLQUFLLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFUyxlQUFlLENBQUMsT0FBOEI7UUFDdkQsTUFBTSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsT0FBTyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUUsR0FBRyxDQUFDLENBQUM7UUFDekYsS0FBSyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0Q7QUF0REQsa0RBc0RDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7RGVidWdQcm90b2NvbH0gZnJvbSAnQHZzY29kZS9kZWJ1Z3Byb3RvY29sJztcblxuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5pbXBvcnQge0RlYnVnU2Vzc2lvbiwgT3V0cHV0RXZlbnR9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGNsYXNzIExvZ2dpbmdEZWJ1Z1Nlc3Npb24gZXh0ZW5kcyBEZWJ1Z1Nlc3Npb24ge1xuXHRwdWJsaWMgY29uc3RydWN0b3IocHJpdmF0ZSBvYnNvbGV0ZV9sb2dGaWxlUGF0aD86IHN0cmluZywgb2Jzb2xldGVfZGVidWdnZXJMaW5lc0FuZENvbHVtbnNTdGFydEF0MT86IGJvb2xlYW4sIG9ic29sZXRlX2lzU2VydmVyPzogYm9vbGVhbikge1xuXHRcdHN1cGVyKG9ic29sZXRlX2RlYnVnZ2VyTGluZXNBbmRDb2x1bW5zU3RhcnRBdDEsIG9ic29sZXRlX2lzU2VydmVyKTtcblxuXHRcdHRoaXMub24oJ2Vycm9yJywgKGV2ZW50OiBEZWJ1Z1Byb3RvY29sLkV2ZW50KSA9PiB7XG5cdFx0XHRsb2dnZXIuZXJyb3IoZXZlbnQuYm9keSk7XG5cdFx0fSk7XG5cdH1cblxuXHRwdWJsaWMgc3RhcnQoaW5TdHJlYW06IE5vZGVKUy5SZWFkYWJsZVN0cmVhbSwgb3V0U3RyZWFtOiBOb2RlSlMuV3JpdGFibGVTdHJlYW0pOiB2b2lkIHtcblx0XHRzdXBlci5zdGFydChpblN0cmVhbSwgb3V0U3RyZWFtKTtcblx0XHRsb2dnZXIuaW5pdChlID0+IHRoaXMuc2VuZEV2ZW50KGUpLCB0aGlzLm9ic29sZXRlX2xvZ0ZpbGVQYXRoLCB0aGlzLl9pc1NlcnZlcik7XG5cdH1cblxuXHQvKipcblx0ICogT3ZlcmxvYWQgc2VuZEV2ZW50IHRvIGxvZ1xuXHQgKi9cblx0cHVibGljIHNlbmRFdmVudChldmVudDogRGVidWdQcm90b2NvbC5FdmVudCk6IHZvaWQge1xuXHRcdGlmICghKGV2ZW50IGluc3RhbmNlb2YgTG9nZ2VyLkxvZ091dHB1dEV2ZW50KSkge1xuXHRcdFx0Ly8gRG9uJ3QgY3JlYXRlIGFuIGluZmluaXRlIGxvb3AuLi5cblxuXHRcdFx0bGV0IG9iamVjdFRvTG9nID0gZXZlbnQ7XG5cdFx0XHRpZiAoZXZlbnQgaW5zdGFuY2VvZiBPdXRwdXRFdmVudCAmJiBldmVudC5ib2R5ICYmIGV2ZW50LmJvZHkuZGF0YSAmJiBldmVudC5ib2R5LmRhdGEuZG9Ob3RMb2dPdXRwdXQpIHtcblx0XHRcdFx0ZGVsZXRlIGV2ZW50LmJvZHkuZGF0YS5kb05vdExvZ091dHB1dDtcblx0XHRcdFx0b2JqZWN0VG9Mb2cgPSB7IC4uLmV2ZW50IH07XG5cdFx0XHRcdG9iamVjdFRvTG9nLmJvZHkgPSB7IC4uLmV2ZW50LmJvZHksIG91dHB1dDogJzxvdXRwdXQgbm90IGxvZ2dlZD4nIH1cblx0XHRcdH1cblxuXHRcdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShvYmplY3RUb0xvZyl9YCk7XG5cdFx0fVxuXG5cdFx0c3VwZXIuc2VuZEV2ZW50KGV2ZW50KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBPdmVybG9hZCBzZW5kUmVxdWVzdCB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVxdWVzdChjb21tYW5kOiBzdHJpbmcsIGFyZ3M6IGFueSwgdGltZW91dDogbnVtYmVyLCBjYjogKHJlc3BvbnNlOiBEZWJ1Z1Byb3RvY29sLlJlc3BvbnNlKSA9PiB2b2lkKTogdm9pZCB7XG5cdFx0bG9nZ2VyLnZlcmJvc2UoYFRvIGNsaWVudDogJHtKU09OLnN0cmluZ2lmeShjb21tYW5kKX0oJHtKU09OLnN0cmluZ2lmeShhcmdzKX0pLCB0aW1lb3V0OiAke3RpbWVvdXR9YCk7XG5cdFx0c3VwZXIuc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncywgdGltZW91dCwgY2IpO1xuXHR9XG5cblx0LyoqXG5cdCAqIE92ZXJsb2FkIHNlbmRSZXNwb25zZSB0byBsb2dcblx0ICovXG5cdHB1YmxpYyBzZW5kUmVzcG9uc2UocmVzcG9uc2U6IERlYnVnUHJvdG9jb2wuUmVzcG9uc2UpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgVG8gY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKX1gKTtcblx0XHRzdXBlci5zZW5kUmVzcG9uc2UocmVzcG9uc2UpO1xuXHR9XG5cblx0cHJvdGVjdGVkIGRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0OiBEZWJ1Z1Byb3RvY29sLlJlcXVlc3QpOiB2b2lkIHtcblx0XHRsb2dnZXIudmVyYm9zZShgRnJvbSBjbGllbnQ6ICR7cmVxdWVzdC5jb21tYW5kfSgke0pTT04uc3RyaW5naWZ5KHJlcXVlc3QuYXJndW1lbnRzKSB9KWApO1xuXHRcdHN1cGVyLmRpc3BhdGNoUmVxdWVzdChyZXF1ZXN0KTtcblx0fVxufVxuIl19","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handles = exports.Response = exports.Event = exports.ErrorDestination = exports.CompletionItem = exports.Module = exports.Source = exports.Breakpoint = exports.Variable = exports.Scope = exports.StackFrame = exports.Thread = exports.MemoryEvent = exports.InvalidatedEvent = exports.ProgressEndEvent = exports.ProgressUpdateEvent = exports.ProgressStartEvent = exports.CapabilitiesEvent = exports.LoadedSourceEvent = exports.ModuleEvent = exports.BreakpointEvent = exports.ThreadEvent = exports.OutputEvent = exports.ContinuedEvent = exports.StoppedEvent = exports.ExitedEvent = exports.TerminatedEvent = exports.InitializedEvent = exports.logger = exports.Logger = exports.LoggingDebugSession = exports.DebugSession = void 0;\nconst debugSession_1 = require(\"./debugSession\");\nObject.defineProperty(exports, \"DebugSession\", { enumerable: true, get: function () { return debugSession_1.DebugSession; } });\nObject.defineProperty(exports, \"InitializedEvent\", { enumerable: true, get: function () { return debugSession_1.InitializedEvent; } });\nObject.defineProperty(exports, \"TerminatedEvent\", { enumerable: true, get: function () { return debugSession_1.TerminatedEvent; } });\nObject.defineProperty(exports, \"ExitedEvent\", { enumerable: true, get: function () { return debugSession_1.ExitedEvent; } });\nObject.defineProperty(exports, \"StoppedEvent\", { enumerable: true, get: function () { return debugSession_1.StoppedEvent; } });\nObject.defineProperty(exports, \"ContinuedEvent\", { enumerable: true, get: function () { return debugSession_1.ContinuedEvent; } });\nObject.defineProperty(exports, \"OutputEvent\", { enumerable: true, get: function () { return debugSession_1.OutputEvent; } });\nObject.defineProperty(exports, \"ThreadEvent\", { enumerable: true, get: function () { return debugSession_1.ThreadEvent; } });\nObject.defineProperty(exports, \"BreakpointEvent\", { enumerable: true, get: function () { return debugSession_1.BreakpointEvent; } });\nObject.defineProperty(exports, \"ModuleEvent\", { enumerable: true, get: function () { return debugSession_1.ModuleEvent; } });\nObject.defineProperty(exports, \"LoadedSourceEvent\", { enumerable: true, get: function () { return debugSession_1.LoadedSourceEvent; } });\nObject.defineProperty(exports, \"CapabilitiesEvent\", { enumerable: true, get: function () { return debugSession_1.CapabilitiesEvent; } });\nObject.defineProperty(exports, \"ProgressStartEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressStartEvent; } });\nObject.defineProperty(exports, \"ProgressUpdateEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressUpdateEvent; } });\nObject.defineProperty(exports, \"ProgressEndEvent\", { enumerable: true, get: function () { return debugSession_1.ProgressEndEvent; } });\nObject.defineProperty(exports, \"InvalidatedEvent\", { enumerable: true, get: function () { return debugSession_1.InvalidatedEvent; } });\nObject.defineProperty(exports, \"MemoryEvent\", { enumerable: true, get: function () { return debugSession_1.MemoryEvent; } });\nObject.defineProperty(exports, \"Thread\", { enumerable: true, get: function () { return debugSession_1.Thread; } });\nObject.defineProperty(exports, \"StackFrame\", { enumerable: true, get: function () { return debugSession_1.StackFrame; } });\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return debugSession_1.Scope; } });\nObject.defineProperty(exports, \"Variable\", { enumerable: true, get: function () { return debugSession_1.Variable; } });\nObject.defineProperty(exports, \"Breakpoint\", { enumerable: true, get: function () { return debugSession_1.Breakpoint; } });\nObject.defineProperty(exports, \"Source\", { enumerable: true, get: function () { return debugSession_1.Source; } });\nObject.defineProperty(exports, \"Module\", { enumerable: true, get: function () { return debugSession_1.Module; } });\nObject.defineProperty(exports, \"CompletionItem\", { enumerable: true, get: function () { return debugSession_1.CompletionItem; } });\nObject.defineProperty(exports, \"ErrorDestination\", { enumerable: true, get: function () { return debugSession_1.ErrorDestination; } });\nconst loggingDebugSession_1 = require(\"./loggingDebugSession\");\nObject.defineProperty(exports, \"LoggingDebugSession\", { enumerable: true, get: function () { return loggingDebugSession_1.LoggingDebugSession; } });\nconst Logger = require(\"./logger\");\nexports.Logger = Logger;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return messages_1.Event; } });\nObject.defineProperty(exports, \"Response\", { enumerable: true, get: function () { return messages_1.Response; } });\nconst handles_1 = require(\"./handles\");\nObject.defineProperty(exports, \"Handles\", { enumerable: true, get: function () { return handles_1.Handles; } });\nconst logger = Logger.logger;\nexports.logger = logger;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Z0dBR2dHO0FBQ2hHLFlBQVksQ0FBQzs7O0FBRWIsaURBT3dCO0FBU3ZCLDZGQWZBLDJCQUFZLE9BZUE7QUFJWixpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNkZBbEJBLDJCQUFZLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQUUsZ0dBbEJBLDhCQUFlLE9Ba0JBO0FBQUUsNEZBbEJBLDBCQUFXLE9Ba0JBO0FBQ25JLGtHQWxCQSxnQ0FBaUIsT0FrQkE7QUFBRSxrR0FsQkEsZ0NBQWlCLE9Ba0JBO0FBQUUsbUdBbEJBLGlDQUFrQixPQWtCQTtBQUFFLG9HQWxCQSxrQ0FBbUIsT0FrQkE7QUFBRSxpR0FsQkEsK0JBQWdCLE9Ba0JBO0FBQUUsaUdBbEJBLCtCQUFnQixPQWtCQTtBQUFFLDRGQWxCQSwwQkFBVyxPQWtCQTtBQUMvSCx1RkFsQkEscUJBQU0sT0FrQkE7QUFBRSwyRkFsQkEseUJBQVUsT0FrQkE7QUFBRSxzRkFsQkEsb0JBQUssT0FrQkE7QUFBRSx5RkFsQkEsdUJBQVEsT0FrQkE7QUFDbkMsMkZBbEJBLHlCQUFVLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsdUZBbEJBLHFCQUFNLE9Ba0JBO0FBQUUsK0ZBbEJBLDZCQUFjLE9Ba0JBO0FBQzFDLGlHQWxCQSwrQkFBZ0IsT0FrQkE7QUFoQmpCLCtEQUEwRDtBQVN6RCxvR0FUTyx5Q0FBbUIsT0FTUDtBQVJwQixtQ0FBbUM7QUFTbEMsd0JBQU07QUFSUCx5Q0FBNkM7QUFlNUMsc0ZBZlEsZ0JBQUssT0FlUjtBQUFFLHlGQWZRLG1CQUFRLE9BZVI7QUFkaEIsdUNBQW9DO0FBZW5DLHdGQWZRLGlCQUFPLE9BZVI7QUFiUixNQUFNLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBTTVCLHdCQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1xuXHREZWJ1Z1Nlc3Npb24sXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb25cbn0gZnJvbSAnLi9kZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0IHtMb2dnaW5nRGVidWdTZXNzaW9ufSBmcm9tICcuL2xvZ2dpbmdEZWJ1Z1Nlc3Npb24nO1xuaW1wb3J0ICogYXMgTG9nZ2VyIGZyb20gJy4vbG9nZ2VyJztcbmltcG9ydCB7IEV2ZW50LCBSZXNwb25zZSB9IGZyb20gJy4vbWVzc2FnZXMnO1xuaW1wb3J0IHsgSGFuZGxlcyB9IGZyb20gJy4vaGFuZGxlcyc7XG5cbmNvbnN0IGxvZ2dlciA9IExvZ2dlci5sb2dnZXI7XG5cbmV4cG9ydCB7XG5cdERlYnVnU2Vzc2lvbixcblx0TG9nZ2luZ0RlYnVnU2Vzc2lvbixcblx0TG9nZ2VyLFxuXHRsb2dnZXIsXG5cdEluaXRpYWxpemVkRXZlbnQsIFRlcm1pbmF0ZWRFdmVudCwgRXhpdGVkRXZlbnQsIFN0b3BwZWRFdmVudCwgQ29udGludWVkRXZlbnQsIE91dHB1dEV2ZW50LCBUaHJlYWRFdmVudCwgQnJlYWtwb2ludEV2ZW50LCBNb2R1bGVFdmVudCxcblx0XHRMb2FkZWRTb3VyY2VFdmVudCwgQ2FwYWJpbGl0aWVzRXZlbnQsIFByb2dyZXNzU3RhcnRFdmVudCwgUHJvZ3Jlc3NVcGRhdGVFdmVudCwgUHJvZ3Jlc3NFbmRFdmVudCwgSW52YWxpZGF0ZWRFdmVudCwgTWVtb3J5RXZlbnQsXG5cdFRocmVhZCwgU3RhY2tGcmFtZSwgU2NvcGUsIFZhcmlhYmxlLFxuXHRCcmVha3BvaW50LCBTb3VyY2UsIE1vZHVsZSwgQ29tcGxldGlvbkl0ZW0sXG5cdEVycm9yRGVzdGluYXRpb24sXG5cdEV2ZW50LCBSZXNwb25zZSxcblx0SGFuZGxlc1xufVxuIl19","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Event = exports.Response = exports.Message = void 0;\nclass Message {\n    constructor(type) {\n        this.seq = 0;\n        this.type = type;\n    }\n}\nexports.Message = Message;\nclass Response extends Message {\n    constructor(request, message) {\n        super('response');\n        this.request_seq = request.seq;\n        this.command = request.command;\n        if (message) {\n            this.success = false;\n            this.message = message;\n        }\n        else {\n            this.success = true;\n        }\n    }\n}\nexports.Response = Response;\nclass Event extends Message {\n    constructor(event, body) {\n        super('event');\n        this.event = event;\n        if (body) {\n            this.body = body;\n        }\n    }\n}\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvbWVzc2FnZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Z0dBR2dHOzs7QUFLaEcsTUFBYSxPQUFPO0lBSW5CLFlBQW1CLElBQVk7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDO0NBQ0Q7QUFSRCwwQkFRQztBQUVELE1BQWEsUUFBUyxTQUFRLE9BQU87SUFLcEMsWUFBbUIsT0FBOEIsRUFBRSxPQUFnQjtRQUNsRSxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUMvQixJQUFJLE9BQU8sRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ2YsSUFBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7U0FDOUI7YUFBTTtZQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3BCO0lBQ0YsQ0FBQztDQUNEO0FBaEJELDRCQWdCQztBQUVELE1BQWEsS0FBTSxTQUFRLE9BQU87SUFHakMsWUFBbUIsS0FBYSxFQUFFLElBQVU7UUFDM0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxJQUFJLEVBQUU7WUFDSCxJQUFLLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUN4QjtJQUNGLENBQUM7Q0FDRDtBQVZELHNCQVVDIiwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbmltcG9ydCB7IERlYnVnUHJvdG9jb2wgfSBmcm9tICdAdnNjb2RlL2RlYnVncHJvdG9jb2wnO1xuXG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5Qcm90b2NvbE1lc3NhZ2Uge1xuXHRzZXE6IG51bWJlcjtcblx0dHlwZTogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3Rvcih0eXBlOiBzdHJpbmcpIHtcblx0XHR0aGlzLnNlcSA9IDA7XG5cdFx0dGhpcy50eXBlID0gdHlwZTtcblx0fVxufVxuXG5leHBvcnQgY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBNZXNzYWdlIGltcGxlbWVudHMgRGVidWdQcm90b2NvbC5SZXNwb25zZSB7XG5cdHJlcXVlc3Rfc2VxOiBudW1iZXI7XG5cdHN1Y2Nlc3M6IGJvb2xlYW47XG5cdGNvbW1hbmQ6IHN0cmluZztcblxuXHRwdWJsaWMgY29uc3RydWN0b3IocmVxdWVzdDogRGVidWdQcm90b2NvbC5SZXF1ZXN0LCBtZXNzYWdlPzogc3RyaW5nKSB7XG5cdFx0c3VwZXIoJ3Jlc3BvbnNlJyk7XG5cdFx0dGhpcy5yZXF1ZXN0X3NlcSA9IHJlcXVlc3Quc2VxO1xuXHRcdHRoaXMuY29tbWFuZCA9IHJlcXVlc3QuY29tbWFuZDtcblx0XHRpZiAobWVzc2FnZSkge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gZmFsc2U7XG5cdFx0XHQoPGFueT50aGlzKS5tZXNzYWdlID0gbWVzc2FnZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5zdWNjZXNzID0gdHJ1ZTtcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIEV2ZW50IGV4dGVuZHMgTWVzc2FnZSBpbXBsZW1lbnRzIERlYnVnUHJvdG9jb2wuRXZlbnQge1xuXHRldmVudDogc3RyaW5nO1xuXG5cdHB1YmxpYyBjb25zdHJ1Y3RvcihldmVudDogc3RyaW5nLCBib2R5PzogYW55KSB7XG5cdFx0c3VwZXIoJ2V2ZW50Jyk7XG5cdFx0dGhpcy5ldmVudCA9IGV2ZW50O1xuXHRcdGlmIChib2R5KSB7XG5cdFx0XHQoPGFueT50aGlzKS5ib2R5ID0gYm9keTtcblx0XHR9XG5cdH1cbn1cbiJdfQ==","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolServer = void 0;\nconst ee = require(\"events\");\nconst messages_1 = require(\"./messages\");\nclass Disposable0 {\n    dispose() {\n    }\n}\nclass Emitter {\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArg) => {\n                this._listener = listener;\n                this._this = thisArg;\n                let result;\n                result = {\n                    dispose: () => {\n                        this._listener = undefined;\n                        this._this = undefined;\n                    }\n                };\n                return result;\n            };\n        }\n        return this._event;\n    }\n    fire(event) {\n        if (this._listener) {\n            try {\n                this._listener.call(this._this, event);\n            }\n            catch (e) {\n            }\n        }\n    }\n    hasListener() {\n        return !!this._listener;\n    }\n    dispose() {\n        this._listener = undefined;\n        this._this = undefined;\n    }\n}\nclass ProtocolServer extends ee.EventEmitter {\n    constructor() {\n        super();\n        this._sendMessage = new Emitter();\n        this._sequence = 1;\n        this._pendingRequests = new Map();\n        this.onDidSendMessage = this._sendMessage.event;\n    }\n    // ---- implements vscode.Debugadapter interface ---------------------------\n    dispose() {\n    }\n    handleMessage(msg) {\n        if (msg.type === 'request') {\n            this.dispatchRequest(msg);\n        }\n        else if (msg.type === 'response') {\n            const response = msg;\n            const clb = this._pendingRequests.get(response.request_seq);\n            if (clb) {\n                this._pendingRequests.delete(response.request_seq);\n                clb(response);\n            }\n        }\n    }\n    _isRunningInline() {\n        return this._sendMessage && this._sendMessage.hasListener();\n    }\n    //--------------------------------------------------------------------------\n    start(inStream, outStream) {\n        this._writableStream = outStream;\n        this._rawData = Buffer.alloc(0);\n        inStream.on('data', (data) => this._handleData(data));\n        inStream.on('close', () => {\n            this._emitEvent(new messages_1.Event('close'));\n        });\n        inStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'inStream error: ' + (error && error.message)));\n        });\n        outStream.on('error', (error) => {\n            this._emitEvent(new messages_1.Event('error', 'outStream error: ' + (error && error.message)));\n        });\n        inStream.resume();\n    }\n    stop() {\n        if (this._writableStream) {\n            this._writableStream.end();\n        }\n    }\n    sendEvent(event) {\n        this._send('event', event);\n    }\n    sendResponse(response) {\n        if (response.seq > 0) {\n            console.error(`attempt to send more than one response for command ${response.command}`);\n        }\n        else {\n            this._send('response', response);\n        }\n    }\n    sendRequest(command, args, timeout, cb) {\n        const request = {\n            command: command\n        };\n        if (args && Object.keys(args).length > 0) {\n            request.arguments = args;\n        }\n        this._send('request', request);\n        if (cb) {\n            this._pendingRequests.set(request.seq, cb);\n            const timer = setTimeout(() => {\n                clearTimeout(timer);\n                const clb = this._pendingRequests.get(request.seq);\n                if (clb) {\n                    this._pendingRequests.delete(request.seq);\n                    clb(new messages_1.Response(request, 'timeout'));\n                }\n            }, timeout);\n        }\n    }\n    // ---- protected ----------------------------------------------------------\n    dispatchRequest(request) {\n    }\n    // ---- private ------------------------------------------------------------\n    _emitEvent(event) {\n        this.emit(event.event, event);\n    }\n    _send(typ, message) {\n        message.type = typ;\n        message.seq = this._sequence++;\n        if (this._writableStream) {\n            const json = JSON.stringify(message);\n            this._writableStream.write(`Content-Length: ${Buffer.byteLength(json, 'utf8')}\\r\\n\\r\\n${json}`, 'utf8');\n        }\n        this._sendMessage.fire(message);\n    }\n    _handleData(data) {\n        this._rawData = Buffer.concat([this._rawData, data]);\n        while (true) {\n            if (this._contentLength >= 0) {\n                if (this._rawData.length >= this._contentLength) {\n                    const message = this._rawData.toString('utf8', 0, this._contentLength);\n                    this._rawData = this._rawData.slice(this._contentLength);\n                    this._contentLength = -1;\n                    if (message.length > 0) {\n                        try {\n                            let msg = JSON.parse(message);\n                            this.handleMessage(msg);\n                        }\n                        catch (e) {\n                            this._emitEvent(new messages_1.Event('error', 'Error handling data: ' + (e && e.message)));\n                        }\n                    }\n                    continue; // there may be more complete messages to process\n                }\n            }\n            else {\n                const idx = this._rawData.indexOf(ProtocolServer.TWO_CRLF);\n                if (idx !== -1) {\n                    const header = this._rawData.toString('utf8', 0, idx);\n                    const lines = header.split('\\r\\n');\n                    for (let i = 0; i < lines.length; i++) {\n                        const pair = lines[i].split(/: +/);\n                        if (pair[0] == 'Content-Length') {\n                            this._contentLength = +pair[1];\n                        }\n                    }\n                    this._rawData = this._rawData.slice(idx + ProtocolServer.TWO_CRLF.length);\n                    continue;\n                }\n            }\n            break;\n        }\n    }\n}\nexports.ProtocolServer = ProtocolServer;\nProtocolServer.TWO_CRLF = '\\r\\n\\r\\n';\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runDebugAdapter = void 0;\nconst Net = require(\"net\");\nfunction runDebugAdapter(debugSession) {\n    // parse arguments\n    let port = 0;\n    const args = process.argv.slice(2);\n    args.forEach(function (val, index, array) {\n        const portMatch = /^--server=(\\d{4,5})$/.exec(val);\n        if (portMatch) {\n            port = parseInt(portMatch[1], 10);\n        }\n    });\n    if (port > 0) {\n        // start as a server\n        console.error(`waiting for debug protocol on port ${port}`);\n        Net.createServer((socket) => {\n            console.error('>> accepted connection from client');\n            socket.on('end', () => {\n                console.error('>> client connection closed\\n');\n            });\n            const session = new debugSession(false, true);\n            session.setRunAsServer(true);\n            session.start(socket, socket);\n        }).listen(port);\n    }\n    else {\n        // start a session\n        //console.error('waiting for debug protocol on stdin/stdout');\n        const session = new debugSession(false);\n        process.on('SIGTERM', () => {\n            session.shutdown();\n        });\n        session.start(process.stdin, process.stdout);\n    }\n}\nexports.runDebugAdapter = runDebugAdapter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuRGVidWdBZGFwdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3J1bkRlYnVnQWRhcHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7OztnR0FHZ0c7OztBQUVoRywyQkFBMkI7QUFJM0IsU0FBZ0IsZUFBZSxDQUFDLFlBQWlDO0lBRWhFLGtCQUFrQjtJQUNsQixJQUFJLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsR0FBRyxFQUFFLEtBQUssRUFBRSxLQUFLO1FBQ3ZDLE1BQU0sU0FBUyxHQUFHLHNCQUFzQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLFNBQVMsRUFBRTtZQUNkLElBQUksR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDYixvQkFBb0I7UUFDcEIsT0FBTyxDQUFDLEtBQUssQ0FBQyxzQ0FBc0MsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUM1RCxHQUFHLENBQUMsWUFBWSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDM0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1lBQ3BELE1BQU0sQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtnQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxDQUFDO1lBQ2hELENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxPQUFPLEdBQUcsSUFBSSxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDN0IsT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDL0IsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2hCO1NBQU07UUFFTixrQkFBa0I7UUFDbEIsOERBQThEO1FBQzlELE1BQU0sT0FBTyxHQUFHLElBQUksWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRTtZQUMxQixPQUFPLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDcEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0tBQzdDO0FBQ0YsQ0FBQztBQWxDRCwwQ0FrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuaW1wb3J0ICogYXMgTmV0IGZyb20gJ25ldCc7XG5cbmltcG9ydCB7IERlYnVnU2Vzc2lvbiB9IGZyb20gJy4vZGVidWdTZXNzaW9uJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkRlYnVnQWRhcHRlcihkZWJ1Z1Nlc3Npb246IHR5cGVvZiBEZWJ1Z1Nlc3Npb24pIHtcblxuXHQvLyBwYXJzZSBhcmd1bWVudHNcblx0bGV0IHBvcnQgPSAwO1xuXHRjb25zdCBhcmdzID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuXHRhcmdzLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaW5kZXgsIGFycmF5KSB7XG5cdFx0Y29uc3QgcG9ydE1hdGNoID0gL14tLXNlcnZlcj0oXFxkezQsNX0pJC8uZXhlYyh2YWwpO1xuXHRcdGlmIChwb3J0TWF0Y2gpIHtcblx0XHRcdHBvcnQgPSBwYXJzZUludChwb3J0TWF0Y2hbMV0sIDEwKTtcblx0XHR9XG5cdH0pO1xuXG5cdGlmIChwb3J0ID4gMCkge1xuXHRcdC8vIHN0YXJ0IGFzIGEgc2VydmVyXG5cdFx0Y29uc29sZS5lcnJvcihgd2FpdGluZyBmb3IgZGVidWcgcHJvdG9jb2wgb24gcG9ydCAke3BvcnR9YCk7XG5cdFx0TmV0LmNyZWF0ZVNlcnZlcigoc29ja2V0KSA9PiB7XG5cdFx0XHRjb25zb2xlLmVycm9yKCc+PiBhY2NlcHRlZCBjb25uZWN0aW9uIGZyb20gY2xpZW50Jyk7XG5cdFx0XHRzb2NrZXQub24oJ2VuZCcsICgpID0+IHtcblx0XHRcdFx0Y29uc29sZS5lcnJvcignPj4gY2xpZW50IGNvbm5lY3Rpb24gY2xvc2VkXFxuJyk7XG5cdFx0XHR9KTtcblx0XHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlLCB0cnVlKTtcblx0XHRcdHNlc3Npb24uc2V0UnVuQXNTZXJ2ZXIodHJ1ZSk7XG5cdFx0XHRzZXNzaW9uLnN0YXJ0KHNvY2tldCwgc29ja2V0KTtcblx0XHR9KS5saXN0ZW4ocG9ydCk7XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBzdGFydCBhIHNlc3Npb25cblx0XHQvL2NvbnNvbGUuZXJyb3IoJ3dhaXRpbmcgZm9yIGRlYnVnIHByb3RvY29sIG9uIHN0ZGluL3N0ZG91dCcpO1xuXHRcdGNvbnN0IHNlc3Npb24gPSBuZXcgZGVidWdTZXNzaW9uKGZhbHNlKTtcblx0XHRwcm9jZXNzLm9uKCdTSUdURVJNJywgKCkgPT4ge1xuXHRcdFx0c2Vzc2lvbi5zaHV0ZG93bigpO1xuXHRcdH0pO1xuXHRcdHNlc3Npb24uc3RhcnQocHJvY2Vzcy5zdGRpbiwgcHJvY2Vzcy5zdGRvdXQpO1xuXHR9XG59XG4iXX0=","function Subject() {\n  this.waiters = [];\n}\n\nSubject.prototype.wait = function (timeout) {\n  var self = this;\n  var waiter = {};\n  this.waiters.push(waiter);\n  var promise = new Promise(function (resolve) {\n    var resolved = false;\n    waiter.resolve = function (noRemove) {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      if (waiter.timeout) {\n        clearTimeout(waiter.timeout);\n        waiter.timeout = null;\n      }\n      if (!noRemove) {\n        var pos = self.waiters.indexOf(waiter);\n        if (pos > -1) {\n          self.waiters.splice(pos, 1);\n        }\n      }\n      resolve();\n    };\n  });\n  if (timeout > 0 && isFinite(timeout)) {\n    waiter.timeout = setTimeout(function () {\n      waiter.timeout = null;\n      waiter.resolve();\n    }, timeout);\n  }\n  return promise;\n};\n\nSubject.prototype.notify = function () {\n  if (this.waiters.length > 0) {\n    this.waiters.pop().resolve(true);\n  }\n};\n\nSubject.prototype.notifyAll = function () {\n  for (var i = this.waiters.length - 1; i >= 0; i--) {\n    this.waiters[i].resolve(true);\n  }\n  this.waiters = [];\n}\n\nexports.Subject = Subject;\n","'use strict';\r\n\r\nimport * as vscode from 'vscode';\r\nimport { autoSpaceEnter, autoSpaceTab } from './mumpsAutospace';\r\nimport MumpsCodeActionProvider from './mumpsCodeActionProvider';\r\nimport MumpsCompletionItemProvider from './mumpsCompletionItemProvider';\r\nimport MumpsConfigurationProvider from './mumpsConfigurationProvider';\r\nimport MumpsDebugSession from './mumpsDebug';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport MumpsDocumenter from './mumpsDocumenter';\r\nimport MumpsDocumentSymbolProvider from './mumpsDocumentSymbolProvider';\r\nimport MumpsDefinitionProvider from './mumpsDefinitionProvider';\r\nimport MumpsEvalutableExpressionProvider from './mumpsEvalutableExpressionProvider';\r\nimport MumpsExpandCompress from './mumpsCompExp';\r\nimport MumpsFoldingProvider from './mumpsFoldingProvider';\r\nimport MumpsFormattingHelpProvider from './mumpsFormattingHelpProvider';\r\nimport { MumpsGlobalProvider, GlobalNode } from './mumpsGlobalProvider';\r\nimport { MumpsHighlighter, SemanticTokens } from './mumpsHighlighter';\r\nimport MumpsHoverProvider from './mumpsHoverProvider';\r\nimport MumpsLinter, { removeLintFileFlag } from './mumpsLinter';\r\nimport MumpsReferenceProvider from './mumpsReferenceProvider';\r\nimport MumpsRoutineSorter from './mumpsRoutineSorter';\r\nimport MumpsSignatureHelpProvider from './mumpsSignatureHelpProvider';\r\nimport * as fs from 'fs'\r\nlet timeout: ReturnType<typeof setTimeout> | undefined;\r\nconst entryRef: string | undefined = \"\";\r\nlet dbFile = \"\";\r\nlet localRoutinesPath = \"\";\r\nlet cancellationTokenSource: vscode.CancellationTokenSource | null = null;\r\nconst globalDirectoryProvider = MumpsGlobalProvider.getInstance();\r\nconst mumpsCodeActionProvider = new MumpsCodeActionProvider();\r\nexport let mumpsDiagnostics: vscode.DiagnosticCollection;\r\nexport async function activate(context: vscode.ExtensionContext) {\r\n\tconst MUMPS_MODE: vscode.DocumentFilter = { language: 'mumps', scheme: 'file' };\r\n\tmumpsDiagnostics = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n\tlet storage = \"\";\r\n\tif (context.storageUri !== undefined) {\r\n\t\tstorage = context.storageUri.fsPath;\r\n\t\tif (!fs.existsSync(storage)) {\r\n\t\t\tfs.mkdirSync(storage);\r\n\t\t}\r\n\t\tdbFile = storage + \"/labeldb.json\";\r\n\t\tcontext.subscriptions.push(vscode.languages.registerCompletionItemProvider(MUMPS_MODE, new MumpsCompletionItemProvider(dbFile)));\r\n\t}\r\n\tconst wsState = context.workspaceState;\r\n\tconst statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\r\n\tstatusBarItem.text = \"$(primitive-square) Stop Scan\";\r\n\tstatusBarItem.command = 'mumps.stopScan';\r\n\tstatusBarItem.tooltip = \"Stop current Mumps scan\";\r\n\tstatusBarItem.hide(); // initially hidden\r\n\tconst scanCommand = async () => {\r\n\t\tif (cancellationTokenSource) {\r\n\t\t\t// Abbruch wenn bereits ein Scan läuft\r\n\t\t\tcancellationTokenSource.cancel();\r\n\t\t\tcancellationTokenSource = null;\r\n\t\t\tstatusBarItem.hide(); // hide the button when scan is canceled\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tcancellationTokenSource = new vscode.CancellationTokenSource();\r\n\t\tconst token = cancellationTokenSource.token;\r\n\t\tstatusBarItem.show(); // show the button when scan starts\r\n\r\n\t\ttry {\r\n\t\t\tawait new MumpsLinter(mumpsDiagnostics).lintAllFiles(token);\r\n\t\t} finally {\r\n\t\t\tcancellationTokenSource = null; // Zurücksetzen der Quelle nach Abschluss des Scans\r\n\t\t\tstatusBarItem.hide(); // hide the button when scan is finished\r\n\t\t}\r\n\t}\r\n\tconst stopCommand = () => {\r\n\t\tif (cancellationTokenSource) {\r\n\t\t\tcancellationTokenSource.cancel();\r\n\t\t\tcancellationTokenSource = null;\r\n\t\t\tvscode.window.showInformationMessage('Scan wurde gestoppt.');\r\n\t\t\tstatusBarItem.hide(); // hide the button when scan is stopped\r\n\t\t} else {\r\n\t\t\tvscode.window.showInformationMessage('Kein laufender Scan zum Stoppen.');\r\n\t\t}\r\n\t};\r\n\tconst generateForLoop = (document: vscode.TextDocument, range: vscode.Range, shortNames: boolean, isUppercase: boolean, intendation: number) =>\r\n\t\tmumpsCodeActionProvider.generateForLoop(document, range, shortNames, isUppercase, intendation);\r\n\r\n\tcontext.subscriptions.push(\r\n\t\tvscode.commands.registerCommand(\"mumps.documentFunction\", () => { MumpsDocumenter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceEnter\", () => { autoSpaceEnter(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.autoSpaceTab\", () => { autoSpaceTab(); }),\r\n\t\tvscode.commands.registerCommand(\"mumps.sortRoutine\", () => { new MumpsRoutineSorter() }),\r\n\t\tvscode.commands.registerCommand(\"mumps.toggleExpandedCommands\", () => { MumpsExpandCompress(wsState) }),\r\n\t\tvscode.commands.registerCommand('mumps.getEntryRef', () => { return getEntryRef() }),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.loadMore', (node: GlobalNode) => globalDirectoryProvider.getMoreNodes(node)),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.refresh', () => MumpsGlobalProvider.refresh()),\r\n\t\tvscode.commands.registerCommand('mumps.Globals.search', (node: GlobalNode) => globalDirectoryProvider.search(node)),\r\n\t\tvscode.commands.registerCommand('mumps.generateForLoop', generateForLoop),\r\n\t\tvscode.commands.registerCommand('mumps.scanWorkspaceForErrors', scanCommand),\r\n\t\tvscode.commands.registerCommand('mumps.stopScan', stopCommand),\r\n\t\tvscode.debug.registerDebugConfigurationProvider('mumps', new MumpsConfigurationProvider()),\r\n\t\tvscode.debug.registerDebugAdapterDescriptorFactory('mumps', new InlineDebugAdapterFactory()),\r\n\t\tvscode.languages.registerHoverProvider(MUMPS_MODE, new MumpsHoverProvider()),\r\n\t\tvscode.languages.registerDefinitionProvider(MUMPS_MODE, new MumpsDefinitionProvider()),\r\n\t\tvscode.languages.registerEvaluatableExpressionProvider(MUMPS_MODE, new MumpsEvalutableExpressionProvider()),\r\n\t\tvscode.languages.registerSignatureHelpProvider(MUMPS_MODE, new MumpsSignatureHelpProvider(), '(', ','),\r\n\t\tvscode.languages.registerDocumentSymbolProvider(MUMPS_MODE, new MumpsDocumentSymbolProvider()),\r\n\t\tvscode.languages.registerDocumentSemanticTokensProvider(MUMPS_MODE, MumpsHighlighter, SemanticTokens),\r\n\t\tvscode.languages.registerDocumentFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerDocumentRangeFormattingEditProvider(MUMPS_MODE, new MumpsFormattingHelpProvider()),\r\n\t\tvscode.languages.registerReferenceProvider(MUMPS_MODE, new MumpsReferenceProvider()),\r\n\t\tvscode.languages.registerFoldingRangeProvider(MUMPS_MODE, new MumpsFoldingProvider()),\r\n\t\tvscode.languages.registerCodeActionsProvider(MUMPS_MODE, new MumpsCodeActionProvider()),\r\n\t\tvscode.window.registerTreeDataProvider('mumpsGlobals', MumpsGlobalProvider.getInstance()),\r\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidChangeTextDocument(editor => { if (editor) { triggerUpdateDiagnostics(editor.document, mumpsDiagnostics) } }),\r\n\t\tvscode.workspace.onDidOpenTextDocument(document => { triggerUpdateDiagnostics(document, mumpsDiagnostics) }),\r\n\t\tstatusBarItem\r\n\t);\r\n}\r\n\r\nexport function deactivate() {\r\n\t// nothing to do\r\n}\r\n\r\nclass InlineDebugAdapterFactory implements vscode.DebugAdapterDescriptorFactory {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tcreateDebugAdapterDescriptor(): vscode.ProviderResult<vscode.DebugAdapterDescriptor> {\r\n\t\treturn new vscode.DebugAdapterInlineImplementation(new MumpsDebugSession());\r\n\t}\r\n}\r\n\r\nfunction triggerUpdateDiagnostics(document: vscode.TextDocument, collection: vscode.DiagnosticCollection) {\r\n\tif (timeout) {\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = undefined;\r\n\t}\r\n\ttimeout = setTimeout(() => {\r\n\t\tremoveLintFileFlag(document.fileName)\r\n\t\tconst diagnosticsProvider = new MumpsDiagnosticsProvider(collection)\r\n\t\tdiagnosticsProvider.updateDiagnostics(document);\r\n\t}, 500);\r\n}\r\n\r\nfunction getEntryRef() {\r\n\treturn vscode.window.showInputBox({\r\n\t\tplaceHolder: \"Please enter the Entry-Reference to start Debugging\",\r\n\t\tvalue: entryRef\r\n\t})\r\n}\r\n\r\nexport function getdbFile() {\r\n\treturn dbFile;\r\n}\r\n\r\nexport function getWworkspaceFolder() {\r\n\treturn vscode.workspace.workspaceFolders?.[0].uri.fsPath;\r\n}\r\nexport function getLocalRoutinesPath() {\r\n\treturn localRoutinesPath;\r\n}\r\nexport function setLocalRoutinesPath(path: string) {\r\n\tlocalRoutinesPath = path;\r\n}\r\n","interface ParameterDefinition {\r\n\tname: string,\r\n\ttype: string,\r\n\tdescription?: string\r\n\toptional?: boolean\r\n}\r\nexport interface languageToken {\r\n\tname: string,\r\n\ttype: string,\r\n\tabbreviation: string,\r\n\tdescription: string,\r\n\tparameters?: ParameterDefinition[],\r\n\treturns?: { type: string }\r\n}\r\nexport const definitionsArray: languageToken[] =\r\n\t[{\r\n\t\t\"name\": \"BREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"B\",\r\n\t\t\"description\": \"Suspend execution or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"CLOSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"C\",\r\n\t\t\"description\": \"Release an I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"DO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"D\",\r\n\t\t\"description\": \"Execute a program, section of code or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ELSE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"E\",\r\n\t\t\"description\": \"Conditional execution based on $test\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"FOR\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"F\",\r\n\t\t\"description\": \"Iterative execution of a line or block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"GOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"G\",\r\n\t\t\"description\": \"Transfer of control to a label or program\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Terminate execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"HANG\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"H\",\r\n\t\t\"description\": \"Delay execution for a specified period of time\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"IF\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"I\",\r\n\t\t\"description\": \"Conditional execution of remainder of line\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"JOB\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"J\",\r\n\t\t\"description\": \"Start an independent process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"LOCK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"L\",\r\n\t\t\"description\": \"Exclusive access/release named resource\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"KILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"K\",\r\n\t\t\"description\": \"Deletes a local or global variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"MERGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"M\",\r\n\t\t\"description\": \"Copy arrays\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"NEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"N\",\r\n\t\t\"description\": \"Create new copies of local variables\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"OPEN\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"O\",\r\n\t\t\"description\": \"Obtain ownership of a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"QUIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"Q\",\r\n\t\t\"description\": \"End a for loop or exit a block\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"READ\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"R\",\r\n\t\t\"description\": \"Read from a device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"SET\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"S\",\r\n\t\t\"description\": \"Assign a value to a global or local variable\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TC\",\r\n\t\t\"description\": \"Commit a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TRESTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRE\",\r\n\t\t\"description\": \"Roll back / restart a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TROLLBACK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TRO\",\r\n\t\t\"description\": \"Roll back a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"TSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"TS\",\r\n\t\t\"description\": \"Begin a transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"USE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"U\",\r\n\t\t\"description\": \"Select which device to read/write\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"VIEW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"WRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"W\",\r\n\t\t\"description\": \"Writes to device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"XECUTE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"X\",\r\n\t\t\"description\": \"Dynamically execute strings\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZA\",\r\n\t\t\"description\": \"Reserves the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZBREAK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZB\",\r\n\t\t\"description\": \"Sets or clears a routine breakpoint\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCOMPILE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZCOM\",\r\n\t\t\"description\": \"Compiles a routine\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZCONTINUE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZC\",\r\n\t\t\"description\": \"Continues excutioen after a break\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZDEALLOCATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZD\",\r\n\t\t\"description\": \"Release the specified name\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZEDIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZE\",\r\n\t\t\"description\": \"Invokes editor for routine editing\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZGOTO\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZG\",\r\n\t\t\"description\": \"Moves to EntryRef on a given stacklevel\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHALT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZHALT\",\r\n\t\t\"description\": \"Stops program execution with a return code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZHELP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZH\",\r\n\t\t\"description\": \"Accessses M help library\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZKILL\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZK\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZLINK\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZL\",\r\n\t\t\"description\": \"Compiles an links a routine to the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZMESSAGE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"description\": \"Raises an exception specified by given code\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZPRINT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZP\",\r\n\t\t\"description\": \"Displays source code lines\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZRUPDATE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZRUPDATE\",\r\n\t\t\"description\": \"Publishes the new versions of routines to subscribers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSHOW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSH\",\r\n\t\t\"description\": \"Displays information about the current environment\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSTEP\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZST\",\r\n\t\t\"description\": \"Controls routine execution\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZSYSTEM\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZSY\",\r\n\t\t\"description\": \"Creates a child of the current process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTCOMMIT\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTC\",\r\n\t\t\"description\": \"Marks the end of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTRIGGER\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTR\",\r\n\t\t\"description\": \"Invokes specified Global Triggers\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZTSTART\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZTS\",\r\n\t\t\"description\": \"Marks the beginning of a logical transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWITHDRAW\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWI\",\r\n\t\t\"description\": \"Kills a data value but not the descendants\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"ZWRITE\",\r\n\t\t\"type\": \"command\",\r\n\t\t\"abbreviation\": \"ZWR\",\r\n\t\t\"description\": \"Displays a complete global or local variable\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$DEVICE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Status of the current device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ECODE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$EC\",\r\n\t\t\"description\": \"List of unresolved error codes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ESTACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ES\",\r\n\t\t\"description\": \"Number of stack levels; NEWing $ESTACK resets it to 0\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ETRAP\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ET\",\r\n\t\t\"description\": \"Code to execute on error\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$HOROLOG\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$H\",\r\n\t\t\"description\": \"Days,seconds time stamp\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$IO\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$I\",\r\n\t\t\"description\": \"Current IO unit\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JOB\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Current process ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$KEY\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$K\",\r\n\t\t\"description\": \"String that terminated the most recent READ command\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PRINCIPAL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Principal I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUIT\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Whether the current block of code was called as an extrinsic function (e.g. via $$)\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Current process stack level\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STORAGE\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Amount of memory available, in bytes\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SYSTEM\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$SY\",\r\n\t\t\"description\": \"System ID\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEST\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Result of prior IF command or READ/OPEN/LOCK command if invoked with a timeout\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TLEVEL\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TL\",\r\n\t\t\"description\": \"Number transactions in process\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRESTART\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Number of restarts on current transaction\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$X\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$X\",\r\n\t\t\"description\": \"Position of horizontal cursor in current I/O device\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$Y\",\r\n\t\t\"type\": \"variable\",\r\n\t\t\"abbreviation\": \"$Y\",\r\n\t\t\"description\": \"Position of vertical cursor in current I/O device\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"name\": \"$ASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$A\",\r\n\t\t\"description\": \"ASCII numeric code of a character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the character in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$CHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$C\",\r\n\t\t\"description\": \"ASCII character from numeric code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"CODE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Numeric code to convert to a character\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$DATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$D\",\r\n\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to get data about, e.g. ^X\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$EXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$E\",\r\n\t\t\"description\": \"Extract a substring\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to get a substring from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based start index; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"END\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based end index; defaults to 2\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$F\",\r\n\t\t\"description\": \"Find the 1-based index after the end of a substring or 0 if not found\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"WITHIN\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to search in\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The substring to search for\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"START\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index to start searching from; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$FNUMBER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$FN\",\r\n\t\t\"description\": \"Format a number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"NUMBER\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number to format\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FORMAT\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"One or more of the following: +: forces \\\"+\\\" on positive numbers; -: omits the \\\"-\\\" on negative numbers; ,: comma-separates the number by thousands; T: puts the sign in the trailing position; P: wraps negative numbers in parentheses and wraps positive numbers in spaces and may only be combined with comma (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The numer of digits after the decimal point\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$GET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$G\",\r\n\t\t\"description\": \"Get default or actual value\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to query, e.g. ^X(THIS,THAT)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DEFAULT\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"A value to use if VAR has no value; defaults to \\\"\\\"\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$JUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$J\",\r\n\t\t\"description\": \"Right-justify a number or string by prefixing with spaces\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string to justify\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MINLENGTH\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The minimum length of the result\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIGITS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $JUSTIFY treat VALUE as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$LENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$L\",\r\n\t\t\"description\": \"Determine string length\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"If present, $LENGTH returns one more than the number of occurences of SUBSTRING in VALUE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$NAME\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$NA\",\r\n\t\t\"description\": \"Evaluate and describe a variable\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to evaluate, including naked references\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MAXSUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The maximum number of subscripts to evaluate if VAR is an array\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ORDER\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$O\",\r\n\t\t\"description\": \"Find the subscript of the next or previous node\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"DIRECTION\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"1: forward, -1: reverse; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$PIECE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$P\",\r\n\t\t\"description\": \"Extract substring based on pattern\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSTRING\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A delimiting string within VALUE\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"PIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Which 1-based piece of the split string to return; defaults to 1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"LASTPIECE\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based index of the last piece of the split string to return; defaults to PIECE\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QLENGTH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QL\",\r\n\t\t\"description\": \"Number of subscripts in an array reference\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QSUBSCRIPT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$QS\",\r\n\t\t\"description\": \"Value of specified subscript\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"SUBSCRIPT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The 1-based index of the subscript to find; special values include -1: environment and 0: unsubscripted name\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$QUERY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$Q\",\r\n\t\t\"description\": \"Next item in an array; invoke multiple times to iterate the entire array\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The array to query, e.g. ^AR\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$RANDOM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$R\",\r\n\t\t\"description\": \"Random number\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LIMIT\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The generated random number will be between 0 (inclusive) and this LIMIT (exclusive)\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$REVERSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$RE\",\r\n\t\t\"description\": \"String in reverse order\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to reverse\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$SELECT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$S\",\r\n\t\t\"description\": \"Value of first true argument\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"TVEXPR\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"description\": \"An expression to test for truth, followed by a colon and a value, e.g. i=42:\\\"Answered!\\\"\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"expression\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional truth value expressions to test; the last expression often starts with 1: to avoid errors\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"any\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$STACK\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ST\",\r\n\t\t\"description\": \"Returns information about the process stack\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LEVEL\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"-1: returns the highest stack level; 0: returns information about how the program was started; 1 to $STACK(-1): returns information about how the stack level was created\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"FIELD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"\\\"MCODE\\\": the line of code that was executed; \\\"PLACE\\\": location of the executed code; \\\"ECODE\\\": the error code(s) added at the stack level, if any\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string|number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TEXT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$T\",\r\n\t\t\"description\": \"Returns the text of a line of M[UMPS] code\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"REFERENCE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A reference to a code location, e.g. 'LABEL' or '+4^PROGRAM' or 'LABEL^PROGRAM', etc.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$TRANSLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$TR\",\r\n\t\t\"description\": \"Translate characters in a string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The value to translate\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"OLD\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Characters in VALUE to replace\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NEW\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Characters to replace OLD characters with; if not provided then OLD characters will be removed\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$VIEW\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$V\",\r\n\t\t\"description\": \"Implementation defined\"\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZAHANDLE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZAH\",\r\n\t\t\"description\": \"Returns unique identifier for a name or an alias container\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VAR\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The variable to find the handle for e.g\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZASCII\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZA\",\r\n\t\t\"description\": \"ASCII numeric code of a 8-bit character\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"A string to get a code from\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The 1-based position of the byte in VALUE; defaults to 1\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZATRANSFORM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZATR\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument expr in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"String to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"ID\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NORMALIZE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"MCOLLATION\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"whether to use standard M collation of numbers before strings, the default or zero (0), or to sort all values as strings (1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITAND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITAND\",\r\n\t\t\"description\": \"Performs a logical AND function on two bit strings and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where both of the input strings have set bits). Positions corresponding to positions where either of the input strings have a cleared bit, also have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITCOUNT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITCOUNT\",\r\n\t\t\"description\": \"Returns the number of ON bits in a bit string.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"EXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITFIND\",\r\n\t\t\"description\": \"Performs the analog of $FIND() on a bit string. It returns an integer that identifies the position after the first position equal to a truth-valued expression that occurs at, or after, the specified starting position\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the bit value for which $ZBITFIND() searches (1 or 0)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional integer argument specifies the starting position at which to begin the search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITGET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITGET\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer argument specifies the position in the string for which the value is requested\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITLEN\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITLEN\",\r\n\t\t\"description\": \"Returns the length of a bit string, in bits\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to examine\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITNOT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITNOT\",\r\n\t\t\"description\": \"Returns a copy of the bit string with each input bit position inverted\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the bit string to invert\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITOR\",\r\n\t\t\"description\": \"Performs a bitwise logical OR on two bit strings, and returns a bit string equal in length to the longer of the two arguments (containing set bits in those positions where either or both of the input strings have set bits). Positions that correspond to positions where neither input string has a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSET\",\r\n\t\t\"description\": \"Returns an edited copy of the input bit string with a specified bit set to the value of the truth-valued expression\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"VALUE\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The expression specifies the input bit string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"POS\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The integer expression specifies the position of the bit to manipulate. Arguments that are negative, zero, or exceed the length of the bit string produce a run-time error. $ZBIT functions count the first bit as position one (1)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"The truth-valued expression specifies the value to which to set the specified bit (0 or 1)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITSTR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITSTR\",\r\n\t\t\"description\": \"Returns a bit string of a specified length with all bit positions initially set to either zero or one\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"LENGTH\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression specifies the length of the bit string to return; arguments that exceed the maximum length of 253,952 produce a run-time error\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TRUTHVALUE\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The optional truth-valued expression specifies the value to which all bit positions should initially be set (0 or 1). If this argument is missing, the bits are set to zero\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZBITXOR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZBITXOR\",\r\n\t\t\"description\": \"Performs a bitwise exclusive OR on two bit strings, and returns a bit string equal in length to the shorter of the two arguments (containing set bits in those positions where either (but not both) of the input strings have set bits). Positions that correspond to positions where neither or both input strings have a set bit have cleared bits in the resulting string\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"FIRSTEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"first expression\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"2NDEXPR\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": false,\r\n\t\t\t\"description\": \"second expression\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCHAR\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCH\",\r\n\t\t\"description\": \"Returns a string composed of bytes represented by the integer octet values specified in its argument(s).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"Integer\",\r\n\t\t\t\"type\": \"Number\",\r\n\t\t\t\"description\": \"The integer expression(s) specify the numeric byte value of the byte(s) $ZCHAR() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"...\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Additional codes to convert to characters\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCOLLATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"description\": \"Returns the transformed representation of the first argument glvn in a normalized form using the alternative transform specified by the second argument intexpr; the return can be used as an operand to the follows (]) or sorts-after (]]) operator such that, if both operands are in the normalized form, the result is independent of alternative collation.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or unsubscripted global or local variable name specifies the key to transform\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"TransformId\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the ID of the alternative transform to use\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"NormForm\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies whether the transform is to normalized form, by default or if zero (0), or, if one (1), the reverse transform from the normalized to the native form.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZCONVERT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns its first argument as a string or value converted to a different encoding or numeric base. The two argument form changes the encoding for case within the ASCII character set. The three argument form changes the encoding scheme or base. Supported bases are decimal 'DEC' and 'HEX', case insensitive).\",\r\n\t\t\"abbreviation\": \"$ZCO\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"string or value to convert. $ZCONVERT() generates a run-time error if for Unicode conversion if the string contains a code-point value that is not in the character set, or for base conversion if the value to be converted is out of range\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"description\": \"Specifies a code that determines the form of the result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"code\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Code that specifies the character set or base of the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATA\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZDATA\",\r\n\t\t\"description\": \"Extends $DATA() to reflect the current alias state of the lvn or name argument to identify alias and alias container variables. It treats variables joined through pass-by-reference as well as TP RESTART variables within a transaction as alias variables. However, it does not distinguish nodes having alias containers among their descendants.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"var\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Returns data about a variable: 0: if undefined, 1: if valued but has no descendants, 10: if has descendants but no value; 11: if has both a value and descendants; 100; 101; 111\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"name\": \"$ZDATE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a date and/or time formatted as text based on an argument formatted in the manner of $HOROLOG\",\r\n\t\t\"abbreviation\": \"$ZDATE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"$HOROLOG format of the date and/or time\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Pattern of desired output p.e. 'YEAR-MM-DD'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of 12 month codes, separated by commas (,)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies a list of seven day codes, separated by commas (,)\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZEXTRACT\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZE\",\r\n\t\t\"description\": \"Returns a byte sequence from a given sequence of octets (8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies a sequence of octets (8-bit bytes) from which $ZEXTRACT() derives a byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the starting byte position in the byte string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"intexpr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the ending byte position for the result\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZFIND\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZF\",\r\n\t\t\"description\": \"Returns an integer byte position that locates the occurrence of a byte sequence within a sequence of octets(8-bit bytes).\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets (8-bit bytes) in which $ZFIND() searches for the byte sequence\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \" specifies the byte sequence for which $ZFIND() searches\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Identifies the starting byte position for the $ZFIND() search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"number\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZGETJPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns job or process information of the specified process\",\r\n\t\t\"abbreviation\": \"$ZGETJPI\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Identifies the PID of the target job. If expr1 is an empty string (“”), $ZGETJPI() returns information about the current process.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the item keyword identifying the type of information returned\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJOBEXAM\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the full specification of the file specified by the optional expr1 argument into which the function places a ZSHOW output specified by expr2\",\r\n\t\t\"abbreviation\": \"$ZJOBEXAM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"A template output device specification. It can be a device, a file directory, or a file name.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Defaulting to '*', expr2 specifies the ZSHOW Information Codes of data to be included in the output\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZJUSTIFY\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"abbreviation\": \"$ZJ\",\r\n\t\t\"description\": \"\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"The expression specifies the sequence of octets formatted by $ZJUSTIFY().\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"Specifies the minimum size of the resulting byte sequence.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"The number of digits after the decimal point; providing this argument makes $ZJUSTIFY treat expr1 as a number\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZLENGTH\",\r\n\t\t\"abbreviation\": \"$ZL\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the length of a sequence of octets measured in bytes, or in “pieces” separated by a delimiter specified by one of its arguments\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the sequence of octets that $ZLENGTH() “measures”.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"specifies the delimiter that defines the measure; if this argument is missing, $ZLENGTH() returns the number of bytes in the sequence of octets.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZMESSAGE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns a message string associated with a specified status code .\",\r\n\t\t\"abbreviation\": \"ZM\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The integer expression specifies the status code for which $ZMESSAGE() returns error message text .\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPARSE\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Expands a file name to a full pathname and then returns the full pathname or one of its fields (directory, name, or extension).\",\r\n\t\t\"abbreviation\": \"$ZPARSE\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the file name; if the file name is not valid, $ZPARSE() returns a null string\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the field of the pathname that $ZPARSE() returns\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specify default values to use during file name expansion for missing fields (directory, name, or extension)\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr5\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the mode or type of parse that $ZPARSE() performs.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPIECE\",\r\n\t\t\"abbreviation\": \"$ZPI\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Return a sequence of bytes delimited by a specified byte sequence made up of one or more bytes.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"specifies the sequence of octets from which $ZPIECE() takes its result.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies the delimiting byte sequence that determines the piece 'boundaries'\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the beginning piece to return\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the last piece to return\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZPREVIOUS\",\r\n\t\t\"abbreviation\": \"$ZP\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns the subscript of the previous local or global variable name in collation sequence within the array level specified by its argument.\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"glvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"Specifies the node prior to which $ZPREVIOUS() searches backwards for a defined node with data and/or descendants.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZQGBLMOD\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Enables an application to determine whether it can safely apply a lost transaction to the database.\",\r\n\t\t\"abbreviation\": \"$ZQGBLMOD\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"gvn\",\r\n\t\t\t\"type\": \"reference\",\r\n\t\t\t\"description\": \"The subscripted or non-subscripted global variable name (gvn) specifies the target node.\"\r\n\t\t}],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"boolean\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSEARCH\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Attempts to locate a file matching the specified file name. If the file exists, it returns the file name; if the file does not exist, it returns the null string.\",\r\n\t\t\"abbreviation\": \"$ZSEARCH\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Contains a file name, with or without wildcards, for which $ZSEARCH() attempts to locate a matching file.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an integer expression that is a stream number. It can be any value from 0 to 255 for each search\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSIGPROC\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Sends a signal to a process. The format for the $ZSIGPROC function is\",\r\n\t\t\"abbreviation\": \"$ZSIGPROC\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"description\": \"The pid of the process to which the signal is to be sent.\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"The system signal name (e.g., 'SIGUSR1' or just 'USR1').\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}, {\r\n\t\t\"name\": \"$ZSOCKET\",\r\n\t\t\"type\": \"function\",\r\n\t\t\"description\": \"Returns information about a SOCKET device and its attached sockets\",\r\n\t\t\"abbreviation\": \"$ZSOCKET\",\r\n\t\t\"parameters\": [{\r\n\t\t\t\"name\": \"expr1\",\r\n\t\t\t\"type\": \"any\",\r\n\t\t\t\"description\": \"Specifies the SOCKET device name\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr2\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"description\": \"Specifies a keyword identifying the type of information returned\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr3\",\r\n\t\t\t\"type\": \"number\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies the index (starting at zero) of a socket attached to the device\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"expr4\",\r\n\t\t\t\"type\": \"string\",\r\n\t\t\t\"optional\": true,\r\n\t\t\t\"description\": \"Specifies an individual delimiter when the second expression specifies DELIMITER.\"\r\n\t\t}\r\n\t\t],\r\n\t\t\"returns\": {\r\n\t\t\t\"type\": \"string\"\r\n\t\t}\r\n\t}\r\n\t];\r\n","import * as vscode from 'vscode';\nimport { LineObject, MumpsLineParser } from './mumpsLineParser';\nasync function autoSpaceEnter() {\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst pos = editor.selection.active\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\n\t\tconst parsedLine = MumpsLineParser.parseLine(currentLine);\n\t\tlet newLine = '';\n\t\tif (pos.character !== 0) {\n\t\t\t//check for removing a trailing .\n\t\t\tif ((parsedLine.lineRoutines === undefined || parsedLine.lineRoutines.length === 0) && currentLine.indexOf(\";\") === -1 &&\n\t\t\t\tparsedLine.lineIndentationArray !== undefined && parsedLine.lineIndentationArray.length > 0) {\n\t\t\t\tparsedLine.lineIndentationArray.splice(-1)\n\t\t\t\teditor.edit((editBuilder) => {\n\t\t\t\t\teditBuilder.replace(new vscode.Range(pos.with(pos.line, 0), pos.with(pos.line, currentLine.length)), renderLine(parsedLine))\n\t\t\t\t})\n\t\t\t\t//check for adding indentation to the new line\n\t\t\t} else {\n\t\t\t\tif (parsedLine.lineIndentationArray === undefined) {\n\t\t\t\t\tparsedLine.lineIndentationArray = []\n\t\t\t\t}\n\t\t\t\tif (lineContainsNoParamDo(parsedLine)) {\n\t\t\t\t\tparsedLine.lineIndentationArray.push(\" \")\n\t\t\t\t}\n\t\t\t\tparsedLine.lineRoutines = []\n\t\t\t\tdelete parsedLine.lineComment\n\t\t\t\tdelete parsedLine.lineLabel\n\t\t\t\tnewLine = renderLine(parsedLine);\n\t\t\t}\n\t\t}\n\t\teditor.edit((editBuilder) => {\n\t\t\teditBuilder.insert(pos, \"\\n\" + newLine);\n\t\t})\n\t}\n}\n\nfunction lineContainsNoParamDo(parsed: LineObject) {\n\tconst cmds = parsed.lineRoutines;\n\tif (cmds) {\n\t\tfor (let i = 0; i < cmds.length; i++) {\n\t\t\tif (cmds[i].mCommand.match(/(d|do)/i) && !cmds[i].mArguments) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nasync function autoSpaceTab() {\n\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst pos = editor.selection.active\n\t\tconst currentLine = editor.document.lineAt(pos.line).text;\n\t\tconst parsed = MumpsLineParser.parseLine(currentLine);\n\t\tif ((parsed.lineRoutines === undefined || parsed.lineRoutines.length === 0) &&\n\t\t\tcurrentLine.indexOf(\";\") === -1 && parsed.lineIndentationArray !== undefined &&\n\t\t\tparsed.lineIndentationArray.length > 0) {\n\t\t\tparsed.lineIndentationArray.push(\" \")\n\t\t\teditor.edit((editBuilder) => {\n\t\t\t\tif (currentLine.charAt(pos.character - 1) === \" \") {\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \". \")\n\t\t\t\t} else {\n\t\t\t\t\teditBuilder.insert(pos.with(pos.line, pos.character), \" . \")\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\teditor.edit((eb) => {\n\t\t\t\teb.insert(pos, \"\\t\")\n\t\t\t})\n\t\t}\n\t}\n}\nfunction renderLine(inputObject: LineObject): string {\n\n\tlet tmpLine = \"\";\n\n\t//Rendering must be performed sequentially.\n\ttmpLine = appendLabel(inputObject, tmpLine);\n\ttmpLine = appendIndentation(inputObject, tmpLine);\n\ttmpLine = appendRoutines(inputObject, tmpLine);\n\ttmpLine = appendComment(inputObject, tmpLine);\n\n\treturn tmpLine;\n\n}\nfunction appendLabel(inputObject: LineObject, inputLine: string) {\n\tif (inputObject.lineLabel) {\n\t\tinputLine = inputLine + inputObject.lineLabel;\n\t}\n\tif (inputObject.lineLeadSpace) {\n\t\tinputLine = inputLine + inputObject.lineLeadSpace;\n\t}\n\treturn inputLine;\n}\n\n//Append Indentation to Label/Spacing.\nfunction appendIndentation(inputObject: LineObject, inputLine: string) {\n\tlet tmpIndentation = \"\";\n\tif (inputObject.lineIndentationArray) {\n\t\tif (inputObject.lineIndentationArray.length > 0) {\n\t\t\tfor (const i in inputObject.lineIndentationArray) {\n\t\t\t\ttmpIndentation = tmpIndentation + \".\" + inputObject.lineIndentationArray[i];\n\t\t\t}\n\t\t\tinputLine = inputLine + tmpIndentation;\n\t\t}\n\t}\n\treturn inputLine;\n}\n\n//Append Routines to Label/Spacing/Indentation.\nfunction appendRoutines(inputObject: LineObject, inputLine: string) {\n\tif (inputObject.lineRoutines) {\n\t\tfor (const i in inputObject.lineRoutines) {\n\t\t\tif (inputObject.lineRoutines[i].mCommand || inputObject.lineRoutines[i].mCommand === \"\") {\n\t\t\t\t//Leave off interval spacing for first Routine.\n\t\t\t\tif (i === \"0\") {\n\t\t\t\t\tinputLine = inputLine + inputObject.lineRoutines[i].mCommand;\n\t\t\t\t} else {\n\t\t\t\t\tinputLine = inputLine + \" \" + inputObject.lineRoutines[i].mCommand;\n\t\t\t\t}\n\t\t\t\t//Append Post-Conditional.\n\t\t\t\tif (inputObject.lineRoutines[i].mPostCondition) {\n\t\t\t\t\tinputLine = inputLine + \":\" + inputObject.lineRoutines[i].mPostCondition;\n\t\t\t\t}\n\t\t\t\t//Append Arguments.\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(inputObject.lineRoutines[i], \"mArguments\")) {\n\t\t\t\t\tinputLine = inputLine + \" \" + inputObject.lineRoutines[i].mArguments;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn inputLine;\n}\n\n//Append Comment.\nfunction appendComment(inputObject: LineObject, inputLine: string) {\n\tif (Object.prototype.hasOwnProperty.call(inputObject, \"lineComment\")) {\n\t\tinputLine = inputLine + \";\" + inputObject.lineComment;\n\t}\n\treturn inputLine;\n}\n\nexport { autoSpaceTab, autoSpaceEnter };","import * as vscode from 'vscode';\nimport MumpsParseDb from './mumpsParseDb';\nimport { TokenType } from './mumpsLineParser';\nimport { isLintingFile } from './mumpsLinter';\nexport default class MumpsCodeActionProvider implements vscode.CodeActionProvider {\n\tprivate _document: vscode.TextDocument | null = null\n\tprivate _actualDiagnostic: vscode.Diagnostic\n\tprivate _actualParameter: string\n\tprivate _parseDb: MumpsParseDb\n\tprovideCodeActions(\n\t\tdocument: vscode.TextDocument,\n\t\trange: vscode.Range,\n\t\tcontext: vscode.CodeActionContext,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\ttoken: vscode.CancellationToken\n\t): vscode.ProviderResult<(vscode.Command | vscode.CodeAction)[]> {\n\t\tif (!isLintingFile(document.uri.fsPath)) {\n\t\t\tthis._parseDb = MumpsParseDb.getInstance(document)\n\t\t\tconst diagnostics = context.diagnostics;\n\t\t\tconst codeActions: vscode.CodeAction[] = diagnostics.map((diagnostic) => {\n\t\t\t\tlet fix: vscode.CodeAction = new vscode.CodeAction('No Solution', vscode.CodeActionKind.Empty);\n\t\t\t\tif (diagnostic.code) {\n\t\t\t\t\tconst parts = diagnostic.code.toString().split(\":\")\n\t\t\t\t\tconst errorCode = parts[0]\n\t\t\t\t\tthis._actualParameter = parts[1]\n\t\t\t\t\tthis._document = document\n\t\t\t\t\tthis._actualDiagnostic = diagnostic\n\t\t\t\t\tswitch (errorCode) {\n\t\t\t\t\t\tcase \"VarAlreadyNewed\":\n\t\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"NewedButNotUsed\":\n\t\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"NewHidesParam\":\n\t\t\t\t\t\t\tfix = this._removeNewVariable()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"VarNotNewed\":\n\t\t\t\t\t\t\tfix = this._varNotNewed()\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst lineTokens = this._parseDb.getLineTokens(range.end.line)\n\t\t\t\tif (lineTokens.length > 1 && lineTokens[lineTokens.length - 1].longName === \"SET\" && lineTokens[lineTokens.length - 2].longName === \"FOR\") {\n\t\t\t\t\tconst shortNames: boolean = lineTokens[lineTokens.length - 1].name.length === 1;\n\t\t\t\t\tconst isUppercase: boolean = lineTokens[lineTokens.length - 1].name[0] === \"S\"\n\t\t\t\t\tlet intendation = 0\n\t\t\t\t\tif (lineTokens[0].type === TokenType.intendation) {\n\t\t\t\t\t\tintendation = lineTokens[0].name.length;\n\t\t\t\t\t}\n\t\t\t\t\tfix.title = \"Create $ORDER-Loop\";\n\t\t\t\t\tfix.kind = vscode.CodeActionKind.QuickFix;\n\t\t\t\t\tfix.command = {\n\t\t\t\t\t\tcommand: \"mumps.generateForLoop\",\n\t\t\t\t\t\ttitle: \"Create $ORDER-Loop\",\n\t\t\t\t\t\targuments: [document, range, shortNames, isUppercase, intendation]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn fix;\n\t\t\t});\n\n\t\t\treturn codeActions;\n\t\t}\n\t}\n\tprivate _removeNewVariable(): vscode.CodeAction {\n\t\tconst fix = new vscode.CodeAction('Remove variable', vscode.CodeActionKind.QuickFix)\n\t\tfix.edit = new vscode.WorkspaceEdit()\n\t\tconst uri = this._document?.uri\n\t\tconst diagRange = this._actualDiagnostic.range\n\t\tconst line = diagRange.start.line\n\t\tlet startPosition = diagRange.start.character\n\t\tlet endPosition = diagRange.end.character\n\t\tconst tokens = this._parseDb.getLineTokens(line)\n\t\tconst lineContent = this._parseDb.getLine(line)\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tconst token = tokens[i]\n\t\t\tconst positionAfterToken = token.position + token.name.length\n\t\t\tif (token.position === startPosition) {\n\t\t\t\tif (lineContent[startPosition - 1] === \" \") { //First NEW argument or single argument\n\t\t\t\t\tif (lineContent[positionAfterToken] === \",\") {\n\t\t\t\t\t\tendPosition++\n\t\t\t\t\t} else { //Single NEW argument - delete NEW complete\n\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\tif (tokens[j].type === TokenType.keyword && tokens[j].longName === \"NEW\") {\n\t\t\t\t\t\t\t\tstartPosition = tokens[j].position\n\t\t\t\t\t\t\t\tif (i === tokens.length) { //NEW argument is last token in the line\n\t\t\t\t\t\t\t\t\twhile (startPosition > 0) {\n\t\t\t\t\t\t\t\t\t\tif (/\\s/.test(lineContent[startPosition - 1])) {\n\t\t\t\t\t\t\t\t\t\t\tstartPosition--\n\t\t\t\t\t\t\t\t\t\t} else break\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (positionAfterToken < lineContent.length && lineContent[positionAfterToken] === \" \") endPosition++\n\t\t\t\t\t}\n\t\t\t\t} else { //not the first NEW argument\n\t\t\t\t\tif (lineContent[startPosition - 1] === \",\") {\n\t\t\t\t\t\tstartPosition--\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tfix.edit.replace(uri!, new vscode.Range(\n\t\t\tnew vscode.Position(line, startPosition),\n\t\t\tnew vscode.Position(line, endPosition)\n\t\t), \"\")\n\t\treturn fix;\n\t}\n\tprivate _varNotNewed(): vscode.CodeAction {\n\t\tconst fix = new vscode.CodeAction('Add Variable to NEW-Statement', vscode.CodeActionKind.QuickFix);\n\t\tfix.edit = new vscode.WorkspaceEdit();\n\t\tconst diagnostic = this._actualDiagnostic\n\t\tconst line = diagnostic.range.start.line\n\t\tconst uri = this._document?.uri\n\t\tconst subroutineStartLine = this._getSubroutineStart(line)\n\t\tif (subroutineStartLine === line) {\n\t\t\tconst lineContent = this._parseDb.getLine(line)\n\t\t\tconst tokens = this._parseDb.getLineTokens(line)\n\t\t\tlet j = 1\n\t\t\tfor (; j < tokens.length; j++) {\n\t\t\t\tif (tokens[j].type !== TokenType.local) {\n\t\t\t\t\tj--\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst bracketPosition = tokens[j].position + tokens[j].name.length\n\t\t\tlet endReplace = bracketPosition + 1;\n\t\t\tif (/\\s/.test(lineContent[bracketPosition + 1])) endReplace++\n\t\t\tconst range = new vscode.Range(new vscode.Position(line, bracketPosition + 1), new vscode.Position(line, endReplace))\n\t\t\tfix.edit.replace(uri!, range, \"\\n\\tNEW \" + this._actualParameter + \"\\n\\t\")\n\t\t} else {\n\t\t\tfix.edit = this._getfixedNew(subroutineStartLine + 1, uri!, fix.edit)\n\t\t}\n\t\treturn fix;\n\t}\n\tprivate _getSubroutineStart(line: number): number {\n\t\tfor (let i = line; i >= 0; i--) {\n\t\t\tconst tokens = this._parseDb.getLineTokens(i);\n\t\t\tif (tokens.length > 0 &&\n\t\t\t\ttokens[0].type === TokenType.label &&\n\t\t\t\ttokens.length > 1 &&\n\t\t\t\ttokens[1].type === TokenType.local) { //Subroutine with parameters\n\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\tprivate _getfixedNew(line: number, uri: vscode.Uri, edit: vscode.WorkspaceEdit): vscode.WorkspaceEdit {\n\t\tconst lineCount = this._parseDb.getLineCount()\n\t\tlet i = line\n\t\tlet varStartPosition = 0\n\t\tconst variables: string[] = []\n\t\tfor (; i < lineCount; i++) {\n\t\t\tconst tokens = this._parseDb.getLineTokens(i)\n\t\t\tif (tokens.length === 0) continue\n\t\t\tif (tokens[0].type === TokenType.comment) continue\n\t\t\tif (tokens[0].type === TokenType.keyword && tokens[0].longName === \"NEW\" && tokens[0].isPostconditioned === false) {\n\t\t\t\tlet j = 1\n\t\t\t\tfor (; j < tokens.length; j++) {\n\t\t\t\t\tif (tokens[j].type !== TokenType.local) {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (j == 1) varStartPosition = tokens[j].position\n\t\t\t\t\tvariables.push(tokens[j].name)\n\t\t\t\t}\n\t\t\t\tvariables.push(this._actualParameter)\n\t\t\t\tvariables.sort()\n\t\t\t\tconst varString = variables.join(\",\")\n\t\t\t\tconst startPosition = new vscode.Position(i, varStartPosition)\n\t\t\t\tconst endPosition = new vscode.Position(i, tokens[j - 1].position + tokens[j - 1].name.length)\n\t\t\t\tedit.replace(uri, new vscode.Range(startPosition, endPosition), varString)\n\t\t\t\treturn edit\n\t\t\t} else break\n\t\t}\n\t\tedit.insert(uri!, new vscode.Position(i, 0), \"\\tNEW \" + this._actualParameter + \"\\n\")\n\t\treturn edit\n\t}\n\tpublic generateForLoop(document: vscode.TextDocument, range: vscode.Range, shortNames: boolean, isUppercase: boolean, intendation: number): void {\n\t\tvscode.window.showInputBox({ prompt: \"Enter loop variable including indices:\" }).then((variableName) => {\n\t\t\tif (variableName) {\n\t\t\t\tthis._parseDb = MumpsParseDb.getInstance(document)\n\t\t\t\tconst variableParts = variableName.split(\"(\");\n\t\t\t\tif (variableParts.length === 2) {\n\t\t\t\t\tlet forToken = \"for\"\n\t\t\t\t\tlet setToken = \"set\"\n\t\t\t\t\tlet orderToken = \"$order(\"\n\t\t\t\t\tlet quitToken = \"quit\"\n\t\t\t\t\tlet doToken = \"do\"\n\t\t\t\t\tif (shortNames) {\n\t\t\t\t\t\tforToken = \"f\"\n\t\t\t\t\t\tsetToken = \"s\"\n\t\t\t\t\t\torderToken = \"$o(\"\n\t\t\t\t\t\tquitToken = \"q\"\n\t\t\t\t\t\tdoToken = \"d\"\n\t\t\t\t\t}\n\t\t\t\t\tif (isUppercase) {\n\t\t\t\t\t\tforToken = forToken.toUpperCase();\n\t\t\t\t\t\tsetToken = setToken.toUpperCase();\n\t\t\t\t\t\torderToken = orderToken.toUpperCase();\n\t\t\t\t\t\tquitToken = quitToken.toUpperCase();\n\t\t\t\t\t\tdoToken = doToken.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tconst variableStart = variableParts[0] + \"(\";\n\t\t\t\t\tconst indices = variableParts[1].split(\",\");\n\t\t\t\t\tconst indexCount = indices.length\n\t\t\t\t\tlet bracketCounter = 0;\n\t\t\t\t\tfor (const char of indices[indexCount - 1]) {\n\t\t\t\t\t\tif (char === \"(\") {\n\t\t\t\t\t\t\tbracketCounter++;\n\t\t\t\t\t\t} else if (char === \")\") {\n\t\t\t\t\t\t\tbracketCounter--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bracketCounter < 0) {\n\t\t\t\t\t\tindices[indexCount - 1] = indices[indexCount - 1]!.slice(0, -1)\n\t\t\t\t\t}\n\t\t\t\t\tconst startIndex = this.getStartVariable(range.end.line, indices);\n\t\t\t\t\tlet forLoop = \" \" + indices[startIndex] + \"=\" + orderToken + variableStart\n\t\t\t\t\tfor (let i = 0; i <= startIndex; i++) {\n\t\t\t\t\t\tforLoop += indices[i]\n\t\t\t\t\t\tif (i < startIndex) forLoop += \",\"\n\t\t\t\t\t}\n\t\t\t\t\tforLoop += \")) \" + quitToken + \":\" + indices[0] + '=\"\"  ' + doToken + \"\\n\";\n\t\t\t\t\tif (indexCount > startIndex + 1) {\n\t\t\t\t\t\tfor (let i = startIndex + 1; i < indexCount; i++) {\n\t\t\t\t\t\t\tforLoop += \"\\t\" + \". \".repeat(i - startIndex + intendation) + setToken + \" \" + indices[i] + '=\"\" ' + forToken + \"  \" +\n\t\t\t\t\t\t\t\tsetToken + \" \" + indices[i] + \"=\" + orderToken + variableStart + indices[0] + \",\"\n\t\t\t\t\t\t\tfor (let j = 1; j <= i; j++) {\n\t\t\t\t\t\t\t\tforLoop += indices[j];\n\t\t\t\t\t\t\t\tif (j < i) { forLoop += \",\" }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tforLoop += \")) \" + quitToken + \":\" + indices[i] + '=\"\"  ' + doToken + \"\\n\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tforLoop += \"\\t\" + \". \".repeat(indexCount - startIndex + intendation)\n\t\t\t\t\t}\n\t\t\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\t\t\tif (!editor) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst line = document.lineAt(range.end.line);\n\t\t\t\t\tconst lineText = line.text.trimEnd()\n\n\t\t\t\t\teditor.edit((editBuilder) => {\n\t\t\t\t\t\teditBuilder.replace(line.range, lineText + forLoop);\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t// Setze den Cursor an das Ende des eingefügten Textes\n\t\t\t\t\t\tconst newEndPosition = new vscode.Position(range.end.line + indexCount - startIndex, 99);\n\t\t\t\t\t\teditor.selection = new vscode.Selection(newEndPosition, newEndPosition);\n\t\t\t\t\t\teditor.revealRange(new vscode.Range(newEndPosition, newEndPosition));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\tprivate getStartVariable(startLine: number, indices: string[]): number {\n\t\tlet startIndex = 0\n\t\tconst lineTokens = this._parseDb.getLineTokens(startLine)\n\t\tconst tokenCount = lineTokens.length\n\t\tfor (let i = tokenCount - 3; i >= 0; i--) {\n\t\t\tif (lineTokens[i].longName === \"SET\") {\n\t\t\t\tfor (let j = i + 1; j < tokenCount - 2; j++) {\n\t\t\t\t\tif (lineTokens[j].type === TokenType.local) {\n\t\t\t\t\t\tstartIndex = indices.indexOf(lineTokens[j].name)\n\t\t\t\t\t\tif (startIndex === -1) {\n\t\t\t\t\t\t\tstartIndex = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLine > 0) {\n\t\t\tconst lineTokens = this._parseDb.getLineTokens(startLine - 1)\n\t\t\tconst tokenCount = lineTokens.length\n\t\t\tfor (let i = tokenCount - 2; i >= 0; i--) {\n\t\t\t\tif (lineTokens[i].longName === \"SET\") {\n\t\t\t\t\tfor (let j = i + 1; j < tokenCount - 1; j++) {\n\t\t\t\t\t\tif (lineTokens[j].type === TokenType.local) {\n\t\t\t\t\t\t\tstartIndex = indices.indexOf(lineTokens[j].name)\n\t\t\t\t\t\t\tif (startIndex === -1) {\n\t\t\t\t\t\t\t\tstartIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn startIndex\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsLineParser } from './mumpsLineParser';\nconst parser = new MumpsLineParser;\nexport default function expandCompress(state: vscode.Memento) {\n\tlet doExpand = true;\n\tconst editor = vscode.window.activeTextEditor\n\tif (editor) {\n\t\tconst filename = editor.document.fileName;\n\t\tif (state.get(filename + \"_expandState\") === true) {\n\t\t\tdoExpand = false;\n\t\t\tstate.update(filename + \"_expandState\", false);\n\t\t} else {\n\t\t\tstate.update(filename + \"_expandState\", true);\n\t\t}\n\t\tconst document = editor.document.getText();\n\t\tconst lines = document.split(\"\\n\")\n\t\tconst lineCount = lines.length;\n\t\tif (lineCount) {\n\t\t\tconst lastLineLength = lines[lineCount - 1].length;\n\t\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\t\tconst info = parser.expandCompressLine(lines[i], doExpand);\n\t\t\t\tif (info.errorText === '') {\n\t\t\t\t\tlines[i] = info.lineText;\n\t\t\t\t}\n\t\t\t}\n\t\t\teditor.edit(editBuilder => {\n\t\t\t\teditBuilder.replace(new vscode.Range(0, 0, lineCount, lastLineLength), lines.join(\"\\n\"));\n\t\t\t})\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsLineParser, LabelInformation, LineObject, entryref } from './mumpsLineParser';\r\nimport * as fs from 'fs'\r\n\r\nenum LineStatus {\r\n\tnoJumplabel, jumplabel\r\n}\r\n\r\ninterface ItemHint {\r\n\tlineStatus: LineStatus,\r\n\tstartString: string\r\n}\r\ninterface LabelItem {\r\n\troutine: string,\r\n\tlabel: string,\r\n\tline: string\r\n}\r\ninterface DbItem {\r\n\tlabels: LabelItem[],\r\n\troutines: { path: string }\r\n}\r\nexport default class CompletionItemProvider {\r\n\t/**\r\n * Provides the completion items for the supplied words.\r\n *\r\n * @param {TextDocument} document\r\n * @param {Position} position\r\n * @param {CancellationToken} token\r\n * @returns\r\n */\r\n\tprivate _labelsReady: boolean;\r\n\tprivate _labelDB: DbItem;\r\n\tprivate _filesToCheck: number;\r\n\tprivate _dbfile: string;\r\n\tprivate _document: vscode.TextDocument;\r\n\tconstructor(labeldb: string) {\r\n\t\tthis._labelsReady = false;\r\n\t\tthis._dbfile = labeldb;\r\n\t\tthis._refreshLabelDB();\r\n\t}\r\n\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tthis._document = document;\r\n\t\tconst line = document.getText(new vscode.Range(new vscode.Position(position.line, 0), position))\r\n\t\tconst parsed = MumpsLineParser.parseLine(line);\r\n\t\tconst status = getLineStatus(parsed, position.character);\r\n\t\tthis._refreshLocalLabels(document);\r\n\t\tlet completionItems: Array<vscode.CompletionItem> = [];\r\n\t\tif (this._labelsReady && status.lineStatus === LineStatus.jumplabel) {\r\n\t\t\tconst replaceRange = new vscode.Range(new vscode.Position(position.line, position.character - status.startString.length), position)\r\n\t\t\tcompletionItems = this._findLabel(status.startString, completionItems, replaceRange);\r\n\t\t}\r\n\t\treturn completionItems;\r\n\t}\r\n\tprivate _refreshLabelDB() { // Look for all Labels in .m-Routines and them + Comments\r\n\t\tif (!fs.existsSync(this._dbfile)) {\r\n\t\t\tconst db = {\r\n\t\t\t\tlabels: [{ routine: '', label: '' }],\r\n\t\t\t\troutines: {}\r\n\t\t\t}\r\n\t\t\tfs.writeFileSync(this._dbfile, JSON.stringify(db));\r\n\t\t}\r\n\t\tfs.readFile(this._dbfile, (err, data) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tthis._labelDB = JSON.parse(data.toString());\r\n\t\t\t\tlet dbChanged = false;\r\n\t\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\r\n\t\t\t\t\tthis._filesToCheck = files.length;\r\n\t\t\t\t\tfor (let i = 0; i < files.length; i++) {\r\n\t\t\t\t\t\tconst path = files[i].fsPath;\r\n\t\t\t\t\t\tfs.stat(path, (err, stats) => {\r\n\t\t\t\t\t\t\tif (!err) {\r\n\t\t\t\t\t\t\t\tconst ms = this._labelDB.routines[path];\r\n\t\t\t\t\t\t\t\tif (ms === undefined || stats.mtimeMs > ms) {\r\n\t\t\t\t\t\t\t\t\tthis._labelDB.routines[path] = stats.mtimeMs;\r\n\t\t\t\t\t\t\t\t\tdbChanged = true;\r\n\t\t\t\t\t\t\t\t\tif (stats.size < 50000) {  //parse only Files <50K\r\n\t\t\t\t\t\t\t\t\t\tthis._refreshFileLabels(path);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._checkReady(dbChanged);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._labelsReady = true;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tprivate _checkReady(dbChanged: boolean) {\t// Check if all .m Files are processed and save LabelDB then\r\n\t\tif (--this._filesToCheck === 0) {\r\n\t\t\tif (dbChanged) {\r\n\t\t\t\tfs.writeFile(this._dbfile, JSON.stringify(this._labelDB), (err) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tvscode.window.showErrorMessage(\"Error writing Label DB\");\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate _refreshLocalLabels(document: vscode.TextDocument) {\r\n\t\tlet routine: string = document.fileName.replace(/\\\\/g, '/').split('/').pop() ?? \"\";\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tconst lines = document.getText().split('\\n');\r\n\t\tconst existingLabels = this._labelDB.labels.filter((label) => label.routine === routine);\r\n\t\t// Create a map of existing labels for quick lookup\r\n\t\tconst existingLabelsMap = new Map(existingLabels.map((label) => [label.label, label]));\r\n\r\n\t\t// Process each line in the document\r\n\t\tlet labelsinDocumentChanged = false;\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tif (routine) {\r\n\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t// Handle special case for the first line\r\n\t\t\t\t\tconst firstLineLabel = { label: '*FL', routine, line: lines[0] };\r\n\t\t\t\t\tif (!existingLabelsMap.has('*FL') || existingLabelsMap.get('*FL')?.line !== firstLineLabel.line) {\r\n\t\t\t\t\t\t// Add or update the first line label\r\n\t\t\t\t\t\texistingLabelsMap.set('*FL', firstLineLabel);\r\n\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst labelMatch = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/);\r\n\t\t\t\tif (labelMatch) {\r\n\t\t\t\t\tconst labelName = labelMatch[0];\r\n\t\t\t\t\tconst labelLine = { label: labelName, routine, line: lines[i] };\r\n\t\t\t\t\tif (existingLabelsMap.has(labelName)) {\r\n\t\t\t\t\t\t// Label exists, check if it's different\r\n\t\t\t\t\t\tconst existingLabel = existingLabelsMap.get(labelName);\r\n\t\t\t\t\t\tif (existingLabel?.line !== labelLine.line) {\r\n\t\t\t\t\t\t\t// Update the existing label\r\n\t\t\t\t\t\t\texistingLabelsMap.set(labelName, labelLine);\r\n\t\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Label doesn't exist, add it\r\n\t\t\t\t\t\texistingLabelsMap.set(labelName, labelLine);\r\n\t\t\t\t\t\tlabelsinDocumentChanged = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (labelsinDocumentChanged) {\r\n\t\t\tconst updatedLabels: LabelItem[] = [];\r\n\t\t\texistingLabelsMap.forEach((labelItem, labelName) => {\r\n\t\t\t\tupdatedLabels.push({ label: labelName, routine, line: labelItem.line })\r\n\t\t\t})\r\n\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\treturn label.routine !== routine;\r\n\t\t\t})\r\n\t\t\tthis._labelDB.labels.push(...updatedLabels);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _refreshFileLabels(path: string) {  // Refresh all Labels of a changed .m File\r\n\t\tlet routine = path.replace(/\\\\/g, '/').split('/').pop();\r\n\t\troutine = routine?.split('.')[0].replace('_', '%') ?? \"\";\r\n\t\tfs.readFile(path, 'utf8', (err, content: string) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconst lines = content.split('\\n');\r\n\t\t\t\tlet label: RegExpMatchArray | null = null;\r\n\t\t\t\tthis._labelDB.labels = this._labelDB.labels.filter((label) => {\r\n\t\t\t\t\treturn label.routine !== routine;\r\n\t\t\t\t})\r\n\t\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\t\tif (routine) {\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: '*FL', routine, line: lines[0] });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlabel = lines[i].match(/^[%A-Za-z0-9][A-Za-z0-9]{0,31}/)\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tthis._labelDB.labels.push({ label: label[0], routine, line: lines[i] })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._checkReady(true);\r\n\t\t});\r\n\t}\r\n\tprivate _findLabel(startstring: string, list: Array<vscode.CompletionItem>, replaceRange: vscode.Range) {\r\n\t\t//let hits = 0;\r\n\t\tlet hitlist: LabelItem[] = [];\r\n\t\tconst localLabels: LabelInformation[] = MumpsLineParser.getLabels(this._document.getText());\r\n\t\tlet sortText = '';\r\n\t\tif (startstring.charAt(0) === '^') {\r\n\t\t\tconst suchstring = startstring.substring(1);\r\n\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\treturn item.routine.startsWith(suchstring);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (startstring.indexOf('^') !== -1) {\r\n\t\t\t\tconst label = startstring.split('^')[0];\r\n\t\t\t\tconst routinepart = startstring.split('^')[1];\r\n\t\t\t\thitlist = this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label === label && item.routine.startsWith(routinepart);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < localLabels.length; i++) {\r\n\t\t\t\t\tif (localLabels[i].name.startsWith(startstring)) {\r\n\t\t\t\t\t\thitlist.push({ routine: '', label: localLabels[i].name, line: this._document.lineAt(localLabels[i].line).text })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thitlist = hitlist.concat(this._labelDB.labels.filter((item) => {\r\n\t\t\t\t\tconst fits = item.label.startsWith(startstring);\r\n\t\t\t\t\treturn fits;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < hitlist.length && i < 100; i++) {\r\n\t\t\tsortText = '100';\r\n\t\t\tconst item = hitlist[i];\r\n\t\t\tlet label = item.routine !== '' ? item.label + '^' + item.routine : item.label;\r\n\t\t\tif (label === startstring) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (item.label === \"*FL\") {\r\n\t\t\t\tif (!startstring.startsWith('^')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tlabel = '^' + item.routine;\r\n\t\t\t}\r\n\t\t\tlet detail = ''\r\n\t\t\tif (item.line.charAt(item.label.length) === '(') {\r\n\t\t\t\tif (item.line.indexOf(')') !== -1) {\r\n\t\t\t\t\tdetail = item.line.split(')')[0] + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (item.line.indexOf(';') !== -1) {\r\n\t\t\t\tdetail += item.line.substring(item.line.indexOf(';') + 1);\r\n\t\t\t}\r\n\t\t\tif (detail.length > 0) {\r\n\t\t\t\tsortText = '099';\r\n\t\t\t} //prefer documented lables\r\n\t\t\tif (item.routine === '') { // local labels first\r\n\t\t\t\tsortText = '098';\r\n\t\t\t}\r\n\r\n\t\t\tlist.push({ label, detail, sortText, range: replaceRange });\r\n\t\t}\r\n\t\treturn list;\r\n\t}\r\n}\r\nfunction getLineStatus(parsed: LineObject, position: number): ItemHint {\r\n\tlet lineStatus = LineStatus.noJumplabel\r\n\tlet startString = \"\"\r\n\tif (parsed.lineRoutines && parsed.lineRoutines.length > 0) {\r\n\t\tfor (const i in parsed.lineRoutines) {\r\n\t\t\tconst cmd = parsed.lineRoutines[i];\r\n\t\t\tif (cmd.mPostCondition !== \"\" && position >= cmd.pcPosition && position <= (cmd.pcPosition + cmd.mPostCondition.length)) {\r\n\t\t\t\tstartString = cmd.mPostCondition.substring(0, position - cmd.pcPosition);\r\n\t\t\t\tif (startString.indexOf(\"$$\") !== -1) {\r\n\t\t\t\t\tconst lastIndex = startString.lastIndexOf(\"$$\");\r\n\t\t\t\t\tstartString = startString.slice(lastIndex + 2);\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (cmd.mArguments !== \"\" && position >= cmd.argPosition && position <= (cmd.argPosition + cmd.mArguments.length)) {\r\n\t\t\t\tstartString = cmd.mArguments.substring(0, position - cmd.argPosition)\r\n\t\t\t\tif (cmd.mCommand.match(/[D|DO|G|GOTO|J|JOB]/i)) {\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (startString.indexOf(\"$$\") !== -1) {\r\n\t\t\t\t\tconst lastIndex = startString.lastIndexOf(\"$$\");\r\n\t\t\t\t\tstartString = startString.slice(lastIndex + 2);\r\n\t\t\t\t\tif (startString.match(entryref)) {\r\n\t\t\t\t\t\tlineStatus = LineStatus.jumplabel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { lineStatus, startString }\r\n}\r\n\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsConfigurationProvider implements vscode.DebugConfigurationProvider {\n\n\t/**\n\t * Message a debug configuration just before a debug session is being launched,\n\t * e.g. add all missing attributes to the debug configuration.\n\t*/\n\tstatic resolveDebugConfiguration(folder: vscode.WorkspaceFolder | undefined,\n\t\tconfig: vscode.DebugConfiguration): vscode.ProviderResult<vscode.DebugConfiguration> {\n\n\t\t// if launch.json is missing or empty\n\t\tif (!config.type && !config.request && !config.name) {\n\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\tif (editor && editor.document.languageId === 'mumps') {\n\t\t\t\tconfig.type = 'mumps';\n\t\t\t\tconfig.name = 'Launch';\n\t\t\t\tconfig.request = 'launch';\n\t\t\t\tconfig.program = '${file}';\n\t\t\t\tconfig.stopOnEntry = true;\n\t\t\t\tconfig.hostname = '192.168.0.1';\n\t\t\t\tconfig.localRoutinesPath = 'y:\\\\';\n\t\t\t\tconfig.port = 9000;\n\t\t\t}\n\t\t}\n\n\t\tif (!config.program) {\n\t\t\treturn vscode.window.showInformationMessage(\"Cannot find a program to debug\").then(() => {\n\t\t\t\treturn undefined;\t// abort launch\n\t\t\t});\n\t\t}\n\n\t\treturn config;\n\t}\n}\n","/*\r\n\tConnector to MDEBUG-Server by Jens Wulf\r\n\tLicense: LGPL\r\n*/\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { EventEmitter } from 'events';\r\nimport { existsSync, readFileSync } from 'fs';\r\nimport { Socket } from \"net\";\r\nimport * as vscode from 'vscode';\r\nimport { MumpsLineParser, TokenType } from './mumpsLineParser';\r\nimport { getLocalRoutinesPath, getWworkspaceFolder } from './extension';\r\nexport interface MumpsBreakpoint {\r\n\tid: number,\r\n\tfile: string,\r\n\tline: number,\r\n\tverified: boolean,\r\n\tcondition?: string\r\n}\r\nexport interface FilePosition {\r\n\tfile: string,\r\n\tline: number,\r\n\tlocal: boolean\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\ninterface FrameInfo {\r\n\tindex: number,\r\n\tname: string,\r\n\tfile: string,\r\n\tline: number\r\n}\r\ninterface StackInfo {\r\n\tframes: FrameInfo[];\r\n\tcount: number;\r\n}\r\ntype MumpsVariable = {\r\n\t[variableType in VariableType]: {\r\n\t\t[variableName: string]: string;\r\n\t};\r\n};\r\nexport type MumpsGlobal = {\r\n\t[variableName: string]:\r\n\t{\r\n\t\tvalue: string,\r\n\t\tisDefined: boolean,\r\n\t\thasChildren: boolean,\r\n\t\tmoreToFollow: boolean\r\n\t}\r\n}\r\ninterface IVariables {\r\n\t[varName: string]: string;\r\n}\r\nenum connectState {\r\n\tdisconnected, waitingforStart, waitingForVars, waitingForBreakpoints, waitingForSingleVar, waitingForSingleVarContent, waitingForErrorReport, waitingForHints, waitingForGlobals\r\n}\r\n\r\nexport enum VariableType {\r\n\tsystem, local\r\n}\r\n\r\nexport class MumpsConnect extends EventEmitter {\r\n\tprivate _socket = new Socket();\r\n\tprivate _connectState: connectState;\r\n\tprivate _readedData: string;\r\n\tprivate _mVars: MumpsVariable;\r\n\tprivate _globals: MumpsGlobal;\r\n\tprivate _mStack: Array<string>;\r\n\tprivate _activeBreakpoints: Array<string>;\r\n\tprivate _event = new EventEmitter();\r\n\tprivate _hostname: string;\r\n\tprivate _port: number;\r\n\tprivate _errorLines: string[];\r\n\tprivate _hints: string[];\r\n\tprivate _breakPoints: MumpsBreakpoint[];\r\n\tprivate _breakpointId = 1;\r\n\tprivate _commandQueue: string[];\r\n\tprivate _logging = false;\r\n\tprivate _singleVar = \"\";\r\n\tprivate _singleVarContent = \"\";\r\n\tprivate _lastError = \"\";\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis._commandQueue = [];\r\n\t\tthis._connectState = connectState.disconnected;\r\n\t\tthis._readedData = \"\";\r\n\t\tthis._mVars = {\r\n\t\t\t[VariableType.system]: {},\r\n\t\t\t[VariableType.local]: {}\r\n\t\t};\r\n\t\tthis._globals = {};\r\n\t\tthis._mStack = [];\r\n\t\tthis._activeBreakpoints = [];\r\n\t\tthis._breakPoints = [];\r\n\t\tthis._errorLines = [];\r\n\t\tthis._singleVar = \"\";\r\n\t\tthis._singleVarContent = \"\";\r\n\t\tthis._hints = [];\r\n\t\tthis._event.on('varsComplete', () => {\r\n\t\t\tif (Object.keys(this._mVars[VariableType.system]).length > 0) {\r\n\t\t\t\tconst internals = this._mVars[VariableType.system];\r\n\t\t\t\tthis.checkEvents(internals);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic async init(hostname: string, port: number): Promise<Socket> {\r\n\t\tthis._hostname = hostname;\r\n\t\tthis._port = port;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._socket.connect(this._port, this._hostname, () => {\r\n\t\t\t\tthis._log(\"Debug-Server connected\\n\");\r\n\t\t\t\tvscode.commands.executeCommand('setContext', 'mumps.showGlobals', true)\r\n\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\tthis._socket.on('data', (chunk) => {\r\n\t\t\t\t\tthis._readedData += chunk.toString();\r\n\t\t\t\t\tlet n = this._readedData.indexOf('\\n');\r\n\t\t\t\t\twhile (n !== -1) {\r\n\t\t\t\t\t\tconst data = this._readedData.substring(0, n);\r\n\t\t\t\t\t\tthis.processLine(data)\r\n\t\t\t\t\t\tthis._readedData = this._readedData.substring(n + 1);\r\n\t\t\t\t\t\tn = this._readedData.indexOf('\\n');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tresolve(this._socket);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('error', (error) => {\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t\tthis._socket.on('end', () => {\r\n\t\t\t\tthis._connectState = connectState.disconnected\r\n\t\t\t\tvscode.commands.executeCommand('setContext', 'mumps.showGlobals', false)\r\n\t\t\t})\r\n\t\t})\r\n\t\t// Put a friendly message on the terminal of the server.\r\n\t}\r\n\tprivate _log(msg: string): void {\r\n\t\tif (this._logging) { console.log(msg); }\r\n\t}\r\n\tprivate processLine(line: string): void {\r\n\t\tthis._log(\"Line:  \" + line);\r\n\r\n\t\tlet varname: string;\r\n\t\tlet value: string;\r\n\t\tlet vartype: string;\r\n\t\tswitch (this._connectState) {\r\n\t\t\tcase connectState.waitingforStart: {\r\n\t\t\t\tif (line === \"***STARTVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForVars;\r\n\t\t\t\t\tthis._mStack = [];\r\n\t\t\t\t\tthis._mVars = {\r\n\t\t\t\t\t\t[VariableType.system]: {},\r\n\t\t\t\t\t\t[VariableType.local]: {}\r\n\t\t\t\t\t};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTBP\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForBreakpoints;\r\n\t\t\t\t\tthis._activeBreakpoints = [];\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***SINGLEVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVar;\r\n\t\t\t\t\tthis._singleVar = \"\";\r\n\t\t\t\t\tthis._singleVarContent = \"\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***ENDPROGRAM\") {\r\n\t\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\t\tthis._socket.end();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***BEGINERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForErrorReport;\r\n\t\t\t\t\tthis._errorLines = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForHints;\r\n\t\t\t\t\tthis._hints = [];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line === \"***STARTGBL\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForGlobals;\r\n\t\t\t\t\tthis._globals = {};\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForVars: {\r\n\t\t\t\tif (line === \"***ENDVAR\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tdelete this._mVars[VariableType.local][\"%STEP\"];\t\t\t//Remove internal debugger variables\r\n\t\t\t\t\tdelete this._mVars[VariableType.local][\"%PROGNAME\"];\r\n\t\t\t\t\tthis._event.emit(\"varsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvartype = line.substring(0, 1); //I=internal,V=local Variable,S=Stackframe\r\n\t\t\t\t\tif (vartype === \"S\") {\r\n\t\t\t\t\t\tthis._mStack.push(line.substring(2));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(0, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tconst variableType = vartype === \"V\" ? VariableType.local : VariableType.system;\r\n\t\t\t\t\tthis._mVars[variableType][varname] = value;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForBreakpoints: {\r\n\t\t\t\tif (line === \"***ENDBP\") {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis.verifyBreakpoints();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._log(line);\r\n\t\t\t\t\tthis._activeBreakpoints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVar: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else if (line === \"***SINGLEVARCONTENT\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingForSingleVarContent;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVar += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForSingleVarContent: {\r\n\t\t\t\tif (line === \"***SINGLEEND\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('SingleVarReceived', this._event, this._singleVar, this._singleVarContent);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._singleVarContent += line;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForErrorReport: {\r\n\t\t\t\tif (line === \"***ENDERRCHK\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('ErrorreportReceived', this._event, this._errorLines);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._errorLines.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForGlobals: {\r\n\t\t\t\tif (line === \"***ENDGBL\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit(\"gblsComplete\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet moreToFollow = false;\r\n\t\t\t\t\tlet indicator = parseInt(line[0]);\r\n\t\t\t\t\tif (indicator > 3) {\r\n\t\t\t\t\t\tmoreToFollow = true;\r\n\t\t\t\t\t\tindicator -= 4;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst hasChildren = indicator === 2;\r\n\t\t\t\t\tconst isDefined = line[1] === \"1\";\r\n\t\t\t\t\tvarname = line.substring(2, line.indexOf('='));\r\n\t\t\t\t\twhile ((varname.split('\"').length - 1) % 2 !== 0) {\r\n\t\t\t\t\t\tvarname = line.substring(2, line.indexOf('=', varname.length + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = line.substring(varname.length + 3).replace(/^\"/, \"\").replace(/\"$/, \"\");\r\n\t\t\t\t\tthis._globals[varname] = { value, hasChildren, isDefined, moreToFollow }\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase connectState.waitingForHints: {\r\n\t\t\t\tif (line === \"***ENDHINTS\") {\r\n\t\t\t\t\tthis._connectState = connectState.waitingforStart;\r\n\t\t\t\t\tthis._event.emit('HintsReceived', this._event, this._hints);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._hints.push(line);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tconsole.error(\"Unexpected Message: \" + line);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate writeln(message: string): void {\r\n\t\tthis._commandQueue.push(message);\r\n\t\tif (this._commandQueue.length > 1000) {\r\n\t\t\tconsole.error(\"Too many Commands in Queue: Check Debugger Connection\");\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\t\tif (this._connectState !== connectState.disconnected) {\r\n\t\t\twhile (this._commandQueue.length) {\r\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\tmessage = this._commandQueue.shift()!;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis._socket.write(message + \"\\n\");\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tthis._commandQueue.unshift(message);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate sendBreakpoint(file: string, line: number, onOff: boolean, condition?: string): void {\r\n\t\tif (condition === undefined) { condition = \"\"; }\r\n\t\tif (onOff) { this.writeln(\"SETBP;\" + file + \";\" + line + \";\" + condition); }\r\n\t\telse { this.writeln(\"CLEARBP;\" + file + \";\" + line); }\r\n\t}\r\n\tpublic start(file: string, stopAtStart: boolean): void {\r\n\t\tif (stopAtStart) {\r\n\t\t\tif (file.indexOf(\"^\")) {\r\n\t\t\t\t//Stop direct at given Label not at first line\r\n\t\t\t\tthis.sendBreakpoint(file, 0, true, \"\");\r\n\t\t\t} else {\r\n\t\t\t\tthis.sendBreakpoint(file, 1, true, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.requestBreakpoints();\r\n\t\tthis.writeln(\"START;\" + file);\r\n\t}\r\n\tpublic step(type: string): void {\r\n\t\tthis.writeln(type);\r\n\t}\r\n\tpublic continue(): void {\r\n\t\tthis.writeln(\"CONTINUE\");\r\n\t}\r\n\tpublic disconnect(): void {\r\n\t\tthis.writeln(\"RESET\");\r\n\t\tthis._socket.end();\r\n\t}\r\n\tpublic requestBreakpoints(): void {\r\n\t\tthis.writeln(\"REQUESTBP\");\r\n\t}\r\n\tpublic restart(file: string): void {\r\n\t\tthis.writeln(\"RESTART;\" + file);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the actual Stack\r\n\t */\r\n\tpublic stack(startFrame: number, endFrame: number): StackInfo {\r\n\r\n\t\tconst frames = new Array<FrameInfo>();\r\n\r\n\t\tfor (let i = startFrame; i < this._mStack.length; i++) {\r\n\t\t\tconst position = this._mStack[i];\r\n\t\t\tif (position.indexOf(\"^\") !== -1) {\r\n\t\t\t\tconst fileposition = convertMumpsPosition(position);\r\n\t\t\t\tframes.push({\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tname: `${position}(${i})`,\r\n\t\t\t\t\tfile: fileposition.file,\r\n\t\t\t\t\tline: fileposition.line\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tframes: frames,\r\n\t\t\tcount: Math.min(frames.length, endFrame)\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/*\r\n\t * Set breakpoint in file with given line.\r\n\t */\r\n\tpublic setBreakPoint(file: string, breakpoints: DebugProtocol.SourceBreakpoint[] | undefined): DebugProtocol.Breakpoint[] {\r\n\t\tconst confirmedBreakpoints: DebugProtocol.Breakpoint[] = [];\r\n\t\tfile = file.replace(/\\\\/g, \"/\");\r\n\t\tif (breakpoints) {\r\n\t\t\tfor (let i = 0; i < breakpoints.length; i++) {\r\n\t\t\t\tconst breakpoint = breakpoints[i];\r\n\t\t\t\tconst line = breakpoint.line\r\n\t\t\t\tconfirmedBreakpoints.push({ id: this._breakpointId, verified: false })\r\n\t\t\t\tconst newBreakpoint = { verified: false, file, line, id: this._breakpointId++ };\r\n\t\t\t\tconst existingBreakpoint = this._breakPoints.find(bp => bp.file === file && bp.line === line);\r\n\t\t\t\tif (!existingBreakpoint) {\r\n\t\t\t\t\tthis._breakPoints.push(newBreakpoint);\r\n\t\t\t\t} else {\r\n\t\t\t\t\texistingBreakpoint.condition = breakpoint.condition;\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendBreakpoint(file, line, true, breakpoint.condition);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn confirmedBreakpoints;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear breakpoint in file with given line.\r\n\t */\r\n\tpublic clearBreakPoint(file: string, line: number): MumpsBreakpoint | undefined {\r\n\t\tconst bps = this._breakPoints;\r\n\t\tif (bps) {\r\n\t\t\tconst index = bps.findIndex(bp => bp.file === file && bp.line === line);\r\n\t\t\tif (index >= 0) {\r\n\t\t\t\tconst bp = bps[index];\r\n\t\t\t\tthis.sendBreakpoint(file, bp.line, false);\r\n\t\t\t\tbps.splice(index, 1);\r\n\t\t\t\treturn bp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/*\r\n\t * Clear all breakpoints\r\n\t */\r\n\tpublic clearBreakpoints(file: string): void {\r\n\t\tthis.writeln(\"CLEARBP;\" + file);\r\n\t}\r\n\r\n\tprivate verifyBreakpoints(): void {\r\n\t\tconst merk: boolean[] = [];\r\n\t\tthis._breakPoints.forEach(bp => {\r\n\t\t\tbp.verified = false;\r\n\t\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\t\tconst internalBp = convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tinternalBp.file = MumpsConnect.normalizeDrive(internalBp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tbp.file = MumpsConnect.normalizeDrive(bp.file.replace(/\\\\/g, \"/\"));\r\n\t\t\t\tif (internalBp.file === bp.file && bp.line === internalBp.line + 1) {\r\n\t\t\t\t\tbp.verified = true;\r\n\t\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t\t\tmerk[i] = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!bp.verified) { this.sendEvent('breakpointValidated', bp); }\r\n\t\t});\r\n\t\tfor (let i = 0; i < this._activeBreakpoints.length; i++) {\r\n\t\t\tif (!merk[i]) {\r\n\t\t\t\tconst internalBp = convertMumpsPosition(this._activeBreakpoints[i])\r\n\t\t\t\tconst bp: MumpsBreakpoint = { 'verified': true, 'file': internalBp.file, 'line': internalBp.line + 1, 'id': this._breakpointId++ }\r\n\t\t\t\tthis.sendEvent('breakpointValidated', bp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate static normalizeDrive(path: string): string {\r\n\t\tconst parts = path.split(':');\r\n\t\tif (parts.length === 2) {\r\n\t\t\treturn parts[0].toLowerCase() + ':' + parts[1];\r\n\t\t} else {\r\n\t\t\treturn path;\r\n\t\t}\r\n\t}\r\n\tpublic async getGlobals(keys: string, searchInGlobal?: string): Promise<MumpsGlobal> {\r\n\t\tif (searchInGlobal !== undefined) {\r\n\t\t\tthis.writeln(\"SEARCHGBL;\" + searchInGlobal + \";\" + keys)\r\n\t\t} else {\r\n\t\t\tthis.writeln(\"GETGBL;\" + keys);\r\n\t\t}\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\t// Listen for the \"gblsComplete\" event.\r\n\t\t\tconst gblsCompleteListener = () => {\r\n\t\t\t\t// Unsubscribe from the event to avoid memory leaks.\r\n\t\t\t\tthis._event.removeListener(\"gblsComplete\", gblsCompleteListener);\r\n\r\n\t\t\t\t// Resolve the Promise with the received value.\r\n\t\t\t\tresolve(this._globals);\r\n\t\t\t};\r\n\r\n\t\t\t// Subscribe to the \"gblsComplete\" event.\r\n\t\t\tthis._event.on(\"gblsComplete\", gblsCompleteListener);\r\n\t\t});\r\n\t}\r\n\tpublic getVariables(type: VariableType): { [variableName: string]: string } {\r\n\t\treturn this._mVars[type];\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param lines M-Code to check\r\n\t * @returns Error-Report by Mumps-Compiler\r\n\t */\r\n\tpublic async checkRoutine(lines: string[]): Promise<string[]> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._event.on('ErrorreportReceived', function ErrorreportReceived(event: EventEmitter, errorLines: string[]) {\r\n\t\t\t\tevent.removeListener('ErrorreportReceived', ErrorreportReceived);\r\n\t\t\t\terrorLines = errorLines.filter(line => !line.includes(\"I-SRCNAM\"));\r\n\t\t\t\tfor (let i = 0; i < errorLines.length; i++) {\r\n\t\t\t\t\tif (errorLines[i].indexOf(\"E-LABELMISSING\")) {\r\n\t\t\t\t\t\tconst label = errorLines[i].match(/: ([A-Za-z%0-9][A-Za-z0-9]*)/)\r\n\t\t\t\t\t\tif (label !== null && label.length > 1) {\r\n\t\t\t\t\t\t\tconst searchLabel = label[1];\r\n\t\t\t\t\t\t\tfor (let j = 0; j < lines.length; j++) {\r\n\t\t\t\t\t\t\t\tif (lines[j].indexOf(searchLabel) !== -1) {\r\n\t\t\t\t\t\t\t\t\tconst lineInfo = new MumpsLineParser().analyzeLine(lines[j]);\r\n\t\t\t\t\t\t\t\t\tif (lineInfo.tokens.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tfor (let k = 0; k < lineInfo.tokens.length; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (lineInfo.tokens[k].type === TokenType.entryref && lineInfo.tokens[k].name === searchLabel) {\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorLines[i] = (lineInfo.tokens[k].position + 1) + \";\" + (j + 1) + \";\" + errorLines[i].substring(3);\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresolve(errorLines);\r\n\t\t\t});\r\n\t\t\tthis.writeln(\"ERRCHK\");\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t\tthis.writeln(lines[i]);\r\n\t\t\t}\r\n\t\t\tthis.writeln(\"***ENDPROGRAM\");\r\n\t\t})\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param expression Name of the Variable to get\r\n\t * @returns Variable Content\r\n\t */\r\n\tpublic async getSingleVar(expression: string): Promise<VarData> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconst reply: VarData = { name: expression, indexCount: 0, content: \"undefined\", bases: [] }\r\n\t\t\tconst varType = expression.charAt(0) === \"$\" ? VariableType.system : VariableType.local;\r\n\t\t\tif (this._mVars[varType][expression] !== undefined) {\r\n\t\t\t\treply.content = this._mVars[varType][expression];\r\n\t\t\t\tresolve(reply);\r\n\t\t\t} else {\r\n\t\t\t\tthis._event.on('SingleVarReceived', function SingleVarReceived(event, singleVar, singleVarContent) {\r\n\t\t\t\t\tevent.removeListener('SingleVarReceived', SingleVarReceived);\r\n\t\t\t\t\treply.name = singleVar;\r\n\t\t\t\t\treply.content = singleVarContent;\r\n\t\t\t\t\tresolve(reply);\r\n\t\t\t\t});\r\n\t\t\t\tthis.writeln(\"GETVAR;\" + expression);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Fire events if line has a breakpoint or hs stopped beacause of a different reason\r\n\t */\r\n\tprivate checkEvents(internals: IVariables): void {\r\n\t\tconst mumpsposition = internals[\"$ZPOSITION\"];\r\n\t\tconst mumpsstatus = internals[\"$ZSTATUS\"];\r\n\t\tconst filePosition = convertMumpsPosition(mumpsposition);\r\n\t\tif (mumpsstatus !== \"\") {\r\n\t\t\tif (mumpsstatus === this._lastError && internals[\"$ETRAP\"] === internals[\"$ZSTEP\"]) {\r\n\t\t\t\tthis.sendEvent(\"end\");\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\tif (mumpsstatus !== this._lastError) {\r\n\t\t\t\t\tthis._lastError = mumpsstatus;\r\n\t\t\t\t\tconst parts = mumpsstatus.split(\",\");\r\n\t\t\t\t\tthis.sendEvent('stopOnException', mumpsstatus, convertMumpsPosition(parts[1]));\r\n\t\t\t\t\tthis._log(mumpsstatus);\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst bps = this._breakPoints.filter(bp => bp.file === filePosition.file && bp.line === filePosition.line + 1);\r\n\t\tif (bps.length > 0) {\r\n\t\t\tthis.sendEvent('stopOnBreakpoint');\r\n\t\t} else {\r\n\t\t\tthis.sendEvent('stopOnStep');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate sendEvent(event: string, ...args: unknown[]): void {\r\n\t\tthis.emit(event, ...args);\r\n\t}\r\n}\r\nexport function convertMumpsPosition(positionstring: string, showNotFound?: boolean | undefined): FilePosition {\r\n\tif (showNotFound === undefined) { showNotFound = true; }\r\n\tlet local = false;\r\n\tconst parts = positionstring.split(\"^\");\r\n\tconst position = parts[0];\r\n\tif (parts[1] !== undefined) {\r\n\t\tconst program = parts[1].split(\" \", 1)[0].replace(/%/g, \"_\") + \".m\";\r\n\t\tlet path = getLocalRoutinesPath()\r\n\t\tif (!path.endsWith(\"/\") && !path.endsWith(\"\\\\\")) path += \"/\";\r\n\t\tlet file = (path + program)\r\n\t\tif (!existsSync(file)) {\r\n\t\t\tif (getWworkspaceFolder() !== undefined) {\r\n\t\t\t\tpath = getWworkspaceFolder()!;\r\n\t\t\t\tif (!path.endsWith(\"/\") && !path.endsWith(\"\\\\\")) path += \"/\";\r\n\t\t\t\tfile = path + program;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!existsSync(file)) {\r\n\t\t\tif (showNotFound) { vscode.window.showErrorMessage(\"Could not find Routine \" + program); }\r\n\t\t\treturn { \"file\": \"\", \"line\": 1, local: false };\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst filecontent = readFileSync(file).toString().split('\\n');\r\n\t\t\tconst startlabel = position.split(\"+\")[0];\r\n\t\t\tconst labelRegexp = new RegExp(\"^\" + startlabel + \"([(\\\\s;:]|$)\");\r\n\t\t\tconst localLabelRegexp = new RegExp(\"^\" + startlabel + \":\");\r\n\t\t\tlet offset = 0;\r\n\t\t\tif (position.split(\"+\")[1] !== undefined) {\r\n\t\t\t\toffset = parseInt(position.split(\"+\")[1]);\r\n\t\t\t\tif (startlabel === \"\") { offset-- }   //If there's no startlabel M reports +1^XXX\r\n\t\t\t}\r\n\t\t\tlet line = 0;\r\n\t\t\tlet labelFound = false;\r\n\t\t\tif (startlabel !== \"\") {\r\n\t\t\t\tfor (let ln = 0; ln < filecontent.length; ln++) {\r\n\t\t\t\t\tif (filecontent[ln].match(labelRegexp)) {\r\n\t\t\t\t\t\tif (filecontent[ln].match(localLabelRegexp)) local = true;\r\n\t\t\t\t\t\telse local = false;\r\n\t\t\t\t\t\tline = ln;\r\n\t\t\t\t\t\tlabelFound = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!labelFound) return { \"file\": \"\", \"line\": 1, local }\r\n\t\t\t}\r\n\t\t\tif (line + offset >= filecontent.length) return { \"file\": \"\", \"line\": 1, local }\r\n\t\t\treturn { \"file\": file, \"line\": line + offset, local };\r\n\t\t} catch {\r\n\t\t\t//console.log(\"Could not read Sourcefile \" + file)\r\n\t\t\treturn { \"file\": \"\", \"line\": 1, local };\r\n\t\t}\r\n\t} else {\r\n\t\treturn { \"file\": \"\", \"line\": 1, local };\r\n\t}\r\n}\r\n","/*\r\n\tImplementation of DebugProtocol-Server for GT.M, Yottadb by Jens Wulf\r\n\tbased on Mock-Debug by Microsoft Corp.\r\n\tLicense: LGPL\r\n*/\r\n\r\nimport {\r\n\tDebugSession,\r\n\tInitializedEvent, TerminatedEvent, StoppedEvent, BreakpointEvent,\r\n\tThread, StackFrame, Scope, Source, Handles\r\n} from '@vscode/debugadapter';\r\nimport { DebugProtocol } from '@vscode/debugprotocol';\r\nimport { basename } from 'path';\r\nimport { Subject } from 'await-notify';\r\nimport { MumpsConnect, MumpsBreakpoint, FilePosition, VariableType } from './mumpsConnect';\r\nimport * as vscode from 'vscode';\r\nimport { readFileSync } from 'fs';\r\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\r\nimport { setLocalRoutinesPath } from './extension';\r\nimport { MumpsGlobalProvider } from './mumpsGlobalProvider';\r\nconst MUMPSDIAGNOSTICS = vscode.languages.createDiagnosticCollection(\"mumps\");\r\n/**\r\n * This interface describes the mumps-debug specific launch attributes\r\n * The schema for these attributes lives in the package.json of the mumps-debug extension.\r\n * The interface should always match this schema.\r\n */\r\ninterface LaunchRequestArguments extends DebugProtocol.LaunchRequestArguments {\r\n\t/** An absolute path to the \"program\" to debug. */\r\n\tprogram: string;\r\n\t/** Automatically stop target after launch. If not specified, target does not stop. */\r\n\tstopOnEntry?: boolean;\r\n\t/** enable logging the Debug Adapter Protocol */\r\n\ttrace?: boolean;\r\n\t/** The Port on which MDEBUG listens */\r\n\tport: number;\r\n\t/**The Hostname of the MDEBUG-Server */\r\n\thostname: string;\r\n\t/**Map Local-Routines to Host-Routines */\r\n\tlocalRoutinesPath: string;\r\n\t/**Flag if internal Database for M-Labels should be build up */\r\n\tbuildLabelDb?: boolean;\r\n}\r\ninterface VarData {\r\n\tname: string,\r\n\tindexCount: number,\r\n\tbases: Array<string>,\r\n\tcontent: string\r\n}\r\nexport default class MumpsDebugSession extends DebugSession {\r\n\r\n\t// we don't support multiple threads, so we can use a hardcoded ID for the default thread\r\n\tprivate static THREAD_ID = 1;\r\n\r\n\tprivate _variableHandles = new Handles<string>();\r\n\tprivate _variableBases = {};\r\n\r\n\tprivate _configurationDone = new Subject();\r\n\r\n\tprivate _program: string;\r\n\r\n\tprivate _mconnect: MumpsConnect;\r\n\tprivate _localScope = this._variableHandles.create(\"~local|0\");\r\n\tprivate _systemScope = this._variableHandles.create(\"~system\");\r\n\t/**\r\n\t * Creates a new debug adapter that is used for one debug session.\r\n\t * We configure the default implementation of a debug adapter here.\r\n\t */\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\r\n\t\t// this debugger uses zero-based lines and columns\r\n\t\tthis.setDebuggerLinesStartAt1(false);\r\n\t\tthis.setDebuggerColumnsStartAt1(false);\r\n\t\tthis._program = \"\";\r\n\t\tthis._mconnect = new MumpsConnect();\r\n\r\n\t\t// setup event handlers\r\n\t\tthis._mconnect.on('stopOnEntry', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('entry', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnStep', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('step', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnDataBreakpoint', () => {\r\n\t\t\tthis.sendEvent(new StoppedEvent('data breakpoint', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('stopOnException', (e: string, filePosition: FilePosition) => {\r\n\t\t\tvscode.debug.activeDebugConsole.append(`${filePosition.file}:${filePosition.line + 1}:1`);\r\n\t\t\tvscode.debug.activeDebugConsole.appendLine(' Error: ' + e);\r\n\t\t\tthis.sendEvent(new StoppedEvent('exception', MumpsDebugSession.THREAD_ID));\r\n\t\t});\r\n\t\tthis._mconnect.on('breakpointValidated', (bp: MumpsBreakpoint) => {\r\n\t\t\tthis.sendEvent(new BreakpointEvent('changed', <DebugProtocol.Breakpoint>{ verified: bp.verified, id: bp.id }));\r\n\t\t});\r\n\t\tthis._mconnect.on('end', () => {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * The 'initialize' request is the first request called by the frontend\r\n\t * to interrogate the features the debug adapter provides.\r\n\t */\r\n\tprotected initializeRequest(response: DebugProtocol.InitializeResponse): void {\r\n\r\n\t\t// build and return the capabilities of this debug adapter:\r\n\t\tresponse.body = response.body || {};\r\n\r\n\t\t// the adapter implements the configurationDoneRequest.\r\n\t\tresponse.body.supportsConfigurationDoneRequest = true;\r\n\r\n\t\t// make VS Code to use 'evaluate' when hovering over source\r\n\t\tresponse.body.supportsEvaluateForHovers = true;\r\n\r\n\t\t// make VS Code to support data breakpoints\r\n\t\tresponse.body.supportsDataBreakpoints = false;\r\n\t\tresponse.body.supportsConditionalBreakpoints = true;\r\n\t\t// make VS Code to support completion in REPL\r\n\t\tresponse.body.supportsCompletionsRequest = false;\r\n\t\tresponse.body.completionTriggerCharacters = [\".\", \"[\"];\r\n\r\n\t\t// make VS Code to send cancelRequests\r\n\t\tresponse.body.supportsCancelRequest = false;\r\n\r\n\t\t// make VS Code send the breakpointLocations request\r\n\t\tresponse.body.supportsBreakpointLocationsRequest = true;\r\n\t\tresponse.body.supportsExceptionInfoRequest = true;\r\n\t\tresponse.body.supportsRestartRequest = true;\r\n\r\n\r\n\t\t// since this debug adapter can accept configuration requests like 'setBreakpoint' at any time,\r\n\t\t// we request them early by sending an 'initializeRequest' to the frontend.\r\n\t\t// The frontend will end the configuration sequence by calling 'configurationDone' request.\r\n\t\tthis.sendResponse(response);\r\n\t\tthis.sendEvent(new InitializedEvent());\r\n\t}\r\n\r\n\t/**\r\n\t * Called at the end of the configuration sequence.\r\n\t * Indicates that all breakpoints etc. have been sent to the DA and that the 'launch' can start.\r\n\t */\r\n\tprotected configurationDoneRequest(response: DebugProtocol.ConfigurationDoneResponse, args: DebugProtocol.ConfigurationDoneArguments): void {\r\n\t\tsuper.configurationDoneRequest(response, args);\r\n\r\n\t\t// notify the launchRequest that configuration has finished\r\n\r\n\t\tthis._configurationDone.notify();\r\n\t}\r\n\r\n\tprotected async launchRequest(response: DebugProtocol.LaunchResponse, args: LaunchRequestArguments) {\r\n\r\n\t\t// make sure to 'Stop' the buffered logging if 'trace' is not set\r\n\t\t//logger.setup(args.trace ? Logger.LogLevel.Verbose : Logger.LogLevel.Stop, false);\r\n\t\t// wait until configuration has finished (and configurationDoneRequest has been called)\r\n\t\tawait this._configurationDone.wait(1000);\r\n\t\tsetLocalRoutinesPath(args.localRoutinesPath);\r\n\t\t// start the program in the runtime\r\n\t\tthis._mconnect.init(args.hostname, args.port).then(async () => {\r\n\t\t\tif (vscode.window.activeTextEditor?.document) {\r\n\t\t\t\tconst diagnosticsProvider = new MumpsDiagnosticsProvider(MUMPSDIAGNOSTICS);\r\n\t\t\t\tdiagnosticsProvider.updateDiagnostics(vscode.window.activeTextEditor?.document);\r\n\t\t\t}\r\n\t\t\tthis._mconnect.start(args.program, !!args.stopOnEntry);\r\n\t\t\tMumpsGlobalProvider.setMconnect(this._mconnect)\r\n\t\t\tthis._program = args.program;\r\n\t\t\tthis.sendResponse(response);\r\n\t\t}).catch(() => {\r\n\t\t\tvscode.window.showErrorMessage(\"Connection to MDEBUG failed. \\nPlease start MDEBUG first.\");\r\n\t\t\tresponse.success = false;\r\n\t\t\tresponse.message = \"Connection to MDEBUG failed. \\nPlease start MDEBUG first.\";\r\n\t\t\tthis.sendResponse(response);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected setBreakPointsRequest(response: DebugProtocol.SetBreakpointsResponse, args: DebugProtocol.SetBreakpointsArguments): void {\r\n\t\tconst path = <string>args.source.path;\r\n\t\tthis._mconnect.clearBreakpoints(path);\r\n\t\tconst actualBreakpoints = this._mconnect.setBreakPoint(path, args.breakpoints);\r\n\r\n\t\t// send back the actual breakpoint positions\r\n\t\tresponse.body = {\r\n\t\t\tbreakpoints: actualBreakpoints\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t\tthis._mconnect.requestBreakpoints();\r\n\t}\r\n\r\n\tprotected threadsRequest(response: DebugProtocol.ThreadsResponse): void {\r\n\r\n\t\t// runtime supports no threads so just return a default thread.\r\n\t\tresponse.body = {\r\n\t\t\tthreads: [\r\n\t\t\t\tnew Thread(MumpsDebugSession.THREAD_ID, \"thread 1\")\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stackTraceRequest(response: DebugProtocol.StackTraceResponse, args: DebugProtocol.StackTraceArguments): void {\r\n\r\n\t\tconst startFrame = typeof args.startFrame === 'number' ? args.startFrame : 0;\r\n\t\tconst maxLevels = typeof args.levels === 'number' ? args.levels : 1000;\r\n\t\tconst endFrame = startFrame + maxLevels;\r\n\r\n\t\tconst stk = this._mconnect.stack(startFrame, endFrame);\r\n\t\tresponse.body = {\r\n\t\t\tstackFrames: stk.frames.map(f => new StackFrame(f.index, f.name, this.createSource(f.file), this.convertDebuggerLineToClient(f.line))),\r\n\t\t\ttotalFrames: stk.count\r\n\t\t};\r\n\t\tif (stk.count === 0) {\r\n\t\t\tthis.sendEvent(new TerminatedEvent());\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected scopesRequest(response: DebugProtocol.ScopesResponse): void {\r\n\r\n\t\tresponse.body = {\r\n\t\t\tscopes: [\r\n\t\t\t\tnew Scope(\"Local\", this._localScope, false),\r\n\t\t\t\tnew Scope(\"System\", this._systemScope, false),\r\n\t\t\t]\r\n\t\t};\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async variablesRequest(response: DebugProtocol.VariablesResponse, args: DebugProtocol.VariablesArguments) {\r\n\r\n\t\tconst variables: DebugProtocol.Variable[] = [];\r\n\t\tlet insertVariable: DebugProtocol.Variable | undefined;\r\n\t\tconst varReference = args.variablesReference;\r\n\t\tconst varId = this._variableHandles.get(args.variablesReference);\r\n\t\tswitch (varReference) {\r\n\t\t\tcase this._systemScope: {\r\n\t\t\t\tconst varObject = this._mconnect.getVariables(VariableType.system);\r\n\t\t\t\tfor (const varname in varObject) {\r\n\t\t\t\t\tvariables.push({\r\n\t\t\t\t\t\tname: varname,\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: varObject[varname],\r\n\t\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tconst varparts: string[] = varId.split(\"|\");\r\n\t\t\t\tconst indexCount: number = parseInt(varparts.pop() || \"0\");\r\n\t\t\t\tconst varBase = varparts.join(\"|\");\r\n\t\t\t\tconst varObject = this._mconnect.getVariables(VariableType.local);\r\n\t\t\t\tlet lastVar: VarData | undefined = undefined;\r\n\t\t\t\tlet lastRef = \"\";\r\n\t\t\t\tfor (const varname in varObject) {\r\n\t\t\t\t\tconst actualVar = MumpsDebugSession.varAnalyze(varname, varObject[varname]);\r\n\t\t\t\t\tif (lastVar === undefined) { //First Variable not processed\r\n\t\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// eslint-disable-next-line no-cond-assign\r\n\t\t\t\t\tif (insertVariable = this._checkVars(lastVar, actualVar, indexCount, varBase, lastRef)) {\r\n\t\t\t\t\t\tif (insertVariable.variablesReference !== 0) { lastRef = lastVar.bases[indexCount]; }\r\n\t\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastVar = actualVar;\r\n\t\t\t\t}\r\n\t\t\t\tif (lastVar !== undefined) { // process Last Variable if there was minimum one\r\n\t\t\t\t\tconst dummyVar: VarData = { name: \"\", \"indexCount\": 0, \"bases\": [], \"content\": \"\" }\r\n\t\t\t\t\tconst insertVariable = this._checkVars(lastVar, dummyVar, indexCount, varBase, lastRef)\r\n\t\t\t\t\tif (insertVariable) {\r\n\t\t\t\t\t\tvariables.push(insertVariable);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresponse.body = { variables };\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\t//checkVars checks if Variable has to be inserted in Var-Display and if it has descendants\r\n\tprivate _checkVars(lastVar: VarData, actualVar: VarData, indexCount: number, varBase: string, lastRef: string): DebugProtocol.Variable | undefined {\r\n\t\tlet returnVar: DebugProtocol.Variable | undefined = undefined;\r\n\t\tlet actualReference = 0;\r\n\t\tif (indexCount === 0 || (lastVar.bases[indexCount - 1] === varBase && lastVar.indexCount > indexCount)) {\r\n\t\t\tif (lastVar.indexCount > indexCount + 1) {\r\n\t\t\t\tif (lastRef !== lastVar.bases[indexCount]) {\r\n\t\t\t\t\tlet name = lastVar.bases[indexCount];\r\n\t\t\t\t\tif (indexCount > 0) { name += \")\"; }\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturnVar = {\r\n\t\t\t\t\t\tname,\r\n\t\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\t\tvalue: 'undefined',\r\n\t\t\t\t\t\tvariablesReference: this._variableBases[lastVar.bases[indexCount]]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t} else { //lastVar.indexCount==indexCount+1\r\n\t\t\t\tif (lastVar.bases[indexCount] === actualVar.bases[indexCount]) {\r\n\t\t\t\t\tif (this._variableBases[lastVar.bases[indexCount]] === undefined) {\r\n\t\t\t\t\t\tthis._variableBases[lastVar.bases[indexCount]] = this._variableHandles.create(lastVar.bases[indexCount] + \"|\" + (indexCount + 1));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tactualReference = this._variableBases[lastVar.bases[indexCount]];\r\n\t\t\t\t}\r\n\t\t\t\treturnVar = {\r\n\t\t\t\t\tname: lastVar.name,\r\n\t\t\t\t\ttype: 'string',\r\n\t\t\t\t\tvalue: lastVar.content,\r\n\t\t\t\t\tvariablesReference: actualReference\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn returnVar\r\n\t}\r\n\tprotected continueRequest(response: DebugProtocol.ContinueResponse): void {\r\n\t\tthis._mconnect.continue();\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected nextRequest(response: DebugProtocol.NextResponse): void {\r\n\t\tthis._mconnect.step(\"OVER\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stepInRequest(response: DebugProtocol.StepInResponse): void {\r\n\t\tthis._mconnect.step(\"INTO\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected stepOutRequest(response: DebugProtocol.StepOutResponse): void {\r\n\t\tthis._mconnect.step(\"OUTOF\");\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected async evaluateRequest(response: DebugProtocol.EvaluateResponse, args: DebugProtocol.EvaluateArguments) {\r\n\t\tif (args.context === \"hover\" || args.context === \"repl\") {\r\n\t\t\tthis._mconnect.getSingleVar(args.expression).then((varReply: VarData) => {\r\n\t\t\t\tresponse.body = {\r\n\t\t\t\t\tresult: varReply.name + \" := \" + varReply.content,\r\n\t\t\t\t\tvariablesReference: 0\r\n\t\t\t\t}\r\n\t\t\t\tif (!args.expression.includes(\")\") && this._variableBases[args.expression] !== undefined) {\r\n\t\t\t\t\tresponse.body.variablesReference = this._variableBases[args.expression];\r\n\t\t\t\t}\r\n\t\t\t\tthis.sendResponse(response);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected async restartRequest(response: DebugProtocol.RestartResponse) {\r\n\t\tconst sourceLines = readFileSync(this._program).toString().split('\\n');\r\n\t\tthis._mconnect.checkRoutine(sourceLines).then((errorLines: string[]) => {\r\n\t\t\tif (errorLines.length) {\r\n\t\t\t\tvscode.window.showErrorMessage(\"File contains Problems - No Restart possible!\");\r\n\t\t\t} else {\r\n\t\t\t\tthis._mconnect.restart(this._program);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprotected disconnectRequest(response: DebugProtocol.DisconnectResponse): void {\r\n\t\tthis._mconnect.disconnect();\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate createSource(filePath: string): Source {\r\n\t\treturn new Source(basename(filePath), this.convertDebuggerPathToClient(filePath), undefined, undefined, 'mumps-adapter-data');\r\n\t}\r\n\r\n\tprotected async exceptionInfoRequest(response: DebugProtocol.ExceptionInfoResponse) {\r\n\t\tconst statVariable: VarData = await this._mconnect.getSingleVar(\"$ZSTATUS\");\r\n\t\tconst status = statVariable.content.split(\",\");\r\n\t\tconst trashlength = status[0].length + status[1].length + status[2].length + 4;\r\n\t\tconst description = 'Line :' + status[1] + \" \" + statVariable.content.substring(trashlength);\r\n\t\tresponse.body = {\r\n\t\t\texceptionId: status[2],\r\n\t\t\tdescription,\r\n\t\t\tbreakMode: 'always',\r\n\t\t\tdetails: {\r\n\t\t\t\ttypeName: 'ErrorException',\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.sendResponse(response);\r\n\t}\r\n\r\n\tprivate static varAnalyze(varname: string, content: string): VarData {\r\n\t\tlet indexcount = 1;\r\n\t\tconst bases: string[] = [];\r\n\t\tconst length = varname.length;\r\n\t\tconst klammerpos = varname.indexOf(\"(\");\r\n\t\tlet countKomma = true;\r\n\t\tif (klammerpos > 0) {\r\n\t\t\tbases.push(varname.substring(0, klammerpos));\r\n\t\t\tindexcount++;\r\n\t\t\tfor (let i = klammerpos; i < length; i++) {\r\n\t\t\t\tif (varname.substring(i, i + 1) === \",\" && countKomma) {\r\n\t\t\t\t\tbases.push(varname.substring(0, i));\r\n\t\t\t\t\tindexcount++;\r\n\t\t\t\t}\r\n\t\t\t\tif (varname.substring(i, i + 1) === '\"') { countKomma = !countKomma; }\r\n\t\t\t}\r\n\t\t\tbases.push(varname.substring(0, varname.length - 1));\r\n\t\t} else {\r\n\t\t\tbases.push(varname);\r\n\t\t}\r\n\t\treturn { \"name\": varname, \"indexCount\": indexcount, \"bases\": bases, content };\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\n\r\nexport default class MumpsDefinitionProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenRefLocation();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, ErrorInformation } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\nimport { convertMumpsPosition } from './mumpsConnect';\nimport { startLintingFile, isLintingFile } from './mumpsLinter';\n\ntype Parameter = {\n\tname: string,\n\tposition: number\n}\ntype Subroutine = {\n\tstartLine: number,\n\tendLine: number\n\tparameters: Parameter[]\n}\ntype GeneralSubroutine = {\n\tname: string,\n\tstartLine: number,\n\tendLine: number\n}\ntype VariableState = {\n\tnewedAtLine?: number[],\n\tnewedAtPostion: number[],\n\tnewedAtLevel?: number[],\n\tisExcluded?: boolean,\n\tisParameter?: boolean,\n\tisUsed?: boolean\n\tparameterPosition: number\n}\ntype VariableStates = {\n\tname: VariableState\n}\nexport type UnreachableTable = { startLine: number, startTokenId: number, endLine: number, endTokenId: number }[];\nenum labelExists { exists, local, exists_not }\nenum QuitState {\n\tnoQuit, behindQuit, behindLevelQuit\n}\nconst symbols: vscode.SymbolInformation[] = [];\n\n/**\n * Checks if mumps routines NEWs variables correctly\n * Checks if intendation levels are correct\n * Checks if there's unreachable code\n *\n */\nexport default class MumpsDiagnosticsProvider {\n\tprivate _parseDb: MumpsParseDb\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _intendationLevels: number[] = [];\n\tprivate _errorInformation: ErrorInformation[] = []\n\tprivate _diags: vscode.Diagnostic[] = [];\n\tprivate _variablesToBeIgnored: string[] = [];\n\tprivate _enableVariableCheck = true;\n\tprivate _unreachableCodeWarningEnabled = true;\n\tprivate _varStates: VariableStates;\n\tprivate _levelExclusiveNew: number[];\n\tprivate _subroutines: Subroutine[] = [];\n\tprivate _labelTable: { [key: string]: number } = {};\n\tprivate _uri: vscode.Uri;\n\tprivate _routine: Subroutine = { startLine: -1, endLine: -1, parameters: [] };\n\tprivate _level = 0;\n\tprivate _lineWithDo = -2;\n\tprivate _isBehindQuit: QuitState[] = [];\n\tprivate _startUnreachable: vscode.Position | false = false;\n\tprivate _activeSubroutine: GeneralSubroutine = { name: '', startLine: -1, endLine: -1 }\n\tprivate _collection: vscode.DiagnosticCollection\n\tconstructor(collection: vscode.DiagnosticCollection) {\n\t\tthis._collection = collection\n\t}\n\tupdateDiagnostics(document: vscode.TextDocument): void {\n\t\tif (document && document.languageId === 'mumps' && !isLintingFile(document.fileName)) {\n\t\t\tstartLintingFile(document.fileName)\n\t\t\tthis._parseDb = MumpsParseDb.getInstance(document, true)\n\t\t\tthis._uri = document.uri;\n\t\t\tconst configuration = vscode.workspace.getConfiguration();\n\t\t\tif (configuration.mumps.variablesToBeIgnoredAtNewCheck !== undefined) {\n\t\t\t\tthis._variablesToBeIgnored = configuration.mumps.variablesToBeIgnoredAtNewCheck.split(\",\");\n\t\t\t}\n\t\t\tif (configuration.mumps.enableVariableCheck !== undefined) {\n\t\t\t\tthis._enableVariableCheck = configuration.mumps.enableVariableCheck;\n\t\t\t}\n\t\t\tif (configuration.mumps.warnIfCodeIsUnreachable !== undefined) {\n\t\t\t\tthis._unreachableCodeWarningEnabled = configuration.mumps.warnIfCodeIsUnreachable\n\t\t\t}\n\t\t\tthis._startUpdate();\n\t\t}\n\t}\n\tprivate async _startUpdate(): Promise<void> {\n\t\tthis._startUnreachable = false;\n\t\tthis._diags = [];\n\t\tthis._linetokens = this._parseDb.getDocumentTokens();\n\t\tthis._errorInformation = this._parseDb.getDocumentErrors();\n\t\tthis._intendationLevels = this._parseDb.getIntendationLevels();\n\t\tthis._isBehindQuit = new Array(32).fill(QuitState.noQuit);\n\t\tthis._collection.delete(this._uri);\n\t\t// this._collection.clear();\n\t\tthis._generateLabelTable();\n\n\t\tfor (let i = 0; i < this._linetokens.length; i++) {\n\n\t\t\tconst tokens = this._linetokens[i];\n\t\t\tconst errorInformation = this._errorInformation[i];\n\t\t\tif (errorInformation.text !== '') {\n\t\t\t\tthis._addWarning(errorInformation.text, i, errorInformation.position, -1, vscode.DiagnosticSeverity.Error);\n\t\t\t}\n\t\t\tthis._checkLine(i, tokens);\n\t\t}\n\t\tif (this._enableVariableCheck) {\n\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, this._linetokens.length);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < this._subroutines.length; i++) {\n\n\t\t\t\tthis.analyzeSubroutine(this._subroutines[i]);\n\t\t\t}\n\t\t}\n\t\tif (this._diags) {\n\t\t\tthis._collection.set(this._uri, this._diags);\n\t\t}\n\t}\n\tasync updateFileDiagnostics(file: vscode.Uri, fileContent: string) {\n\t\tconst filePath = file.fsPath;\n\t\t//const fileContent = await fs.readFile(filePath, 'utf8'); // Asynchrones Lesen der Datei\n\t\tthis._parseDb = MumpsParseDb.getFileInstance(filePath, fileContent);\n\t\tthis._uri = file;\n\t\tthis._enableVariableCheck = false; // usually generates too many warnings\n\t\tawait this._startUpdate(); // Aufrufen der asynchronen Methode\n\t\tstartLintingFile(filePath)\n\t}\n\t/**\n\t * Checks a single subroutine if variables are NEWed correctly\n\t * sets found problems in this._warnings\n\t * @param routine subroutine to be checked\n\t */\n\tpublic analyzeSubroutine(routine: Subroutine): void {\n\t\tlet code: string = \"\";\n\t\tif (this._enableVariableCheck) {\n\t\t\tthis._varStates = {} as VariableStates;\n\t\t\tthis._levelExclusiveNew = [];\n\t\t\tlet level = 0; //intendation-level\n\t\t\tfor (let i = 0; i < routine.parameters.length; i++) {\n\t\t\t\tthis._varStates[routine.parameters[i].name] = { isParameter: true, parameterPosition: routine.parameters[i].position }\n\t\t\t}\n\t\t\tfor (let i = routine.startLine; i <= routine.endLine; i++) {\n\t\t\t\tconst newLevel = this._intendationLevels[i];\n\t\t\t\tif (newLevel < level) {\n\t\t\t\t\tthis._reduceIntendationLevel(level, newLevel);\n\t\t\t\t}\n\t\t\t\tlevel = newLevel;\n\t\t\t\tconst line = this._parseDb.getLine(i)\n\t\t\t\tif (Array.isArray(this._linetokens[i])) {\n\t\t\t\t\tfor (let j = 0; j < this._linetokens[i].length; j++) {\n\t\t\t\t\t\tlet token = this._linetokens[i][j];\n\t\t\t\t\t\tif (i === routine.startLine && j === 0) { // skip parameters\n\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length && this._linetokens[i][j].type === TokenType.local) { /* empty */ }\n\t\t\t\t\t\t\tif (j < this._linetokens[i].length) {\n\t\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (token.type === TokenType.keyword) {\n\n\t\t\t\t\t\t\tif (token.longName === \"NEW\") {\n\t\t\t\t\t\t\t\tlet anyVariablesNewed = false;\n\t\t\t\t\t\t\t\tlet containsExclusions = false;\n\t\t\t\t\t\t\t\t//exclude postcondition\n\t\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length) {\n\t\t\t\t\t\t\t\t\tconst token = this._linetokens[i][j]\n\t\t\t\t\t\t\t\t\tconst position = token.position\n\t\t\t\t\t\t\t\t\tif (line[position - 1] === \" \") {\n\t\t\t\t\t\t\t\t\t\t--j\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t} else if (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\t\tthis._checkNewed(token.name, level, i, token.position)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twhile (++j < this._linetokens[i].length &&\n\t\t\t\t\t\t\t\t\t(this._linetokens[i][j].type === TokenType.local ||\n\t\t\t\t\t\t\t\t\t\tthis._linetokens[i][j].type === TokenType.sysvariable)) {\n\t\t\t\t\t\t\t\t\tanyVariablesNewed = true;\n\t\t\t\t\t\t\t\t\ttoken = this._linetokens[i][j];\n\t\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (token.type === TokenType.local) {\n\t\t\t\t\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\t\t\t\t\tlet message = '';\n\t\t\t\t\t\t\t\t\t\tconst varState: VariableState = this._varStates[varName] ? this._varStates[varName] : { isExcluded: token.isExcludedVariable }\n\t\t\t\t\t\t\t\t\t\t// Variable is already NEWed or used\n\t\t\t\t\t\t\t\t\t\tif (varState.isParameter) {\n\t\t\t\t\t\t\t\t\t\t\tif (token.isExcludedVariable) {\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.isExcluded = true;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (level === 0) { //NEW inside higher intendation-level should be possible\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"NEW hides formal parameter \" + varName;\n\t\t\t\t\t\t\t\t\t\t\t\t\tcode = \"NewHidesParam:\" + varName;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (!varState.newedAtLevel) { // Variable not NEWed yet - New is OK\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel = [level];\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine = [i];\n\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion = [token.position];\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (varState.newedAtLevel.indexOf(level) > -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage = \"Variable \" + varName + \" already mentioned in NEW command\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcode = \"VarAlreadyNewed:\" + varName\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLevel.push(level);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtLine!.push(i);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\t\t\t\t\t\t\t\t\tvarState.newedAtPostion!.push(token.position);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (message !== \"\") {\n\t\t\t\t\t\t\t\t\t\t\tthis._addWarning(message, i, token.position, token.name.length, vscode.DiagnosticSeverity.Warning, code);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tthis._varStates[varName] = varState;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (anyVariablesNewed === false) {\n\t\t\t\t\t\t\t\t\tcontainsExclusions = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (containsExclusions) {\n\t\t\t\t\t\t\t\t\tthis._levelExclusiveNew.push(level);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//Check if parameters are hidden by NEW-exclusion\n\t\t\t\t\t\t\t\tif (routine.parameters.length > 0 && containsExclusions && level === 0) {\n\t\t\t\t\t\t\t\t\tfor (let k = 0; k < routine.parameters.length; k++) {\n\t\t\t\t\t\t\t\t\t\tif (!this._varStates[routine.parameters[k].name].isExcluded) {\n\t\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"NEW hides formal parameters\", i, token.position, token.name.length,\n\t\t\t\t\t\t\t\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\t\t\t\t\t\t\"NewHidesParam:\" + this._varStates[routine.parameters[k].name]);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (token.type === TokenType.local) {  // local variable found at a non NEW command\n\t\t\t\t\t\t\tconst varName = token.name;\n\t\t\t\t\t\t\tthis._checkNewed(varName, level, i, token.position);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._checkVariableUsage(routine)\n\t\t}\n\t}\n\t/**\n\t * Check if Variables are formal parameters but not used, or NEWed but not used\n\t * @param routine Subroutine to check\n\t * @param varStates array of found variable-states\n\t */\n\tprivate _checkVariableUsage(routine: Subroutine): void {\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state: VariableState = this._varStates[key];\n\t\t\tif (state.isParameter && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is a formal parameter but not used\", routine.startLine,\n\t\t\t\t\tstate.parameterPosition,\n\t\t\t\t\tkey.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"FormalNotUsed:\" + key);\n\t\t\t} else if (state.newedAtLine && state.newedAtLine.length > 0 && !state.isUsed && !this._isIgnoredVariable(key)) {\n\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\tstate.newedAtLine[0],\n\t\t\t\t\tstate.newedAtPostion[0],\n\t\t\t\t\tkey.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"NewedButNotUsed:\" + key\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Check if a local Variable is correctly NEWed or generate Warning\n\t * @param varName Variable to be checked\n\t * @param level intendation-level on which Variable is found\n\t * @param line Line where variable is found\n\t * @param position Position inside Line\n\t */\n\tprivate _checkNewed(varName: string, level: number, line: number, position: number): void {\n\t\t//Check Variable-Ignore-List\n\t\tlet varState = this._varStates[varName];\n\t\tif (!this._isIgnoredVariable(varName)) {\n\t\t\tlet isNewed = false;\n\t\t\tfor (let k = 0; k < this._levelExclusiveNew.length; k++) {\n\t\t\t\tif (this._levelExclusiveNew[k] <= level) {\n\t\t\t\t\tisNewed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tif (varState) {\n\t\t\t\t\tif (!varState.isParameter) {\n\t\t\t\t\t\tif (varState.newedAtLevel) {\n\t\t\t\t\t\t\tfor (let i = 0; i < varState.newedAtLevel.length; i++) {\n\t\t\t\t\t\t\t\tif (varState.newedAtLevel[i] <= level) {\n\t\t\t\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisNewed = true;\n\t\t\t\t\t}\n\t\t\t\t\tvarState.isUsed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isNewed) {\n\t\t\t\tthis._addWarning(\"Variable \" + varName + \" not NEWed\", line, position, varName.length,\n\t\t\t\t\tvscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\"VarNotNewed:\" + varName);\n\t\t\t}\n\t\t}\n\t\tif (varState) {\n\t\t\tvarState.isUsed = true;\n\t\t} else {\n\t\t\tvarState = { isUsed: true }\n\t\t}\n\t\tthis._varStates[varName] = varState;\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\t */\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?, code?: string): void {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode,\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\tprivate _checkLine(line: number, tokens: LineToken[]): void {\n\t\tlet ifFlag = false;\n\t\tconst newIntendationLevel = this._intendationLevels[line];\n\t\tconst expectedLevel = line === this._lineWithDo + 1 ? this._level + 1 : this._level;\n\t\tthis._level = newIntendationLevel;\n\t\tthis._removeQuits(this._level)\n\t\tif (this._level > expectedLevel) {\n\t\t\tthis._addWarning(\"Intendation Level wrong, found: \" + this._level + \", expected: \" + expectedLevel,\n\t\t\t\tline, 0, this._getIntendationPosition(line), vscode.DiagnosticSeverity.Warning, \"ExpectedIntendation:\" + expectedLevel);\n\t\t}\n\t\tif (line === this._lineWithDo + 1 && this._level < expectedLevel) {\n\t\t\tthis._addWarning(\"Higher intendation expected after argumentless Do\", line, 0, this._getIntendationPosition(line),\n\t\t\t\tvscode.DiagnosticSeverity.Warning, \"ExpectedIntendation:\" + expectedLevel);\n\t\t}\n\t\tthis._lineWithDo = -2;\n\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) { // iterate over every token in actual line\n\t\t\tlet token: LineToken = tokens[tokenId];\n\t\t\tif (token.type === TokenType.comment && token.name.match(/ignoreVars:/)) { //Check for IgnoreVars-directive\n\t\t\t\tthis._variablesToBeIgnored = this._variablesToBeIgnored.concat(token.name.split(\"ignoreVars:\")[1].split(\",\"));\n\t\t\t}\n\t\t\tif (tokenId === 0 && token.type === TokenType.label) { \t//If there was unreachable code before this label\n\t\t\t\t//save a warning\n\t\t\t\t//Remember label in symbol library\n\t\t\t\tthis._removeQuits(this._level - 1)\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tif (this._activeSubroutine.startLine > -1) {\n\t\t\t\t\tthis._addSymbol(this._activeSubroutine.name, this._activeSubroutine.startLine, line)\n\t\t\t\t}\n\t\t\t\tthis._activeSubroutine.startLine = line;\n\t\t\t\tthis._activeSubroutine.name = token.name;\n\t\t\t\tif (tokens[1] !== undefined && tokens[1].type === TokenType.local) { //Begin of a parametrized subroutine\n\t\t\t\t\tthis._routine.startLine = line;\n\t\t\t\t\twhile (++tokenId < tokens.length && tokens[tokenId].type === TokenType.local) {\n\t\t\t\t\t\tthis._routine.parameters.push({ name: tokens[tokenId].name, position: tokens[tokenId].position });\n\t\t\t\t\t}\n\t\t\t\t\tif (tokenId >= tokens.length) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\ttoken = tokens[tokenId];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.keyword || token.type === TokenType.comment) {\n\t\t\t\tthis._checkUnreachable(line, token)\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"IF\" || command === \"ELSE\" || command === \"FOR\") {\n\t\t\t\t\t\tifFlag = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (command === \"DO\" && token.hasArguments === false) {\n\t\t\t\t\t\tthis._lineWithDo = line;\n\t\t\t\t\t}\n\t\t\t\t\tif (!ifFlag && (command === \"QUIT\" || command === \"GOTO\" || command === \"HALT\") && !token.isPostconditioned) {\n\t\t\t\t\t\tlet hasPostcondition = false;\n\t\t\t\t\t\tif (command === \"GOTO\") { //Check if GOTO argument is postconditioned\n\t\t\t\t\t\t\tfor (let k = tokenId + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.entryref && !tokens[k].name.includes(\"&\") && !tokens[k].name.includes(\"@\")) {\n\t\t\t\t\t\t\t\t\tif (this._labelExists(tokens[k].name) === labelExists.exists_not)  // && !/^\\+\\d+$/.test(tokens[k].name))\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"Entry-Reference not found\",\n\t\t\t\t\t\t\t\t\t\t\tline, tokens[k].position, tokens[k].name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t\t\t\t\telse if (this._labelExists(tokens[k].name) === labelExists.local)\n\t\t\t\t\t\t\t\t\t\tthis._addWarning(\"Entry-Reference can only be called locally\",\n\t\t\t\t\t\t\t\t\t\t\tline, tokens[k].position, tokens[k].name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\tthis._routine.endLine = line;\n\t\t\t\t\t\t\tif (this._routine.startLine !== -1) {\n\t\t\t\t\t\t\t\tthis._subroutines.push(this._routine);\n\t\t\t\t\t\t\t\tthis._routine = { startLine: -1, endLine: -1, parameters: [] };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (line === this._lineWithDo) {\n\t\t\t\t\t\t\t\tthis._isBehindQuit[this._level] = QuitState.behindLevelQuit\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._isBehindQuit[this._level] = QuitState.behindQuit\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (token.type === TokenType.entryref || token.type === TokenType.exfunction) {\n\t\t\t\tif (this._labelExists(token.name) === labelExists.exists_not && !token.name.includes(\"&\") && !token.name.includes(\"@\")) {\n\t\t\t\t\tthis._addWarning(\"Entry-Reference not found\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t} else if (this._labelExists(token.name) === labelExists.local) {\n\t\t\t\t\tthis._addWarning(\"Entry-Reference can only be called locally\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t} else if (token.name.includes(\"+\")) {\n\t\t\t\t\tconst previousTokenName = tokens[tokenId - 1].longName\n\t\t\t\t\tif (previousTokenName !== \"$TEXT\") {\n\t\t\t\t\t\tthis._addWarning(\"Entryref+Offset is not recommended\", line, token.position, token.name.length, vscode.DiagnosticSeverity.Warning);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._parseDb.setUnreachable(line, tokenId, this._startUnreachable !== false)\n\t\t}\n\t}\n\tprivate _checkUnreachable(line: number, token: LineToken): void {\n\t\tconst isBehindQuit = this._isBehindQuit.slice(0, this._level).some(state => state === QuitState.behindQuit) || this._isBehindQuit[this._level] !== QuitState.noQuit;\n\t\tif (isBehindQuit && token.type !== TokenType.comment) {\n\t\t\tif (this._startUnreachable === false) {\n\t\t\t\tthis._startUnreachable = new vscode.Position(line, token.position);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._startUnreachable !== false && this._unreachableCodeWarningEnabled) {\n\t\t\t\t// Only if there were Code lines after a quit or a goto\n\t\t\t\tthis._diags.push({\n\t\t\t\t\tcode: '',\n\t\t\t\t\tmessage: \"Unreachable Code\",\n\t\t\t\t\trange: new vscode.Range(this._startUnreachable, new vscode.Position(line, 0)),\n\t\t\t\t\tseverity: vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\tsource: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._startUnreachable = false\n\t\t}\n\t}\n\tprivate _getIntendationPosition(line: number): number {\n\t\tfor (let i = 0; i < this._linetokens[line].length; i++) {\n\t\t\tconst type = this._linetokens[line][i].type\n\t\t\tif (type === TokenType.intendation) {\n\t\t\t\treturn this._linetokens[line][i].position\n\t\t\t} else if (type === TokenType.comment || type === TokenType.keyword) {\n\t\t\t\treturn this._linetokens[line][i].position // no intendation found\n\t\t\t}\n\t\t}\n\t\treturn 0 // nothing found\n\t}\n\tprivate _removeQuits(level: number): void {\n\t\tfor (let i = level + 1; i < 32; i++) { this._isBehindQuit[i] = QuitState.noQuit }\n\t}\n\tprivate _generateLabelTable(): void {\n\t\tthis._labelTable = {};\n\t\tfor (let i = 0; i < this._linetokens.length; i++) {\n\t\t\tconst lineTokens = this._linetokens[i]\n\t\t\tif (lineTokens.length > 0 && lineTokens[0].type === TokenType.label) {\n\t\t\t\tthis._labelTable[lineTokens[0].name.replace(\":\", \"\")] = i;\n\t\t\t}\n\t\t}\n\t}\n\tprivate _labelExists(name: string): labelExists {\n\t\tif (name.startsWith(\"$$\")) name = name.substring(2)\n\t\tif (name.indexOf(\"^\") > -1) {\n\t\t\tconst filePosition = convertMumpsPosition(name, false)\n\t\t\tif (filePosition.file !== \"\") {\n\t\t\t\tif (filePosition.local) return labelExists.local\n\t\t\t\telse return labelExists.exists\n\t\t\t} else {\n\t\t\t\treturn labelExists.exists_not\n\t\t\t}\n\t\t} else {\n\t\t\tif (name.includes(\"+\")) name = name.split(\"+\")[0];  //In case of label+offset\n\t\t\tif (name === \"\") return labelExists.exists\n\t\t\tif (this._labelTable[name] !== undefined) return labelExists.exists\n\t\t\telse return labelExists.exists_not\n\t\t}\n\t}\n\t/**\n\t * Checks if the given variablename is on the ignore-list\n\t * @param variable\n\t * @returns true if variable can be ignored at NEW-Check\n\t */\n\tprivate _isIgnoredVariable(variable: string): boolean {\n\t\tlet isIgnoredVariable = false;\n\t\tfor (let k = 0; k < this._variablesToBeIgnored.length; k++) {\n\t\t\tif (new RegExp(\"^\" + this._variablesToBeIgnored[k] + \"$\").test(variable)) {\n\t\t\t\tisIgnoredVariable = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn isIgnoredVariable;\n\t}\n\t/**\n\t * Clears all NEWs that were started above the new intendation-level\n\t * @param level old intendation-level\n\t * @param newLevel new-intendation-level\n\t */\n\tprivate _reduceIntendationLevel(level: number, newLevel: number): void {\n\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\tconst index = this._levelExclusiveNew.indexOf(k);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._levelExclusiveNew.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\tfor (const key in this._varStates) {\n\t\t\tconst state = this._varStates[key];\n\t\t\tlet found = false;\n\t\t\tlet memLine = 0;\n\t\t\tlet memPosition = 0;\n\t\t\tif (state.newedAtLevel) {\n\t\t\t\tfor (let k = newLevel + 1; k <= level; k++) {\n\t\t\t\t\tconst index = state.newedAtLevel?.indexOf(k)\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tmemLine = state.newedAtLine[index];\n\t\t\t\t\t\tmemPosition = state.newedAtPostion[index];\n\t\t\t\t\t\tstate.newedAtLevel.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtLine.splice(index, 1);\n\t\t\t\t\t\tstate.newedAtPostion.splice(index, 1);\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\tthis._varStates[key] = state;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found && !state.isUsed) {\n\t\t\t\t\tthis._addWarning(\"Variable \" + key + \" is NEWed but not used\",\n\t\t\t\t\t\tmemLine,\n\t\t\t\t\t\tmemPosition,\n\t\t\t\t\t\tkey.length, vscode.DiagnosticSeverity.Warning,\n\t\t\t\t\t\t\"NewedButNotUsed:\" + key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprivate _addSymbol(name: string, startLine: number, endLine: number): void {\n\t\tconst startPosition = new vscode.Position(startLine, 0);\n\t\tconst endPosition = new vscode.Position(endLine, 0);\n\t\tconst methodRange = new vscode.Location(this._uri, new vscode.Range(startPosition, endPosition));\n\t\tsymbols.push(new vscode.SymbolInformation(name, vscode.SymbolKind.Function, '', methodRange));\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsLineParser, LabelInformation } from './mumpsLineParser'\n\nexport default class MumpsDocumentSymbolProvider implements vscode.DocumentSymbolProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tpublic provideDocumentSymbols(document: vscode.TextDocument): Promise<vscode.SymbolInformation[]> {\n\t\treturn new Promise(resolve => {\n\n\t\t\tconst labels: LabelInformation[] = MumpsLineParser.getLabels(document.getText());\n\t\t\tconst symbols: vscode.SymbolInformation[] = [];\n\n\t\t\tfor (let i = 0; i < labels.length; i++) {\n\t\t\t\tconst startPosition = new vscode.Position(labels[i].line, 0);\n\t\t\t\tlet endPostionLine = document.lineCount - 1;\n\t\t\t\tif (labels[i + 1] !== undefined) {\n\t\t\t\t\tendPostionLine = labels[i + 1].line\n\t\t\t\t}\n\t\t\t\tconst endPosition = new vscode.Position(endPostionLine, 0);\n\t\t\t\tconst methodRange = new vscode.Location(document.uri, new vscode.Range(startPosition, endPosition));\n\t\t\t\tsymbols.push(new vscode.SymbolInformation(labels[i].name, vscode.SymbolKind.Function, '', methodRange));\n\t\t\t}\n\n\t\t\tresolve(symbols);\n\t\t})\n\t}\n}","import * as vscode from 'vscode';\r\nconst DIVIDERLINE = \"\\t;****************\\n\"\r\n\r\nexport default function mumpsDocumenter() {\r\n\tconst editor = vscode.window.activeTextEditor\r\n\tif (editor) {\r\n\t\tconst document = editor.document\r\n\t\tlet InsertPosition = editor.selection.start.with(editor.selection.start.line, 0)\r\n\r\n\t\t//if the line is empty look down for the label\r\n\t\twhile (InsertPosition.line < document.lineCount) {\r\n\t\t\tconst txt = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (txt.replace(/\\t| /ig, \"\") === \"\") {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(1, 0)\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (InsertPosition.line === document.lineCount) {\r\n\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t}\r\n\t\t//start moving up the file looking for the label header\r\n\t\twhile (InsertPosition.line >= 0) {\r\n\t\t\tconst text = editor.document.lineAt(InsertPosition.line).text\r\n\t\t\tif (!(text.length === 0 || text.charAt(0) === \" \" || text.charAt(0) === '\\t' || text.charAt(0) === ';')) {\r\n\t\t\t\teditor.edit((editBuilder) => {\r\n\t\t\t\t\teditBuilder.insert(InsertPosition, makeSignature(text))\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tInsertPosition = InsertPosition.translate(-1, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction makeSignature(labelLine: string) {\r\n\tlet Signature = \"\"\r\n\tlet parameterString: string[] = [];\r\n\tSignature += DIVIDERLINE\r\n\tSignature += \"\\t; DESCRIPTION: \\n\"\r\n\tconst parameters = labelLine.match(/\\(.*\\)/);\r\n\tif (parameters !== null && parameters.length > 0) {\r\n\t\tparameterString = parameters[0].toString().substring(1, parameters[0].toString().length - 1).split(\",\")\r\n\t\tif (parameterString.length > 0) {\r\n\t\t\tSignature += \"\\t; PARAMETERS: \\n\"\r\n\t\t\tparameterString.forEach(function (element: string) {\r\n\t\t\t\tSignature += \"\\t;    \" + element + \": \\n\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tSignature += \"\\t; RETURNS: \\n\"\r\n\tSignature += \"\\t; REVISIONS: \\n\"\r\n\tSignature += DIVIDERLINE\r\n\treturn Signature;\r\n}\r\n\r\n","import * as vscode from 'vscode';\n\nexport default class MumpsEvalutableExpressionProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tprovideEvaluatableExpression(document: vscode.TextDocument, position: vscode.Position): vscode.ProviderResult<vscode.EvaluatableExpression> {\n\t\tconst lineContent = document.lineAt(position.line).text;\n\t\tif (lineContent.charAt(position.character) === \")\") {\n\t\t\treturn MumpsEvalutableExpressionProvider.getExpression(position.line, lineContent.substring(0, position.character))\n\t\t}\n\t\tlet result: RegExpExecArray | null = null;\n\t\tconst expression = /([ (.,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)/g;\n\n\t\t// find the word under the cursor\n\t\t// eslint-disable-next-line no-cond-assign\n\t\twhile (result = expression.exec(lineContent)) {\n\t\t\tlet start = result.index;\n\t\t\tstart += result[0].length - result[2].length; // ignore first part of expression\n\t\t\tconst end = start + result[2].length - 1;\n\t\t\tif (start <= position.character && end >= position.character) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(position.line, start, position.line, end), result[2]);\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\tstatic getExpression(line: number, content: string): vscode.EvaluatableExpression | undefined {\n\t\tlet isInsideString = false;\n\t\tfor (let i = 0; i < content.length; i++) {\n\t\t\tif (content.charAt(i) === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t}\n\t\tif (isInsideString) { //Closing Bracket is inside a String - no evaluable Expression\n\t\t\treturn;\n\t\t}\n\t\tlet level = 1;\n\t\tlet position = 0;\n\t\tfor (let i = content.length - 1; i > -1; i--) {\n\t\t\tconst char = content.charAt(i);\n\t\t\tif (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t}\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tlevel--;\n\t\t\t\tif (level === 0) {\n\t\t\t\t\tposition = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (char === ')' && !isInsideString) {\n\t\t\t\tlevel++;\n\t\t\t}\n\t\t}\n\t\tif (level === 0) { // Corresponding opening bracket found\n\t\t\tconst part = content.substring(0, position);\n\t\t\tconst expression = /([ (,+\\-*_:=])([\\^$]?%?[a-zA-Z][a-zA-Z\\d]*)$/\n\t\t\tconst match = part.match(expression);\n\t\t\tif (match) {\n\t\t\t\treturn new vscode.EvaluatableExpression(new vscode.Range(line, position - match[2].length, line, content.length + 1));\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n}","import * as vscode from 'vscode';\nimport { LineToken, TokenType } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\n\ntype Subroutines = {\n\t[name: string]: {\n\t\tstartLine: number;\n\t\tendLine: number;\n\t};\n};\n\nexport default class MumpsFoldingProvider implements vscode.FoldingRangeProvider {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _subroutines: Subroutines = {};\n\tprivate _foldingRanges: vscode.FoldingRange[] = []\n\tpublic provideFoldingRanges(document: vscode.TextDocument): vscode.ProviderResult<vscode.FoldingRange[]> {\n\t\tconst parseDb = MumpsParseDb.getInstance(document)\n\t\tthis._linetokens = parseDb.getDocumentTokens()\n\t\tthis._foldingRanges = []\n\t\tthis._subroutines = {}\n\t\tlet line = -1\n\t\twhile (line !== -2 && line < this._linetokens.length) {\n\t\t\tconst startSubroutine = ++line\n\t\t\tline = this._lookforNextSubroutineEnd(line)\n\t\t\tif (line === -2) break;\n\t\t\tthis._generateFoldingInfo(startSubroutine, line)\n\t\t}\n\t\tObject.keys(this._subroutines).forEach((name) => {\n\t\t\tthis._separateCommentsandCode(name)\n\t\t})\n\t\treturn this._foldingRanges\n\t}\n\tprivate _lookforNextSubroutineEnd(line: number): number {\n\t\tfor (let index = line; index < this._linetokens.length; index++) {\n\t\t\tconst tokens = this._linetokens[index];\n\t\t\tlet subroutineEndFound = false;\n\t\t\tfor (let j = 0; j < tokens.length; j++) {\n\t\t\t\tconst token = tokens[j]\n\t\t\t\tif (token.type === TokenType.intendation) {\n\t\t\t\t\tbreak; // Ignore QUIT etc in indentation-levels > 0\n\t\t\t\t}\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"FOR\" || command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\t\tbreak; // Ignore QUIT etc after FOR and IF\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(command === \"QUIT\" ||\n\t\t\t\t\t\t\tcommand === \"GOTO\" ||\n\t\t\t\t\t\t\tcommand === \"ZGOTO\" ||\n\t\t\t\t\t\t\tcommand === \"HALT\" ||\n\t\t\t\t\t\t\tcommand === \"ZHALT\") &&\n\t\t\t\t\t\ttoken.isPostconditioned === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (command === \"GOTO\" || command === \"ZGOTO\") {\n\t\t\t\t\t\t\tlet hasPostcondition = false\n\t\t\t\t\t\t\tfor (let k = j + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (subroutineEndFound) {\n\t\t\t\treturn index\n\t\t\t}\n\t\t}\n\t\treturn -2\n\t}\n\tprivate _separateCommentsandCode(subroutineName: string) {\n\t\tconst subroutine = this._subroutines[subroutineName]\n\t\tlet commentStart = -1\n\t\tlet commentLines = 0\n\t\tfor (let line = subroutine.startLine; line < subroutine.endLine; line++) {\n\t\t\tif (this._linetokens[line][0]?.type === TokenType.label && this._linetokens[line][0].name === subroutineName) {\n\t\t\t\tif (commentLines > 1) {\n\t\t\t\t\tthis._foldingRanges.push({ start: commentStart, end: commentStart + commentLines - 1 })\n\t\t\t\t}\n\t\t\t\tcommentStart = -1\n\t\t\t\tcommentLines = 0\n\t\t\t\tthis._foldingRanges.push({ start: line, end: subroutine.endLine })\n\t\t\t} else if (this._linetokens[line][0]?.type === TokenType.comment\n\t\t\t\t|| this._linetokens[line][1]?.type === TokenType.comment\n\t\t\t\t&& this._linetokens[line][0]?.type !== TokenType.label) {\n\t\t\t\tif (commentStart === -1) {\n\t\t\t\t\tcommentStart = line\n\t\t\t\t\tcommentLines = 1\n\t\t\t\t} else commentLines++\n\t\t\t} else {\n\t\t\t\tif (commentLines > 1) {\n\t\t\t\t\tthis._foldingRanges.push({ start: commentStart, end: commentStart + commentLines - 1 })\n\t\t\t\t}\n\t\t\t\tcommentStart = -1\n\t\t\t\tcommentLines = 0\n\t\t\t}\n\t\t}\n\t}\n\tprivate _generateFoldingInfo(startLine: number, endLine: number) {\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tconst tokens = this._linetokens[i]\n\t\t\tif (tokens[0]?.type === TokenType.label) {\n\t\t\t\tconst label = tokens[0].name\n\t\t\t\tthis._subroutines[label] = { startLine, endLine }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}","import * as vscode from 'vscode';\nexport default class MumpsFormattingHelpProvider {\n\t/*eslint class-methods-use-this: 0*/\n\tprovideDocumentFormattingEdits(document: vscode.TextDocument) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n\tprovideDocumentRangeFormattingEdits(document: vscode.TextDocument, range: vscode.Range) {\n\t\tconst textEdits: vscode.TextEdit[] = []\n\t\tfor (let i = range.start.line; i <= range.end.line; i++) {\n\t\t\tconst line = document.lineAt(i).text;\n\t\t\tformatDocumentLine(line, i, textEdits);\n\t\t}\n\t\treturn textEdits;\n\t}\n}\nfunction formatDocumentLine(line: string, lineNumber: number, textEdits) {\n\tconst emptyLine = line.replace(/( |\\t)/ig, \"\");\n\tif (emptyLine.length === 0) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, 0), \"\\t;\"))\n\t}\n\tif (line.endsWith(\". \") || line.endsWith(\".\")) {\n\t\ttextEdits.push(vscode.TextEdit.insert(new vscode.Position(lineNumber, line.length), \";\"))\n\t}\n\tif (line.startsWith(\" \")) {\n\t\tlet endSpace: number;\n\t\tfor (endSpace = 0; endSpace < line.length; endSpace++) {\n\t\t\tif (line.charAt(endSpace) !== \" \") {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, 0), new vscode.Position(lineNumber, endSpace)), \"\\t\"));\n\t}\n\tif (line.match(/^([A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?)?[\\t ]+\\./)) { //labeled or unlabeled Line with .\n\t\tlet replacementString = \". \";\n\t\tconst dotPosition = line.indexOf(\".\");\n\t\tlet dotCount = 1;\n\t\tlet spaceCount = 0;\n\t\tlet char = \"\";\n\t\tdo {\n\t\t\tchar = line.charAt(dotCount + spaceCount + dotPosition);\n\t\t\tif (char === \" \") {\n\t\t\t\tspaceCount++;\n\t\t\t} else if (char === \".\") {\n\t\t\t\tdotCount++;\n\t\t\t\treplacementString += \". \";\n\t\t\t}\n\t\t} while (char === \".\" || char === \" \")\n\t\tif (dotCount !== spaceCount) {\n\t\t\ttextEdits.push(vscode.TextEdit.replace(new vscode.Range(new vscode.Position(lineNumber, dotPosition), new vscode.Position(lineNumber, dotPosition + dotCount + spaceCount)), replacementString));\n\t\t}\n\t}\n}\n","import * as vscode from 'vscode';\nimport { MumpsConnect, MumpsGlobal } from './mumpsConnect';\n\nexport class MumpsGlobalProvider implements vscode.TreeDataProvider<GlobalNode> {\n\tprivate static instance: MumpsGlobalProvider;\n\tprivate static _onDidChangeTreeData: vscode.EventEmitter<GlobalNode | undefined | void> = new vscode.EventEmitter<GlobalNode | undefined | void>();\n\treadonly onDidChangeTreeData: vscode.Event<GlobalNode | undefined | void> = MumpsGlobalProvider._onDidChangeTreeData.event;\n\tprivate static _mconnect: MumpsConnect | null = null;\n\tprivate constructor() {\n\t}\n\tstatic getInstance() {\n\t\tif (!MumpsGlobalProvider.instance) {\n\t\t\tMumpsGlobalProvider.instance = new MumpsGlobalProvider();\n\t\t}\n\t\treturn MumpsGlobalProvider.instance;\n\t}\n\tstatic refresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\tasync search(node?: GlobalNode) {\n\t\tlet searchFor: string | undefined = undefined\n\t\tif (node) {\n\t\t\tconst globalName = node.id?.split(\"(\")[0] || \"\"\n\t\t\tsearchFor = await vscode.window.showInputBox({\n\t\t\t\ttitle: \"Search inside Global\" + globalName,\n\t\t\t\tplaceHolder: 'Type the text to search'\n\t\t\t});\n\t\t\tif (searchFor) {\n\t\t\t\tconst searchNode = new GlobalNode(globalName, searchFor, vscode.TreeItemCollapsibleState.None, \"search\")\n\t\t\t\tthis.getChildren(searchNode)\n\t\t\t}\n\t\t} else {\n\t\t\tsearchFor = await vscode.window.showInputBox({\n\t\t\t\ttitle: \"Search for global key\",\n\t\t\t\tplaceHolder: 'Type the global key to show'\n\t\t\t});\n\t\t\tif (searchFor) {\n\t\t\t\tif (searchFor.length) {\n\t\t\t\t\tif (searchFor[0] !== \"^\") searchFor = \"^\" + searchFor\n\t\t\t\t\tif (searchFor.indexOf(\"(\") !== -1) {\n\t\t\t\t\t\tlet trailingPara = false\n\t\t\t\t\t\tif (searchFor.slice(-1) === \")\") {\n\t\t\t\t\t\t\ttrailingPara = true\n\t\t\t\t\t\t\tsearchFor = searchFor.slice(0, -1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst keys = searchFor.split(\"(\")[1].split(\",\");\n\t\t\t\t\t\tkeys.forEach((key, index) => {\n\t\t\t\t\t\t\tif (index === keys.length - 1 && key.slice(-1) === \")\") key = key.slice(0, -1)\n\t\t\t\t\t\t\tif (isNaN(parseFloat(key))) {\n\t\t\t\t\t\t\t\tif (key[0] !== '\"' || key.slice(-1) !== '\"') {\n\t\t\t\t\t\t\t\t\tkey = '\"' + key + '\"'\n\t\t\t\t\t\t\t\t\tkeys[index] = key\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tconst ending = trailingPara ? \")\" : \"\"\n\t\t\t\t\t\tsearchFor = searchFor.split(\"(\")[0] + \"(\" + keys.join(\",\") + ending\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst node = new GlobalNode(searchFor, \"\", vscode.TreeItemCollapsibleState.Expanded, \"\")\n\t\t\t\tthis.getChildren(node);\n\t\t\t}\n\t\t}\n\t\tMumpsGlobalProvider.refresh();\n\t}\n\tstatic setMconnect(mconnect: MumpsConnect) {\n\t\tMumpsGlobalProvider._mconnect = mconnect\n\t}\n\t/*eslint class-methods-use-this: 0*/\n\tgetTreeItem(element: GlobalNode): vscode.TreeItem {\n\t\treturn element;\n\t}\n\tasync getMoreNodes(node: GlobalNode) {\n\t\tif (node !== undefined && node.id) {\n\t\t\tnode.id = node.id.slice(0, -1)\n\t\t\tthis.getChildren(node)\n\t\t\tMumpsGlobalProvider.refresh();\n\t\t}\n\t}\n\tasync getChildren(element?: GlobalNode): Promise<GlobalNode[]> {\n\t\tconst globalNodes: GlobalNode[] = [];\n\t\tlet id = \"\"\n\t\tif (element !== undefined && element.id) {\n\t\t\tid = element.id\n\t\t}\n\t\tlet nodes: MumpsGlobal | undefined = undefined\n\t\tif (element?.contextValue === \"search\") {\n\t\t\tconst searchFor: string = element.description as string\n\t\t\tnodes = await MumpsGlobalProvider._mconnect?.getGlobals(searchFor, id)\n\t\t} else {\n\t\t\tnodes = await MumpsGlobalProvider._mconnect?.getGlobals(id)\n\t\t}\n\t\tfor (const key in nodes) {\n\t\t\tconst variable = nodes[key];\n\t\t\tconst value = variable.value;\n\t\t\tconst isCollapsed = variable.hasChildren ? vscode.TreeItemCollapsibleState.Collapsed : vscode.TreeItemCollapsibleState.None;\n\t\t\tconst context = variable.moreToFollow ? \"moreToCome\" : \"\";\n\t\t\tglobalNodes.push(new GlobalNode(key, value, isCollapsed, context))\n\t\t}\n\t\treturn Promise.resolve(globalNodes);\n\t}\n}\n\nexport class GlobalNode extends vscode.TreeItem {\n\n\tconstructor(id: string, value: string, collapsibleState: vscode.TreeItemCollapsibleState, context: string) {\n\t\tsuper(value, collapsibleState);\n\t\tthis.id = id\n\t\tthis.label = id;\n\t\tthis.description = value;\n\t\tif (context !== \"\") this.contextValue = context\n\t\treturn this;\n\t}\n\tcontextValue = 'globalnode';\n}\n","import * as vscode from 'vscode';\r\nimport { TokenType, LineToken } from './mumpsLineParser'\r\nimport MumpsParseDb from './mumpsParseDb';\r\nconst tokenModifiers = ['readonly', 'deprecated'];\r\nconst tokentypes: string[] = Object.keys(TokenType).map(key => TokenType[key]);\r\ntokentypes.push(\"unreachable\")\r\nconst SemanticTokens = new vscode.SemanticTokensLegend(tokentypes, tokenModifiers);\r\n\r\n//type: \"global\" | \"local\" | \"exfunction\" | \"nonMfunction\" | \"entryref\" | \"operator\" |\r\n//      \"keyword\" | \"ifunction\" | \"label\" | \"comment\" | \"sysvariable\" | \"string\" | \"number\",\r\n\r\n\r\nconst MumpsHighlighter: vscode.DocumentSemanticTokensProvider = {\r\n\t// analyze the document and return semantic tokens\r\n\tprovideDocumentSemanticTokens(document: vscode.TextDocument): vscode.ProviderResult<vscode.SemanticTokens> {\r\n\t\tconst parseDb = MumpsParseDb.getInstance(document)\r\n\t\tconst documentTokens: LineToken[][] = parseDb.getDocumentTokens()\r\n\t\tconst tokensBuilder = new vscode.SemanticTokensBuilder(SemanticTokens);\r\n\t\tconst subtype = \"readonly\"\r\n\t\tfor (let line = 0; line < documentTokens.length; line++) {\r\n\t\t\tconst tokens: LineToken[] = documentTokens[line];\r\n\t\t\tfor (let tokenId = 0; tokenId < tokens.length; tokenId++) {\r\n\t\t\t\tconst t = tokens[tokenId];\r\n\t\t\t\tconst type = t.type;\r\n\t\t\t\tlet position = t.position\r\n\t\t\t\tlet name = t.name\r\n\t\t\t\tif (type === TokenType.exfunction) {\r\n\t\t\t\t\tposition -= 2;\t\t\t//Correct Position because of leading $$\r\n\t\t\t\t\tname = \"$$\" + t.name;\r\n\t\t\t\t} else if (type === TokenType.comment) {\r\n\t\t\t\t\tname = \";\" + name; // Token is too short else\r\n\t\t\t\t}\r\n\t\t\t\tconst typeString = t.isUnreachable ? \"unreachable\" : TokenType[type]\r\n\t\t\t\t//console.log({ Type: TokenType[type], SubType: subtype, line, start: t.position, end: (position + name.length) })\r\n\t\t\t\ttokensBuilder.push(\r\n\t\t\t\t\tnew vscode.Range(new vscode.Position(line, t.position), new vscode.Position(line, position + name.length)),\r\n\t\t\t\t\ttypeString, [subtype]\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tokensBuilder.build();\r\n\t}\r\n};\r\n\r\nexport { MumpsHighlighter, SemanticTokens }\r\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsHoverProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideHover(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenHoverInfo();\r\n\t}\r\n}\r\n","/* eslint-disable no-cond-assign */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/* eslint-disable no-prototype-builtins */\r\nimport fs = require('fs');\r\nexport type ErrorInformation = {\r\n\ttext: string,\r\n\tposition: number,\r\n\tline?: number,\r\n\tindexFound?: boolean,\r\n\tglobalFound?: boolean,\r\n\tindirectionFound?: boolean\r\n}\r\nexport enum TokenType {\r\n\tglobal, local, exfunction, nonMfunction, entryref, operator, keyword, ifunction,\r\n\tlabel, comment, sysvariable, string, number, intendation, argPostcondition\r\n}\r\nexport type LineToken = {\r\n\ttype: TokenType,\r\n\tname: string,\r\n\tlongName?: string,\r\n\tisPostconditioned?: boolean,\r\n\tisExcludedVariable?: boolean,\r\n\tisUnreachable?: boolean,\r\n\thasArguments?: boolean,\r\n\tposition: number\r\n}\r\ntype LineComand = {\r\n\tcommand: string,\r\n\tposition: number\r\n}\r\ntype LineComment = {\r\n\tcomment: string,\r\n\tposition: number\r\n}\r\nexport type LineObject = {\r\n\tlineComment?: LineComment;\r\n\tlineIndentationArray?: string[];\r\n\tlineRoutines?: TmpFunction[];\r\n\tlineLeadSpace?: string,\r\n\tlineLabel?: string,\r\n\tlineExpression: string,\r\n\terrorText?: string,\r\n\terrorPosition?: number,\r\n\texpressionPosition: number\r\n}\r\ntype TmpFunction = {\r\n\tmCommand: string,\r\n\tmArguments: string,\r\n\tmPostCondition: string,\r\n\tcmdPosition: number,\r\n\targPosition: number,\r\n\tpcPosition: number\r\n}\r\ntype ModifiedLine = {\r\n\tlineText: string,\r\n\terrorText: string\r\n}\r\nexport type LineInformation = {\r\n\terror: ErrorInformation,\r\n\ttokens: LineToken[],\r\n\tintendationLevel: number\r\n}\r\nexport type LabelInformation = {\r\n\tname: string,\r\n\tline: number\r\n}\r\n//const label = /^[A-Za-z%][A-Za-z0-9]*(\\([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*\\))?/\r\nexport const label = /^(([A-Za-z%][A-Za-z0-9]*)|\\d+):?(\\(([A-Za-z%][A-Za-z0-9]*(,[A-Za-z%][A-Za-z0-9]*)*)?\\))?/\r\nconst lvn = /^[A-Za-z%][A-Za-z0-9]*/\r\nconst gvn = /^\\^[A-Za-z%][A-Za-z0-9]*/\r\nconst isv = /^\\$(DEVICE|ECODE|EC|ESTACK|ES|ETRAP|ET|HALT|HOROLOG|H|IO|I|JOB|J|KEY|K|NAMESPACE|PRINCIPAL|P|QUIT|Q|REFERENCE|R|STACK|STORAGE|ST|SYSTEM|SY|S|TEST|THIS|TLEVEL|TL|T|USERNAME|X|Y|ZALLOCSTOR|ZA|ZB|ZCHSET|ZCLOSE|ZCMDLINE|ZCM|ZCOMPILE|ZCO|ZCSTATUS|ZCH[A-Z]*|ZC|ZDATEFORM|ZDA|ZDIRECTORY|ZD|ZEDITOR|ZED|ZEOF|ZEO|ZE[A-Z]*|ZGBLDIR|ZG|ZHRORLOG|ZH|ZININTERRUPT|ZINI|ZINTERRUPT|ZINT|ZIO|ZJOB|ZJ|ZKEY|ZLEVEL|ZL|ZMAXTPTIME|ZMAXTPTI|ZMODE|ZMO|ZONLNRLBK|ZPATNUMERIC|ZPATN|ZPIN|ZPOSITION|ZPOS|ZPOUT|ZPROMPT|ZQUIT|ZREALSTOR|ZRELDATE|ZRO[A-Z]*|ZSOURCE|ZSO|ZSTA[A-Z]*|ZSTEP|ZSTRP|ZSTRPLLIM|ZST|ZSYSTEM|ZSY|ZS|ZTEXIT|ZTE|ZTIMEOUT|ZTIM|ZTRAP|ZT|ZUSEDSTOR|ZUT|ZVERSION|ZV[A-Z]*|ZYERROR|ZYRELEASE|ZTDATA|ZTDELIM|ZTLEVEL|ZTNAME|ZTOLDVAL|ZTRIGGEROP|ZTSLATE|ZTUPDATE|ZTVALUE|ZTWORMHOLE)/i\r\nconst ifunction = /^\\$(ASCII|A|CHAR|C|DATA|D|EXTRACT|E|FIND|F|FNUMBER|FN|GET|G|INCREMENT|INCR|I|JUSTIFY|J|LENGTH|L|NAME|NA|NEXT|N|ORDER|O|PIECE|P|QLENGTH|QL|QSUBSCRIPT|QS|QUERY|Q|RANDOM|R|REVERSE|RE|SELECT|S|STACK|ST|TEXT|T|TRANSLATE|TR|VIEW|V|ZAHANDLE|ZAH|ZASCII|ZATRANSFORM|ZAT|ZA|ZBITAND|ZBITCOUNT|ZBITFIND|ZBITGET|ZBITLEN|ZBITNOT|ZBITOR|ZBITSET|ZBITSTR|ZBITXOR|ZCHAR|ZCH|ZCOLLATE|ZCONVERT|ZCO|ZDATE|ZDATA|ZD|ZEXTRACT|ZE|ZFIND|ZF|ZGETJPI|ZG|ZINCREMENT|ZINCR|ZJOBEXAM|ZJUSTIFY|ZJ|ZLENGTH|ZL|ZMESSAGE|ZM|ZPARSE|ZPEEK|ZPIECE|ZPI|ZPREVIOUS|ZP|ZQGBLMOD|ZSEARCH|ZSIGPROC|ZSOCKET|ZSUBSTR|ZSUB|ZSYSLOG|ZTRANSLATE|ZTRIGGER|ZTRI|ZTRNLNM|ZTR|ZWIDTH|ZWRITE|ZW|ZYHASH|ZYISSQLNULL|ZYSUFFIX)(?=\\()/i;\r\nconst nonMfunction = /^\\$&([A-Za-z%0-9][A-Za-z0-9]*\\.)?([A-Za-z%0-9][A-Za-z0-9]*)(\\^[A-Za-z%][A-Za-z0-9]*)?/\r\n//export const entryref = /^(&[A-Za-z0-9]*\\.?)?@?([A-Za-z%0-9][A-Za-z0-9]*)?(\\^@?[A-Za-z%][A-Za-z0-9]*)?/\r\nexport const entryref = /^(&[A-Za-z0-9]*\\.?)?([A-Za-z%0-9][A-Za-z0-9]*)?(\\^[A-Za-z%][A-Za-z0-9]*)?/\r\nconst routineref = /^\\^[A-Za-z%][A-Za-z0-9]*/\r\nconst numlit = /^(\\d+(\\.\\d*)?|\\.\\d+)(E-?\\d+)?/\r\nconst strlit = /^\"(\"\"|[^\"])*\"/\r\nconst command = /^[B|BREAK|C|CLOSE|D|DO|E|ELSE|F|FOR|G|GOTO|H|HALT|HANG|I|IF|J|JOB|K|KILL|L|LOCK|M|MERGE|N|NEW|O|OPEN|Q|QUIT|R|READ|S|SET|U|USE|V|VIEW|W|WRITE|X|XECUTE|ZA|ZALLOCATE|ZBR|ZBREAK|ZC|ZCONTINUE|ZD|ZDEALLOCATE|ZE|ZEDIT|ZG|ZGOTO|ZHALT|ZH|ZHELP|ZK|ZKILL|ZL|ZLINK|ZM|ZMESSAGE|ZP|ZPRINT|ZRUPDATE|ZSH|ZSHOW|ZST|ZSTEP|ZSY|ZSYSTEM|ZTC|ZTCOMMIT|ZTR|ZTRIGGER|ZTS|ZTSTART|ZWI|ZWITHDRAW|ZWR|ZWRITE]/i\r\nconst binoperator = /^('=|'>|'<|<=|>=|'&|'!|'\\?|'\\[|'\\]\\]|'\\]|\\*\\*|\\+|-|\\*|\\/|\\\\|#|'|&|!|_|<|>|=|\\[|\\]\\]|\\]|\\?|@)/\r\nconst unaryoperator = /(-|'|\\+|@)/\r\nconst patcode = /^([A|C|E|L|N|P|U]|^\"(\"\"|[^\"])*\")+/i\r\nconst repititionCount = /^\\d*\\.?\\d*/\r\nconst openkeywords = /^APPEND|ATTACH=|BLOCK(SIZE)?=|COMM(AND)?=|CONNECT=|(NO)?DELIM(ITER)?=?|EXC(EPTION)?=|FIFO|(NO)?FIXED|GROUP=|[IO]?CHSET=|KEY|IKEY|INDEPENDENT|IOERROR=|NEW[A-Z]*|MOREREADTIME=|OKEY|OWNER=|PARSE|(NO)?RCHK|(NO)?READ(ONLY)?|RECORD(SIZE)?=|(NO)?RETRY|REWIND|SEEK=|SHELL=|STDERR=|(NO)?STREAM|SYSTEM=|(NO)?TRUNCATE|UIC=|VARIABLE|WORLD=|Z?(NO)?WRAP|WRITE(ONLY)?|ZBFSIZE=|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE=|Z?LISTEN=/i\r\nconst usekeywords = /^ATTACH=|(NO)?CENABLE|[IO]?CHSET=|CLEAR(SCREEN)?|CONNECT|(NO)?CONVERT|CTRAP=|(NO)?DELIM(ITER)?=?|DETACH=|DOWNSCROLL|(NO)?ECHO|(NO)?EDITING|ERASELINE|(NO)?ESC(APE)?|EXC(EPTION)?=|(NO)?FILTER=?|FLUSH|GROUP=|KEY|IKEY|IOERROR=|OKEY|OWNER=|(NO)?PASTHRU|(NO)?RCHK|(NO)?RETRY|REWIND|SEEK=|SKIPFILE=|SOCKET=|SPACE=|TERM(INATOR)?=|(NO)?TRUNCATE|(NO)?TTSNYC|(NO)?TYPEAHEAD|UPSCROLL|Z?LENGTH=|Z?WIDTH=|Z?(NO)?WRAP|WRITELB=|X=|Y=|ZBFSIZE|Z(NO)?DELAY|Z(NO)?FF|ZIBFSIZE|LISTEN=/i\r\nconst closekeywords = /^DELETE|(NO)?DESTROY|EXCEPTION=|GROUP=|OWNER=|RENAME=|REPLACE=|SOCKET=|TIMEOUT=|UIC=|WORLD=/i\r\nconst jobkeywords = /^CMD=|CMDLINE=|DEF=|DEFAULT=|ERR=|ERROR=|GBL=|GBLDIR=|IN=|INPUT=|OUT=|OUTPUT=|PASS|PASSCURLVN|STA=|STARTUP=/i\r\nconst tstartkeywords = /^SERIAL|S|T=|TRANSACTIONID=/i\r\nconst cmdExpansions = {\r\n\t'B': 'BREAK', 'C': 'CLOSE', 'D': 'DO', 'E': 'ELSE', 'F': 'FOR', 'G': 'GOTO', 'H': 'HALT', 'I': 'IF', 'J': 'JOB', 'K': 'KILL', 'L': 'LOCK', 'M': 'MERGE', 'N': 'NEW',\r\n\t'O': 'OPEN', 'Q': 'QUIT', 'R': 'READ', 'S': 'SET', 'U': 'USE', 'V': 'VIEW', 'W': 'WRITE', 'X': 'XECUTE', 'ZA': 'ZALLOCATE', 'ZB': 'ZBREAK', 'ZC': 'ZCONTINUE',\r\n\t'ZD': 'ZDEALLOCATE', 'ZED': 'ZEDIT', 'ZG': 'ZGOTO', 'ZH': 'ZHELP', 'ZK': 'ZKILL', 'ZL': 'ZLINK', 'ZM': 'ZMESSAGE', 'ZP': 'ZPRINT', 'ZSH': 'ZSHOW',\r\n\t'ZST': 'ZSTEP', 'ZSY': 'ZSYSTEM', 'ZTC': 'ZTCOMMIT', 'ZTR': 'ZTRIGGER', 'ZTS': 'ZTSTART', 'ZWI': 'ZWITHDRAW', 'ZWR': 'ZWRITE'\r\n}\r\nconst funcExpansions = {\r\n\t'A': 'ASCII', 'C': 'CHAR', 'D': 'DATA', 'E': 'EXTRACT', 'F': 'FIND', 'FN': 'FNUMBER', 'G': 'GET', 'I': 'INCREMENT', 'INCR': 'INCREMENT', 'J': 'JUSTIFY', 'L': 'LENGTH', 'NA': 'NAME', 'N': 'NEXT', 'O': 'ORDER',\r\n\t'P': 'PIECE', 'QL': 'QLENGTH', 'QS': 'QSUBSCRIPT', 'Q': 'QUERY', 'R': 'RANDOM', 'RE': 'REVERSE', 'S': 'SELECT', 'ST': 'STACK', 'T': 'TEXT', 'TR': 'TRANSLATE', 'V': 'VIEW',\r\n\t'ZA': 'ZASCII', 'ZAH': 'ZAHANDLE', 'ZCH': 'ZCHAR', 'ZCO': 'ZCONVERT', 'ZD': 'ZDATE', 'ZE': 'ZEXTRACT', 'ZF': 'ZFIND', 'ZG': 'ZGETJPI', 'ZJ': 'ZJUSTIFY', 'ZL': 'ZLENGTH', 'ZM': 'ZMESSAGE', 'ZPI': 'ZPIECE', 'ZP': 'ZPREVIOUS',\r\n\t'ZSUB': 'ZSUBSTR', 'ZTR': 'ZTRANSLATE', 'ZTRI': 'ZTRIGGER', 'ZW': 'ZWIDTH'\r\n}\r\nconst isvExpansions = {\r\n\t'D': 'DEVICE', 'EC': 'ECODE', 'ES': 'ESTACK', 'ET': 'ETRAP', 'H': 'HOROLOG', 'I': 'IO', 'J': 'JOB', 'K': 'KEY', 'P': 'PRINCIPAL', 'Q': 'QUIT', 'R': 'REFERENCE', 'ST': 'STACK',\r\n\t'S': 'STORAGE', 'SY': 'SYSTEM', 'T': 'TEST', 'TL': 'TLEVEL', 'TR': 'TRESTART', 'ZC': 'ZCSTATUS', 'ZDA': 'ZDATEFORM', 'ZD': 'ZDIRECTORY', 'ZED': 'ZEDITOR', 'ZEO': 'ZEOF', 'ZE': 'ZERROR',\r\n\t'ZG': 'ZGBLDIR', 'ZH': 'ZHRORLOG', 'ZINI': 'ZININTERRUPT', 'ZINT': 'ZINTERRUPT', 'ZJ': 'ZJOB', 'ZL': 'ZLEVEL', 'ZMAXPTI': 'ZMAXTPTIME', 'ZMO': 'ZMODE', 'ZPOS': 'ZPOSITION',\r\n\t'ZPROM': 'ZPROMPT', 'ZRO': 'ZROUTINES', 'ZSO': 'ZSOURCE', 'ZS': 'ZSTATUS', 'ZST': 'ZSTEP', 'ZSTRP': 'ZSTRPLLIM', 'ZSY': 'ZSYSTEM', 'ZTE': 'ZTEXIT', 'ZTIM': 'ZTIMEOUT', 'ZT': 'ZTRAP',\r\n\t'ZV': 'ZVERSION', 'ZYER': 'ZYERROR', 'ZYRE': 'ZYRELEASE', 'ZTDE': 'ZTDELIM'\r\n\r\n}\r\nconst cmdParams = {\r\n\t'BREAK': {\r\n\t\t'abbreviation': 'B',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:tvexpr][,...]]'\r\n\t},\r\n\t'CLOSE': {\r\n\t\t'abbreviation': 'C',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'DO': {\r\n\t\t'abbreviation': 'D',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[(expr:.lvn[,...])][:tvexpr][,...]]'\r\n\t},\r\n\t'ELSE':\r\n\t{\r\n\t\t'abbreviation': 'E',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'FOR': {\r\n\t\t'abbreviation': 'F',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[lvn=expr[:numexpr1[:numexpr2]][,...]]]'\r\n\t},\r\n\t'GOTO': {\r\n\t\t'abbreviation': 'G',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[:tvexpr][,...]'\r\n\t},\r\n\t'HALT': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'HANG': {\r\n\t\t'abbreviation': 'H',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'numexpr[,...]'\r\n\t},\r\n\t'IF': {\r\n\t\t'abbreviation': 'I',\r\n\t\t'postcondition': false,\r\n\t\t'parameter': '[tvexpr[,...]]'\r\n\t},\r\n\t'JOB': {\r\n\t\t'abbreviation': 'J',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]'\r\n\t},\r\n\t'KILL': {\r\n\t\t'abbreviation': 'K',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[glvn | (lvn[,...]) | *lname | *lvn ]'\r\n\t},\r\n\t'LOCK': {\r\n\t\t'abbreviation': 'L',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[-|+]nref|(nref[,...])[:numexpr] [,...]]'\r\n\t},\r\n\t'MERGE': {\r\n\t\t'abbreviation': 'M',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn=glvn[,...]'\r\n\t},\r\n\t'NEW': {\r\n\t\t'abbreviation': 'N',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[(]lvn[,...][)][,...]]'\r\n\t},\r\n\t'OPEN': {\r\n\t\t'abbreviation': 'O',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:[(keyword[=expr][:...])] [:numexpr]][,...]'\r\n\t},\r\n\t'QUIT': {\r\n\t\t'abbreviation': 'Q',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr | *lname | *lvn]'\r\n\t},\r\n\t'READ': {\r\n\t\t'abbreviation': 'R',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]'\r\n\t},\r\n\t'SET': {\r\n\t\t'abbreviation': 'S',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]'\r\n\t},\r\n\t'TCOMMIT': {\r\n\t\t'abbreviation': 'TC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TRESTART': {\r\n\t\t'abbreviation': 'TRE',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'TROLLBACK': {\r\n\t\t'abbreviation': 'TRO',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'TSTART': {\r\n\t\t'abbreviation': 'TS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[([lvn...])|lvn|*|][:keyword|(keyword...)]'\r\n\t},\r\n\t'USE': {\r\n\t\t'abbreviation': 'U',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:(keyword[=expr][:...])][,...]'\r\n\t},\r\n\t'VIEW': {\r\n\t\t'abbreviation': 'V',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'keyword[:expr[:...]][,...]'\r\n\t},\r\n\t'WRITE': {\r\n\t\t'abbreviation': 'W',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr|*intexpr|fcc[,...]'\r\n\t},\r\n\t'XECUTE': {\r\n\t\t'abbreviation': 'X',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[:tvexpr][,...]'\r\n\t},\r\n\t'ZALLOCATE': {\r\n\t\t'abbreviation': 'ZA',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[(]nref[,...][)][:intexpr][,...]'\r\n\t},\r\n\t'ZBREAK': {\r\n\t\t'abbreviation': 'ZB',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[-]entryref[:[expr][:intexpr]][,...]'\r\n\t},\r\n\t'ZCOMPILE': {\r\n\t\t'abbreviation': 'ZCOM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZCONTINUE': {\r\n\t\t'abbreviation': 'ZC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZDEALLOCATE': {\r\n\t\t'abbreviation': 'ZD',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[nref[,...]]'\r\n\t},\r\n\t'ZEDIT': {\r\n\t\t'abbreviation': 'ZED',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[,...]]'\r\n\t},\r\n\t'ZGOTO': {\r\n\t\t'abbreviation': 'ZG',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t},\r\n\t'ZHALT': {\r\n\t\t'abbreviation': 'ZHALT',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZHELP': {\r\n\t\t'abbreviation': 'ZH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2],...]'\r\n\t},\r\n\t'ZKILL': {\r\n\t\t'abbreviation': 'ZK',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZLINK': {\r\n\t\t'abbreviation': 'ZL',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr1[:expr2][,...]]'\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'abbreviation': 'ZM',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'intexpr[:expr2][:...]'\r\n\t},\r\n\t'ZPRINT': {\r\n\t\t'abbreviation': 'ZP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t},\r\n\t'ZRUPDATE': {\r\n\t\t'abbreviation': 'ZRUP',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'expr[,...]'\r\n\t},\r\n\t'ZSHOW': {\r\n\t\t'abbreviation': 'ZSH',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr[:glvn][,...]]'\r\n\t},\r\n\t'ZSTEP': {\r\n\t\t'abbreviation': 'ZST',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[keyword[:expr]][,...]'\r\n\t},\r\n\t'ZSYSTEM': {\r\n\t\t'abbreviation': 'ZSY',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[expr][,...]]'\r\n\t},\r\n\t'ZTCOMMIT': {\r\n\t\t'abbreviation': 'ZTC',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[intexpr]'\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'abbreviation': 'ZTR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'gvn'\r\n\t},\r\n\t'ZTSTART': {\r\n\t\t'abbreviation': 'ZTS',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': ''\r\n\t},\r\n\t'ZWITHDRAW': {\r\n\t\t'abbreviation': 'ZWI',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': 'glvn'\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'abbreviation': 'ZWR',\r\n\t\t'postcondition': true,\r\n\t\t'parameter': '[zwrglvn[,...]]'\r\n\t}\r\n}\r\nconst funcParams = {\r\n\t'ASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'CHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'DATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'EXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FIND': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'FNUMBER': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'GET': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'INCREMENT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'JUSTIFY': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'LENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'NAME': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'NEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn('\r\n\t},\r\n\t'ORDER': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'PIECE': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'QLENGTH': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'expr'\r\n\t},\r\n\t'QSUBSCRIPT': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'expr,expr'\r\n\t},\r\n\t'QUERY': {\r\n\t\t'maxparams': 2,\r\n\t\t'format': 'glvn,expr'\r\n\t},\r\n\t'RANDOM': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'REVERSE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'SELECT': {\r\n\t\t'maxparams': 99,\r\n\t\t'format': 'special'\r\n\t},\r\n\t'STACK': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'TEXT': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'entryref'\r\n\t},\r\n\t'TRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'VIEW': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZAHANDLE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZASCII': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZATRANSFORM': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4,\r\n\t\t'format': 'expr,expr,bool,bool'\r\n\t},\r\n\t'ZBITAND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITCOUNT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITFIND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITGET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITLEN': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITNOT': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZBITOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITSET': {\r\n\t\t'minparams': 3,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZBITSTR': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZBITXOR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZCHAR': {\r\n\t\t'maxparams': 99\r\n\t},\r\n\t'ZCOLLATE': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3,\r\n\t\t'format': 'expr,expr,bool'\r\n\t},\r\n\t'ZCONVERT': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZDATA': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'lvn'\r\n\t},\r\n\t'ZDATE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZEXTRACT': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZFIND': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZGETJPI': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZJOBEXAM': {\r\n\t\t'minparams': 0,\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZJUSTIFY': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZLENGTH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZMESSAGE': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZPARSE': {\r\n\t\t'maxparams': 5,\r\n\t\t'format': 'expr,expr|null,expr|null,expr|null,expr'\r\n\t},\r\n\t'ZPEEK': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPIECE': {\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZPREVIOUS': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'glvn'\r\n\t},\r\n\t'ZQGBLMOD': {\r\n\t\t'maxparams': 1,\r\n\t\t'format': 'gvn'\r\n\t},\r\n\t'ZSEARCH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSIGPROC': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZSOCKET': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 4\r\n\t},\r\n\t'ZSUBSTR': {\r\n\t\t'minparams': 2,\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZSYSLOG': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZTRANSLATE': {\r\n\t\t'maxparams': 3\r\n\t},\r\n\t'ZTRIGGER': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZTRNLNM': {\r\n\t\t'maxparams': 6\r\n\t},\r\n\t'ZWIDTH': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZWRITE': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZYHASH': {\r\n\t\t'maxparams': 2\r\n\t},\r\n\t'ZYISSQLNULL': {\r\n\t\t'maxparams': 1\r\n\t},\r\n\t'ZYSUFFIX': {\r\n\t\t'maxparams': 1\r\n\t}\r\n}\r\nconst expressiontype = {\r\n\t\"Standard\": 0,\r\n\t\"Index\": 1,\r\n\t\"eArgument\": 2,\r\n\t\"iArgument\": 3,\r\n\t\"Atom\": 4\r\n}\r\n\r\nclass MumpsLineParser {\r\n\tprivate _tokens: LineToken[] = [];\r\n\tprivate _intendationLevel: number = 0;\r\n\tprivate cmdCompressions: object;\r\n\tprivate funcCompressions: object;\r\n\tprivate isvCompressions: object;\r\n\tprivate _tokenSaveEnabled: boolean = true;\r\n\t/**\r\n\t * Checks if the given File is correct M-Code\r\n\t * @param filename\r\n\t * @returns Array with list of errors or an empty array if no errors found in file\r\n\t */\r\n\tpublic checkFile(filename: string): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tlet content: string;\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch (err) {\r\n\t\t\terrlist.push({ text: 'File read error: ' + filename, position: 0, line: 0 });\r\n\t\t\treturn errlist;\r\n\t\t}\r\n\t\tconst lines = content.split('\\n');\r\n\t\treturn this.checkLines(lines);\r\n\t}\r\n\tpublic checkLines(lines: string[]): ErrorInformation[] {\r\n\t\tconst errlist: ErrorInformation[] = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.checkLine(lines[i]);\r\n\t\t\tif (info.text !== '') {\r\n\t\t\t\tinfo.line = i + 1;\r\n\t\t\t\terrlist.push(info);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn errlist;\r\n\t}\r\n\tpublic checkLine(line: string): ErrorInformation {\r\n\t\tthis._tokens = [];\r\n\t\tthis._tokenSaveEnabled = true\r\n\t\tconst parsed = MumpsLineParser.parseLine(line);\r\n\t\tif (parsed.lineLabel) {\r\n\t\t\tthis._splitLabelAndParameters(parsed.lineLabel);\r\n\t\t}\r\n\t\tif (parsed.lineIndentationArray) {\r\n\t\t\tlet position = 0;\r\n\t\t\tif (parsed.lineLeadSpace) {\r\n\t\t\t\tposition += parsed.lineLeadSpace.length;\r\n\t\t\t}\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tposition += parsed.lineLabel.length;\r\n\t\t\t}\r\n\t\t\tthis._pushToken({ name: \".\".repeat(parsed.lineIndentationArray.length), type: TokenType.intendation, position });\r\n\t\t\tthis._intendationLevel = parsed.lineIndentationArray.length\r\n\t\t} else {\r\n\t\t\tthis._intendationLevel = 0;\r\n\t\t}\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (parsed.lineRoutines) {\r\n\t\t\tfor (let i = 0; i < parsed.lineRoutines.length; i++) {\r\n\t\t\t\tconst code = parsed.lineRoutines[i];\r\n\t\t\t\tif (code.mCommand.length > 0) {\r\n\t\t\t\t\tlet cmd = code.mCommand.toUpperCase();\r\n\t\t\t\t\tif (cmd === 'H') {\r\n\t\t\t\t\t\tif (code.mArguments === '') {\r\n\t\t\t\t\t\t\tcmd = 'HALT';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcmd = 'HANG';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (cmd.match(command)) {\r\n\t\t\t\t\t\tlet longcmd = cmd;\r\n\t\t\t\t\t\tif (cmdParams[cmd] === undefined) {\r\n\t\t\t\t\t\t\tlongcmd = cmdExpansions[cmd];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._pushToken({\r\n\t\t\t\t\t\t\tname: code.mCommand,\r\n\t\t\t\t\t\t\ttype: TokenType.keyword,\r\n\t\t\t\t\t\t\tposition: code.cmdPosition,\r\n\t\t\t\t\t\t\tlongName: longcmd,\r\n\t\t\t\t\t\t\tisPostconditioned: code.mPostCondition !== \"\",\r\n\t\t\t\t\t\t\thasArguments: code.mArguments !== \"\"\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (longcmd === undefined) {\r\n\t\t\t\t\t\t\tresult.text = 'Unknown Command';\r\n\t\t\t\t\t\t\tresult.position = code.cmdPosition;\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresult = this._checkCommand(line, longcmd, code);\r\n\t\t\t\t\t\t} catch (result) {\r\n\t\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn { text: 'Invalid Command', position: code.cmdPosition }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (parsed.lineComment) {\r\n\t\t\tthis._pushToken({ name: parsed.lineComment.comment, position: parsed.lineComment.position, type: TokenType.comment });\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tpublic analyzeLine(line: string): LineInformation {\r\n\t\tthis._tokens = [];\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tconst errInfo = this.checkLine(line);\r\n\t\treturn { error: errInfo, tokens: this._tokens, intendationLevel: this._intendationLevel }\r\n\t}\r\n\tpublic analyzeLines(input: string): [string[], LineToken[][], ErrorInformation[], number[]] {\r\n\t\tconst lines = input.split('\\n');\r\n\t\tconst errors: ErrorInformation[] = [];\r\n\t\tconst linetokens: Array<Array<LineToken>> = [];\r\n\t\tconst intendationLevels: number[] = [];\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tlines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\terrors[i] = this.checkLine(lines[i]);\r\n\t\t\tlinetokens[i] = this._tokens;\r\n\t\t\tintendationLevels[i] = this._intendationLevel;\r\n\t\t}\r\n\t\treturn [lines, linetokens, errors, intendationLevels];\r\n\t}\r\n\tpublic expandCompressFile(filename: string, doExpand: boolean): string {\r\n\t\tif (doExpand === undefined) { doExpand = false; }\r\n\t\tlet content: string;\r\n\t\tlet lines: string[] = [];\r\n\t\ttry {\r\n\t\t\tcontent = fs.readFileSync(filename, \"utf8\");\r\n\t\t} catch (err) {\r\n\t\t\tlines[0] = 'File read error: ';\r\n\t\t\treturn lines[0];\r\n\t\t}\r\n\t\tlines = content.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\t//lines[i] = lines[i].replace(/\\r/g, '');\r\n\t\t\tconst info = this.expandCompressLine(lines[i], doExpand);\r\n\t\t\tif (info.errorText !== '') {\r\n\t\t\t\tlines = [];\r\n\t\t\t\tlines[0] = \"Error in Line \" + i + \" : \" + info.errorText;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlines[i] = info.lineText;\r\n\t\t}\r\n\t\treturn lines.join(\"\\n\");\r\n\t}\r\n\tpublic expandCompressLine(line: string, doExpand: boolean): ModifiedLine {\r\n\t\tline = line.replace(/\\r/g, '');\r\n\t\tif (doExpand === false && this.cmdCompressions === undefined) {\r\n\t\t\tthis.cmdCompressions = {};\r\n\t\t\tObject.keys(cmdExpansions).forEach(shortCommand => {\r\n\t\t\t\tthis.cmdCompressions[cmdExpansions[shortCommand]] = shortCommand;\r\n\t\t\t});\r\n\t\t\tthis.funcCompressions = {};\r\n\t\t\tObject.keys(funcExpansions).forEach(shortFunction => {\r\n\t\t\t\tthis.funcCompressions[funcExpansions[shortFunction]] = shortFunction;\r\n\t\t\t});\r\n\t\t\tthis.isvCompressions = {};\r\n\t\t\tObject.keys(isvExpansions).forEach(shortIsv => {\r\n\t\t\t\tthis.isvCompressions[isvExpansions[shortIsv]] = shortIsv;\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst outline: ModifiedLine = { lineText: line, errorText: '' }\r\n\t\tconst errorinfo = this.checkLine(line);\r\n\t\tlet outText = line;\r\n\t\tif (errorinfo.text !== \"\") {\r\n\t\t\toutline.errorText = errorinfo.text;\r\n\t\t} else {\r\n\t\t\tlet posCorrector = 0;\r\n\t\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\t\tconst token = this._tokens[i];\r\n\t\t\t\tif (token.hasOwnProperty(\"longName\")) {\r\n\t\t\t\t\tconst name = token.name;\r\n\t\t\t\t\tlet longName = name;\r\n\t\t\t\t\tconst position = token.position;\r\n\t\t\t\t\tif (doExpand) {\r\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n\t\t\t\t\t\tlongName = token.longName!.toLowerCase();\r\n\t\t\t\t\t\tif (longName[0] === \"$\") {\r\n\t\t\t\t\t\t\tlongName = \"$\" + longName[1].toUpperCase() + longName.substring(2);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlongName = longName[0].toUpperCase() + longName.substring(1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet checkName = name.toUpperCase();\r\n\t\t\t\t\t\tif (name[0] === \"$\") { checkName = name.substring(1); }\r\n\t\t\t\t\t\tif (token.type === TokenType.keyword) {\r\n\t\t\t\t\t\t\tif (this.cmdCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = this.cmdCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.ifunction) {\r\n\t\t\t\t\t\t\tif (this.funcCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.funcCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (token.type === TokenType.sysvariable) {\r\n\t\t\t\t\t\t\tif (this.isvCompressions[checkName] !== undefined) {\r\n\t\t\t\t\t\t\t\tlongName = \"$\" + this.isvCompressions[checkName];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (name.length !== longName.length) {\r\n\t\t\t\t\t\toutText = outText.substring(0, posCorrector + position) + longName + outText.substring(posCorrector + position + name.length);\r\n\t\t\t\t\t\tposCorrector += longName.length - name.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\toutline.lineText = outText;\r\n\t\treturn outline;\r\n\t}\r\n\tpublic static getLabels(text: string): LabelInformation[] {\r\n\t\tconst labels: LabelInformation[] = [];\r\n\t\tconst lines = text.split('\\n');\r\n\t\tfor (let i = 0; i < lines.length; i++) {\r\n\t\t\tconst parsed = MumpsLineParser.parseLine(lines[i]);\r\n\t\t\tif (parsed.lineLabel) {\r\n\t\t\t\tparsed.lineLabel = parsed.lineLabel.replace(\":\", \"\")\r\n\t\t\t\tlabels.push({ name: parsed.lineLabel, line: i });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn labels;\r\n\t}\r\n\tpublic getTokenAt(line: string, position: number): LineToken | undefined {\r\n\t\tthis.checkLine(line);\r\n\t\tlet memPosition = 0\r\n\t\tlet tokenId = -1\r\n\t\tfor (let i = 0; i < this._tokens.length; i++) {\r\n\t\t\tconst token = this._tokens[i];\r\n\t\t\tif (token.position >= memPosition && token.position <= position) {\r\n\t\t\t\tmemPosition = token.position;\r\n\t\t\t\ttokenId = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (tokenId === -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\treturn this._tokens[tokenId];\r\n\t}\r\n\tprivate _checkEntryRefAndPostcondition(line: string, position: number, withParams: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, withParams);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tthis._pushToken({ type: TokenType.argPostcondition, name: \":\", position });\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkEntryRef(line: string, position: number, withParams: boolean, isUserfunction?: boolean): ErrorInformation {\r\n\t\tisUserfunction = isUserfunction === undefined ? false : isUserfunction;\r\n\t\tlet tokentype: TokenType = isUserfunction ? TokenType.exfunction : TokenType.entryref;\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet refString = \"\"\r\n\t\tlet refPosition = position\r\n\t\tthis._tokenSaveEnabled = false\r\n\t\tif (line.substring(result.position).match(entryref) && line.substring(result.position).match(entryref)![0].length > 0) {\r\n\t\t\trefString = line.substring(result.position).match(entryref)![0];\r\n\t\t\tresult.position += refString.length;\r\n\t\t\tconst char = line[result.position]\r\n\t\t\tconst indRoutineString = line.substring(result.position, result.position + 2);\r\n\t\t\tif (!refString.includes(\"^\")) { //No ^ included, so a \"^@\", a \"+\" or a \"(\" has to follow or Entryref is complete\r\n\t\t\t\tif (char === '+') { //Check Label+Offset\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\trefString += char\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\t\trefString += routine\r\n\t\t\t\t\tresult.position += routine.length\r\n\t\t\t\t} else if (indRoutineString === \"^@\") {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t\t\t\trefString += \"^@\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (line[result.position] === '@') { //Check Indirection\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tconst indRoutineString = line.substring(result.position, result.position + 2);\r\n\t\t\tif (line[result.position] === '+') { //Check Label+Offset\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\t//refPosition = result.position\r\n\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\tresult.position += routine.length\r\n\t\t\t\trefString = routine\r\n\t\t\t} else if (indRoutineString === \"^@\") {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t\t\tif (line.substring(result.position, result.position + 2) === \"@(\" && withParams) {\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t}\r\n\t\t\t} else if (indRoutineString === \"@(\" && withParams) {\r\n\t\t\t\tresult.position++\r\n\t\t\t}\r\n\t\t} else if (line[result.position] === '+') { //Check offset without label\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t\t\t\trefPosition = result.position\r\n\t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t\t\t\tresult.position += routine.length\r\n\t\t\t\trefString = routine\r\n\t\t\t} else if (line.substring(result.position, result.position + 2) === \"^@\") {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t\t\tif (line.substring(result.position, result.position + 2) === \"@(\" && withParams) {\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (line.substring(result.position, result.position + 2) === \"^@\") {\r\n\t\t\t//refString = \"^@\"\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position + 2);\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid EntryRef';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\trefString = line.substring(refPosition, result.position)\r\n\t\tthis._tokenSaveEnabled = true\r\n\t\tif (refString.length > 0) {\r\n\t\t\tthis._pushToken({ 'type': tokentype, name: refString, position: refPosition });\r\n\t\t}\r\n\t\tif (line[result.position] === '(' && withParams) {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.eArgument, line, ++result.position, 1);\r\n\t\t}\r\n\t\tif (refString[0] === '&') {\r\n\t\t\ttokentype = TokenType.nonMfunction;\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\t// private _checkEntryRef(line: string, position: number, withParams: boolean, isUserfunction?: boolean): ErrorInformation {\r\n\t// \tisUserfunction = isUserfunction === undefined ? false : isUserfunction;\r\n\t// \tlet tokentype: TokenType = isUserfunction ? TokenType.exfunction : TokenType.entryref;\r\n\t// \tlet result: ErrorInformation = { text: '', position };\r\n\t// \tconst indRoutineString = line.substring(result.position, result.position + 2);\r\n\t// \tif (line[result.position] === '@') { //Check Indirection\r\n\t// \t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t// \t\tif (line[result.position] === '+') { //Check Label+Offset\r\n\t// \t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t// \t\t}\r\n\t// \t\tif (line[result.position] === '^') { //Check if it's a Label like xxx^yyy\r\n\t// \t\t\tif (line[result.position + 1] === '@') { // or a Label xxx^@expr\r\n\t// \t\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t// \t\t\t} else {\r\n\t// \t\t\t\tif (line.substring(result.position).match(entryref)) {\r\n\t// \t\t\t\t\tconst ref = line.substring(result.position).match(entryref)![0];\r\n\t// \t\t\t\t\tresult.position += ref.length;\r\n\t// \t\t\t\t} else {\r\n\t// \t\t\t\t\tresult.text = 'Invalid EntryRef';\r\n\t// \t\t\t\t\tthrow result;\r\n\t// \t\t\t\t}\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t// \t\t\tresult.position++;\r\n\t// \t\t}\r\n\t// \t} else if (indRoutineString === \"^@\") {\r\n\t// \t\tresult.position += 2\r\n\t// \t\tresult = this._evaluateExpression(expressiontype.Atom, line, result.position);\r\n\t// \t} else if (line.substring(result.position).match(entryref)) { //No Indirection and a valid entryref\r\n\r\n\t// \t\tlet ref = line.substring(result.position).match(entryref)![0];\r\n\t// \t\tconst merkpos = result.position;\r\n\t// \t\tresult.position += ref.length;\r\n\t// \t\tconst char = line[result.position];\r\n\t// \t\tif (result.position >= line.length) {\r\n\t// \t\t\tif (ref.length > 0) {\r\n\t// \t\t\t\tif (ref[0] === '&') {\r\n\t// \t\t\t\t\ttokentype = TokenType.nonMfunction;\r\n\t// \t\t\t\t}\r\n\t// \t\t\t\tthis._pushToken({ 'type': tokentype, name: ref, position: merkpos });\r\n\t// \t\t\t\treturn result;\r\n\t// \t\t\t} else {\r\n\t// \t\t\t\tresult.text = 'Missing Entryref';\r\n\t// \t\t\t\tthrow result;\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tif (ref.indexOf('^') === -1 && char === '+') { //Entryref in the form xxx+yyy[^zzz]\r\n\t// \t\t\tconst tokenPosition = this._tokens.length\r\n\t// \t\t\tthis._pushToken({ 'type': tokentype, name: ref, position: merkpos })\r\n\t// \t\t\tconst position = ++result.position\r\n\t// \t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t// \t\t\tref += \"+\" + line.substring(position, result.position);\r\n\t// \t\t\tif (result.position >= line.length) {\r\n\t// \t\t\t\tthis._tokens[tokenPosition] = { 'type': tokentype, name: ref, position: merkpos }\r\n\t// \t\t\t\treturn result\r\n\t// \t\t\t}\r\n\t// \t\t\tif (line.substring(result.position).match(routineref)) {\r\n\t// \t\t\t\tconst routine = line.substring(result.position).match(routineref)![0];\r\n\t// \t\t\t\tref += routine;\r\n\t// \t\t\t\tresult.position += routine.length;\r\n\t// \t\t\t}\r\n\t// \t\t\tthis._tokens[tokenPosition] = { 'type': tokentype, name: ref, position: merkpos }\r\n\t// \t\t} else {\r\n\t// \t\t\tthis._pushToken({ 'type': tokentype, name: ref, position: merkpos });\r\n\t// \t\t}\r\n\t// \t} else {\r\n\t// \t\tresult.text = 'Invalid Entryref';\r\n\t// \t\tthrow result;\r\n\t// \t}\r\n\t// \tif (line[result.position] === '(' && withParams) {\r\n\t// \t\tresult = this._evaluateExpression(expressiontype.eArgument, line, ++result.position, 1);\r\n\t// \t}\r\n\t// \treturn result\r\n\t// }\r\n\tprivate _checkVar(line: string, position: number, globalOk?: boolean, indexOk?: boolean, isExcluded?: boolean): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position, indexFound: false, globalFound: false, indirectionFound: false };\r\n\t\tlet varFound = false;\r\n\t\tglobalOk = globalOk ?? true;\r\n\t\tindexOk = indexOk ?? true;\r\n\t\tisExcluded = isExcluded ?? false;\r\n\t\tif (line[result.position] === '@') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Atom, line, ++result.position);\r\n\t\t\tresult.indirectionFound = true;\r\n\t\t\tvarFound = true;\r\n\t\t\tconst nextChars = line.substring(result.position, result.position + 2)\r\n\t\t\tif (nextChars === '@(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst startString = line.substring(result.position, result.position + 2)\r\n\t\t\tif (line.substring(result.position).match(gvn) || startString === '^|' || startString === '^[') {\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (startString === '^|' || startString === '^[') {\r\n\t\t\t\t\tresult.position += 2\r\n\t\t\t\t\tlet cuttedLine = line\r\n\t\t\t\t\tif (startString === '^[') cuttedLine = this._cutBeforeClosingBrace(line, result.position)\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, cuttedLine, result.position);\r\n\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, cuttedLine, ++result.position);\r\n\t\t\t\t\t\tresult.globalFound = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (startString === '^|' && line[result.position] !== '|' || (startString === '^[' && line[result.position] !== ']')) {\r\n\t\t\t\t\t\tif (startString === '^|') result.text = 'Missing \"|\"';\r\n\t\t\t\t\t\telse result.text = 'Missing \"]\"';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tif (line.substring(result.position).match(lvn)) {\r\n\t\t\t\t\t\tconst global = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\t\t\tthis._pushToken({ name: global, type: TokenType.global, position: result.position });\r\n\t\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst global = line.substring(result.position).match(gvn)![0];\r\n\t\t\t\t\tthis._pushToken({ name: global, type: TokenType.global, position: result.position });\r\n\t\t\t\t\tvarFound = true;\r\n\t\t\t\t\tresult.position += global.length;\r\n\t\t\t\t}\r\n\t\t\t} else if (line.substring(result.position).match(lvn)) {  // local variable found\r\n\t\t\t\tconst local = line.substring(result.position).match(lvn)![0];\r\n\t\t\t\tthis._pushToken({ name: local, type: TokenType.local, position: result.position, isExcludedVariable: isExcluded });\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position += local.length;\r\n\t\t\t} else if (line.substring(result.position, result.position + 2) === '^(') {\r\n\t\t\t\tresult.globalFound = true;\r\n\t\t\t\tif (!globalOk) {\r\n\t\t\t\t\tresult.text = 'Global not allowed here';\r\n\t\t\t\t\tvarFound = false;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tvarFound = true;\r\n\t\t\t\tresult.position++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (varFound && (line[result.position] === '(' || (line.substring(result.position, result.position + 2) === '@(' && result.indirectionFound === true))) {\r\n\t\t\tif (!indexOk) {\r\n\t\t\t\tresult.text = 'Index not allowed here';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position, result.position + 2) === '@(') {\r\n\t\t\t\tresult.position++\r\n\t\t\t}\r\n\t\t\tconst provResult = this._evaluateExpression(expressiontype.Index, line, ++result.position, 1);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tresult.indexFound = true;\r\n\t\t}\r\n\t\tif (!varFound) {\r\n\t\t\tresult.text = 'Name missing';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkBreak(line: string, position: number): ErrorInformation {\r\n\t\t//[expr[:tvexpr][,...]]\r\n\t\tlet result = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKeyword(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(keywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(keywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword.slice(-1) === '=') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for command found';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkOUC(keywords: RegExp, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\t//expr[:(keyword[=expr][:...])][,...]\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = this._checkKeyword(keywords, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (keywords === openkeywords && line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFor(line: string, position: number, argNumber: number): ErrorInformation {\r\n\t\t//[lvn=expr[:numexpr1[:numexpr2]][,...]]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (argNumber > 1) { //If it's not the first Argument the Options are possible: F I=1:2:3,4 or F I=1:2:3,I=4:1:6\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, result.position, false);\r\n\t\t\t\tif (line[provResult.position] === '\"') {\r\n\t\t\t\t\tresult.position = provResult.position + 1;\r\n\t\t\t\t}\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (provResult.text !== \"Name missing\") {\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Missing equal-sign';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\tif (line[result.position] !== ':') {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate static _checkJobKeyword(line: string, position: number): ErrorInformation {\r\n\t\tconst result: ErrorInformation = { text: '', position };\r\n\t\tif (line.substring(result.position).match(jobkeywords)) {\r\n\t\t\tconst keyword = line.substring(result.position).match(jobkeywords)![0];\r\n\t\t\tresult.position += keyword.length;\r\n\t\t\tif (keyword[keyword.length - 1] === '=') {\r\n\t\t\t\tif (line.substring(result.position).match(strlit)) {\r\n\t\t\t\t\tconst stringlit = line.substring(result.position).match(strlit)![0];\r\n\t\t\t\t\tresult.position += stringlit.length;\r\n\t\t\t\t\tif (stringlit.length === 0) {\r\n\t\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.text = 'String literal expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult.text = 'No valid Keyword for JOB Command';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkJob(line: string, position: number): ErrorInformation {\r\n\t\t//entryref[(expr[,...])][:[(keyword[=value][:...])][:numexpr]][,...]\r\n\t\tlet result = this._checkEntryRef(line, position, true);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = MumpsLineParser._checkJobKeyword(line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\tresult = MumpsLineParser._checkJobKeyword(line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') { //Numeric expression for Job-Timeout\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkKill(line: string, position: number): ErrorInformation {\r\n\t\t//[glvn | (lvn[,...]) | *lname | *lvn ]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkLock(line: string, position: number, isLock: boolean): ErrorInformation {\r\n\t\t//[[-|+]nref|(nref[,...])[:numexpr] [,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif ((line[result.position] === '+' || line[result.position] === '-') && isLock) {\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkMerge(line: string, position: number): ErrorInformation {\r\n\t\t//glvn=glvn[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkVar(line, result.position);\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._checkVar(line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkNew(line: string, position: number): ErrorInformation {\r\n\t\t//[[(]lvn[,...][)][,...]]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._pushToken({ name: sysvariable, position: position, type: TokenType.sysvariable, longName, isExcludedVariable: true });\r\n\t\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false, true);\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = true;\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tbraceComplete = false;\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (line.substring(result.position).match(isv)) {\r\n\t\t\t\tconst sysvariable = line.substring(result.position).match(isv)![0];\r\n\t\t\t\tlet longName = sysvariable.toUpperCase();\r\n\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t}\r\n\t\t\t\tthis._pushToken({ name: sysvariable, position: position, type: TokenType.sysvariable, longName, isExcludedVariable: false });\r\n\t\t\t\tresult.position += sysvariable.length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkRead(line: string, position: number): ErrorInformation {\r\n\t\t//(glvn|*glvn|glvn#intexpr)[:numexpr]|strlit|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet starDetected = false;\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult.position++;\r\n\t\t\tstarDetected = true;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\tresult.position = provResult.position;\r\n\t\t\tif (line[result.position] === '#') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (result.text !== '') {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t} catch {\r\n\t\t\tif (starDetected) {\r\n\t\t\t\tresult.text = 'Variable expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tif (mat = line.substring(result.position).match(strlit)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkSet(line: string, position: number): ErrorInformation {\r\n\t\t//setleft=expr | (setleft[,...])=expr | *lvn=lname | aliascontainer[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tlet isBraced = false;\r\n\t\tif (line[result.position] === '*') { //*lvn=lname\r\n\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\tif (line[result.position] !== '=') {\r\n\t\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t\tconst savePosition = ++result.position;\r\n\t\t\ttry {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false);\r\n\t\t\t} catch (varResult) {\r\n\t\t\t\tif (line[savePosition] !== '$') {\r\n\t\t\t\t\tresult.text = \"Local Variable or Aliascontainer expected\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, savePosition)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tisBraced = true;\r\n\t\t\tresult.position++;\r\n\t\t}\r\n\t\tlet indirectionFound = false\r\n\t\tdo {\r\n\t\t\tindirectionFound = false\r\n\t\t\tif (line[result.position] === '@') {\r\n\t\t\t\tindirectionFound = true\r\n\t\t\t\t//result.position++\r\n\t\t\t\ttry { // Is it SET @VAR?\r\n\t\t\t\t\tconst provResult = this._checkVar(line, result.position);\r\n\t\t\t\t\tresult.position = provResult.position;\r\n\t\t\t\t} catch { // It's not Set @VAR, is it Set @Expression?\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t}\r\n\t\t\t\tconst char = line[result.position]\r\n\t\t\t\tif (MumpsLineParser._isEndOfArgument(line, result.position)) {\r\n\t\t\t\t\tif (!isBraced) return result;\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tresult.text = \") expected\"\r\n\t\t\t\t\t\tthrow result\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (char === '=') {\r\n\t\t\t\t\tindirectionFound = false;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (char === ',') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t} else if (mat = line.substring(result.position).match(/^\\$Z?(PIECE|PI|P|EXTRACT|E)\\(/i)) {\r\n\t\t\t\tlet functionname = mat[0].substring(1, mat[0].length - 1).toUpperCase();\r\n\t\t\t\tresult.position += functionname.length + 2\r\n\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\tthis._pushToken({ name: \"$\" + functionname, position: result.position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + funcExpansions[functionname] });\r\n\t\t\t\t\tfunctionname = funcExpansions[functionname];\r\n\t\t\t\t}\r\n\t\t\t\tresult = this._checkFunction(functionname, line, result.position);\r\n\t\t\t} else if (mat = line.substring(result.position).match(isv)) {\r\n\t\t\t\tresult.position += mat[0].length;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, true);\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',' && isBraced) {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ')' && isBraced) {\r\n\t\t\t\tisBraced = false\r\n\t\t\t\tindirectionFound = false\r\n\t\t\t\tresult.position++\r\n\t\t\t}\r\n\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position) && (isBraced || indirectionFound));\r\n\t\tif (line[result.position] !== '=') {\r\n\t\t\tresult.text = 'Equal-Sign expected';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkTstart(line: string, position: number): ErrorInformation {\r\n\t\t//[([lvn...])|lvn|*|][:keyword|(keyword...)]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '(') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] !== ')') {\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ',') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Name';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t} else {\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkVar(line, result.position, false, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '(') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tlet braceComplete = false;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Unecpected Character';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbraceComplete = false;\r\n\t\t\t\t} while (result.position < line.length)\r\n\t\t\t\tif (!braceComplete) {\r\n\t\t\t\t\tresult.text = 'Missing \")\" or Keyword';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._checkKeyword(tstartkeywords, line, result.position);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkView(line: string, position: number): ErrorInformation {\r\n\t\t//keyword[:expr[:...]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\twhile (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWrite(line: string, position: number): ErrorInformation {\r\n\t\t//expr|*intexpr|fcc[,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (line[result.position] === '*') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult = this._checkWriteSocket(line, result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (mat = line.substring(result.position).match(/^(#|!)+/)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tif (line[result.position] === '?') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tif (line[result.position] === '?') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkWriteSocket(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\t\tif (mat = line.substring(result.position).match(/^\\/(EOF|PASS|ACCEPT|LISTEN|L|TLS|WAIT|W)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t\tconst fname = mat![0].toUpperCase();\r\n\t\t\tif (fname === '/EOF') {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] !== '(') {\r\n\t\t\t\tif (!fname.match(/^\\/(LISTEN|L|WAIT|W)/)) {\r\n\t\t\t\t\tresult.text = fname + ' needs Parameter(s)';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\tresult.position++;\r\n\t\t\tlet maxparams = 99;\r\n\t\t\tif (fname === '/LISTEN' || fname === '/L' || fname === '/WAIT' || fname === '/W') {\r\n\t\t\t\tmaxparams = 1;\r\n\t\t\t} else if (fname === '/TLS') {\r\n\t\t\t\tmaxparams = 4;\r\n\t\t\t}\r\n\t\t\tlet paramCount = 0;\r\n\t\t\tlet braceComplete = false;\r\n\t\t\tdo {\r\n\t\t\t\tparamCount++;\r\n\t\t\t\tif (paramCount > maxparams) {\r\n\t\t\t\t\tresult.text = 'More Parameters than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (fname === '/ACCEPT' && paramCount === 1) {\r\n\t\t\t\t\tif (line[result.position] !== '.') {\r\n\t\t\t\t\t\tresult.text = 'Local Variablereference expected (.lvn)';\r\n\t\t\t\t\t\tthrow result\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult = this._checkVar(line, ++result.position, false, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (fname !== '/TLS' || paramCount !== 2 || line[result.position] !== \",\") {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (line[result.position] === ')') {\r\n\t\t\t\t\tbraceComplete = true;\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position))\r\n\t\t\tif (!braceComplete) {\r\n\t\t\t\tresult.text = 'Missing Parameter or \")\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkXecute(line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZbreak(line: string, position: number): ErrorInformation {\r\n\t\t//[-]entryref[:[expr][:intexpr]][,...]\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tif (line[result.position] === '-') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult.position++;\r\n\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t} else {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZprint(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._checkEntryRef(line, ++result.position, false);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkZstep(line: string, position: number): ErrorInformation {\r\n\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\tlet result: ErrorInformation = { text: '', position };\r\n\t\tlet mat: string[] | null;\r\n\r\n\t\tif (mat = line.substring(result.position).match(/^(INTO|OUTOF|OU|OVER|OV)/i)) {\r\n\t\t\tresult.position += mat[0].length;\r\n\t\t} else {\r\n\t\t\tresult.text = 'Invalid ZSTEP Qualifier';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (line[result.position] === ':') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkCommand(line: string, longcmd: string, code: TmpFunction): ErrorInformation {\r\n\t\tconst para = cmdParams[longcmd];\r\n\t\tlet position = code.pcPosition\r\n\t\tconst postcondPossible = para.postcondition;\r\n\t\tconst argFormat = para.parameter;\r\n\t\tlet result: ErrorInformation = { text: '', position: 0 }\r\n\t\tif (!postcondPossible && code.mPostCondition !== '') {\r\n\t\t\tthrow { text: 'Poscondition not allowed', position }\r\n\t\t} else if (code.mPostCondition !== '') {\r\n\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, position);\r\n\t\t}\r\n\t\tposition = code.argPosition;\r\n\t\tif (code.mArguments === '') {\r\n\t\t\tif (argFormat === '' || argFormat[0] === '[') {\r\n\t\t\t\treturn { text: '', position }\r\n\t\t\t} else {\r\n\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position }\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.position = position;\r\n\t\tlet argCount = 0;\r\n\t\tdo {\r\n\t\t\targCount++;\r\n\t\t\tswitch (longcmd) {\r\n\t\t\t\tcase 'BREAK':\r\n\t\t\t\t\tresult = this._checkBreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'CLOSE':\r\n\t\t\t\t\tresult = this._checkOUC(closekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'DO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ELSE':\r\n\t\t\t\t\tif (line !== '') {\r\n\t\t\t\t\t\tthrow { text: 'No Argument expected', position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'FOR':\r\n\t\t\t\t\tresult = this._checkFor(line, result.position, argCount);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'GOTO':\r\n\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'HANG':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'IF':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'JOB':\r\n\t\t\t\t\tresult = this._checkJob(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KILL':\r\n\t\t\t\t\tresult = this._checkKill(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'LOCK':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'MERGE':\r\n\t\t\t\t\tresult = this._checkMerge(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'NEW':\r\n\t\t\t\t\tresult = this._checkNew(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'OPEN':\r\n\t\t\t\t\tresult = this._checkOUC(openkeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'QUIT':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'Quit allows only one Argument'\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (line[result.position] === '*') {\r\n\t\t\t\t\t\t\tresult = this._checkVar(line, ++result.position, false);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'READ':\r\n\t\t\t\t\tresult = this._checkRead(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SET':\r\n\t\t\t\t\tresult = this._checkSet(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TROLLBACK':\r\n\t\t\t\t\tif (argCount > 1) {\r\n\t\t\t\t\t\tresult.text = 'TROLLBACK allows only one Argument'\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TSTART':\r\n\t\t\t\t\tresult = this._checkTstart(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'USE':\r\n\t\t\t\t\tresult = this._checkOUC(usekeywords, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'VIEW':\r\n\t\t\t\t\tresult = this._checkView(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'WRITE':\r\n\t\t\t\t\tresult = this._checkWrite(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'XECUTE':\r\n\t\t\t\t\tresult = this._checkXecute(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZALLOCATE':\r\n\t\t\t\t\tresult = this._checkLock(line, result.position, false);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZBREAK':\r\n\t\t\t\t\tresult = this._checkZbreak(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZCOMPILE':\r\n\t\t\t\t\t// 'abbreviation': 'ZCOM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZDEALLOCATE':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZD',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[nref[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZEDIT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZED',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZGOTO':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkEntryRefAndPostcondition(line, ++result.position, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZG',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[[intexpr][:entryref[:tvexpr]],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHALT':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZHALT',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZHELP':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2],...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZKILL':\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\t// 'abbreviation': 'ZK',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZLINK':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZL',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr1[:expr2][,...]]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZMESSAGE':\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\twhile (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 'abbreviation': 'ZM',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'intexpr[:expr2][:...]'\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZPRINT':\r\n\t\t\t\t\t// 'abbreviation': 'ZP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[entryref[:label[+intexpr]][,...]'\r\n\t\t\t\t\tresult = this._checkZprint(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZRUPDATE':\r\n\t\t\t\t\t// 'abbreviation': 'ZRUP',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'expr[,...]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSHOW':\r\n\t\t\t\t\t// 'abbreviation': 'ZSH',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr[:glvn][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] === ':') {\r\n\t\t\t\t\t\tresult = this._checkVar(line, ++result.position);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSTEP':\r\n\t\t\t\t\t// 'abbreviation': 'ZST',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[keyword[:expr]][,...]'\r\n\t\t\t\t\tresult = this._checkZstep(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZSYSTEM':\r\n\t\t\t\t\t// 'abbreviation': 'ZSY',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[expr][,...]]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTCOMMIT':\r\n\t\t\t\t\t// 'abbreviation': 'ZTC',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': '[intexpr]'\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZTRIGGER':\r\n\t\t\t\t\t// 'abbreviation': 'ZTR',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'gvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position, true, false);\r\n\t\t\t\t\tif (!result.globalFound) {\r\n\t\t\t\t\t\tresult.text = 'Global Variable expected';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWITHDRAW':\r\n\t\t\t\t\t// 'abbreviation': 'ZWI',\r\n\t\t\t\t\t// 'postcondition': true,\r\n\t\t\t\t\t// 'parameter': 'glvn'\r\n\t\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'ZWRITE':\r\n\t\t\t\t\t//'abbreviation': 'ZWR',\r\n\t\t\t\t\t//'postcondition': true,\r\n\t\t\t\t\t//'parameter': '[zwrglvn[,...]]'\r\n\t\t\t\t\t//not separately tested because ZWRITE is for debugging and should not appear in normal code\r\n\t\t\t\t\tresult.position += line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresult.position = line.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line[result.position] === ',') {\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tif (result.position === line.length) {\r\n\t\t\t\t\tif (argFormat !== '' && argFormat[0] !== '[') {\r\n\t\t\t\t\t\tthrow { text: 'Argument for command ' + code.mCommand + \" required\", position: result.position }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (line[result.position] !== undefined) {\r\n\t\t\t\tconst char = line[result.position];\r\n\t\t\t\tif (char === \" \" || char === \"\\t\" || char === \";\") { break; }\r\n\t\t\t\tresult.text = 'Unexpected Character \"' + line[result.position] + '\"';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (result.position < line.length)\r\n\t\treturn result;\r\n\t}\r\n\tprivate _checkFunction(longfunc: string, line: string, position: number): ErrorInformation {\r\n\t\tlet result: ErrorInformation = { text: '', position: position };\r\n\t\tconst params = funcParams[longfunc];\r\n\t\tif (params === undefined) {\r\n\t\t\tresult.text = \"Unknown Function \" + longfunc;\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tconst minArguments = params.minparams !== undefined ? params.minparams : 1;\r\n\t\tconst formats = params.format !== undefined ? params.format.split(',') : undefined;\r\n\t\tlet argCount = 0;\r\n\t\tlongfunc = '$' + longfunc;\r\n\t\tif (minArguments === 0 && line[result.position] === ')') {\r\n\t\t\tresult.position++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tlet format = (formats !== undefined && formats[argCount] !== undefined) ? formats[argCount] : 'expr';\r\n\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\tformat = 'special';\r\n\t\t\t}\r\n\t\t\tif (format === 'glvn' || format === 'gvn' || format === 'glvn(' || format === 'lvn') {\r\n\t\t\t\tresult = this._checkVar(line, result.position);\r\n\t\t\t\tif (format === 'glvn(' && (!result.indexFound && !result.indirectionFound)) {\r\n\t\t\t\t\tresult.text = 'Variable with Index expected for ' + longfunc;\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tif (format === 'lvn' && result.globalFound) {\r\n\t\t\t\t\tresult.text = 'Local variable expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'entryref') {\r\n\t\t\t\tresult = this._checkEntryRef(line, result.position, false);\r\n\t\t\t} else if (format === 'expr') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t} else if (format === \"expr|null\") {\r\n\t\t\t\tif (line[result.position] !== \",\") {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'bool') {\r\n\t\t\t\tif (line[result.position] !== '0' && line[result.position] !== '1') {\r\n\t\t\t\t\tresult.text = '0/1 expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t} else if (format === 'special') {\r\n\t\t\t\tif (longfunc === '$SELECT') {\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t\tif (line[result.position] !== ':') {\r\n\t\t\t\t\t\tresult.text = 'Missing Expression';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult.position++\r\n\t\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, result.position);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\targCount++;\r\n\t\t\tconst char = line[result.position];\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (argCount > params.maxparams) {\r\n\t\t\t\t\tresult.text = 'More Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (char === ')') {\r\n\t\t\t\tif (argCount < minArguments) {\r\n\t\t\t\t\tresult.text = 'Less Arguments for ' + longfunc + ' than expected';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t}\r\n\t\t\t\tresult.position++;\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tresult.text = 'Unxepected character ';\r\n\t\t\t\tthrow result;\r\n\t\t\t}\r\n\t\t} while (!MumpsLineParser._isEndOfArgument(line, result.position));\r\n\r\n\t\treturn result;\r\n\t}\r\n\t// eslint-disable-next-line class-methods-use-this\r\n\tprivate _cutBeforeClosingBrace(line: string, position: number): string {\r\n\t\tlet insideString = false\r\n\t\tfor (let i = position; i < line.length; i++) {\r\n\t\t\tconst char = line[i]\r\n\t\t\tif (char === '\"') insideString = !insideString\r\n\t\t\tif (char === ']' && !insideString) return line.substring(0, i)\r\n\t\t}\r\n\t\treturn line;\r\n\t}\r\n\tprivate _evaluateExpression(exType: number, line: string, position: number, level?: number, pushTokens?: boolean): ErrorInformation {\r\n\t\tlet expressionComplete = false;\r\n\t\tlet startposition = position;\r\n\t\tlevel = level ?? 0;\r\n\t\tpushTokens = pushTokens ?? true\r\n\t\tlet lastExpression = '';\r\n\t\twhile (position < line.length) {\r\n\t\t\tlet char = line.charAt(position);\r\n\t\t\tif (char === '(') {\r\n\t\t\t\tlet subExType = expressiontype.Standard\r\n\t\t\t\tswitch (lastExpression) {\r\n\t\t\t\t\tcase 'ifunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.iArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'exfunction':\r\n\t\t\t\t\t\tsubExType = expressiontype.eArgument;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'pattern':\r\n\t\t\t\t\t\tthrow { text: 'Unecpected \"(\"', position };\r\n\t\t\t\t}\r\n\t\t\t\tconst result = this._evaluateExpression(subExType, line, ++position, level + 1, pushTokens);\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t}\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = result.position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlastExpression = '';\r\n\t\t\tif (char === ')') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (level > 0) {\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t}\r\n\t\t\t\treturn { text: '', position: position };\r\n\t\t\t}\r\n\t\t\tif (char === '.' && (exType === expressiontype.eArgument || exType === expressiontype.Index)) {\r\n\t\t\t\tposition++;\r\n\t\t\t\tconst evalString = line.substring(position);\r\n\t\t\t\tif (evalString.match(lvn)) {\r\n\t\t\t\t\tconst localname = evalString.match(lvn)![0];\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ type: TokenType.local, name: localname, position: position });\r\n\t\t\t\t\tposition += localname.length;\r\n\t\t\t\t\tchar = line.charAt(position);\r\n\t\t\t\t\tif (char !== ',' && char !== ')') {\r\n\t\t\t\t\t\tthrow { text: 'Variablereference must stand alone', position }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (char === ',') {\r\n\t\t\t\tif (!expressionComplete) {\r\n\t\t\t\t\tif (position === startposition && exType === expressiontype.eArgument) {\r\n\t\t\t\t\t\tif (level === 0) {\r\n\t\t\t\t\t\t\treturn { text: '', position: ++position }\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tposition++\r\n\t\t\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\t\t\tstartposition = position;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t\t\t}\r\n\t\t\t\tif (exType === expressiontype.Standard || exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tposition++\r\n\t\t\t\texpressionComplete = false;\r\n\t\t\t\tstartposition = position;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (expressionComplete) {\r\n\t\t\t\tif (exType === expressiontype.Atom) {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t\tif (line.substring(position).match(binoperator)) {\r\n\t\t\t\t\tconst operator = line.substring(position).match(binoperator)![0];\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ name: operator, position: position, type: TokenType.operator });\r\n\t\t\t\t\tposition += operator.length;\r\n\t\t\t\t\texpressionComplete = false;\r\n\t\t\t\t\tif (operator === '?' || operator === \"'?\") {\r\n\t\t\t\t\t\tconst result = this._evaluatePattern(line, position);\r\n\t\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\t\tlastExpression = 'pattern';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn { text: '', position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst evalString = line.substring(position);\r\n\t\t\ttry {\r\n\t\t\t\tconst provResult = this._checkVar(line, position);\r\n\t\t\t\texpressionComplete = true;\r\n\t\t\t\tposition = provResult.position;\r\n\t\t\t} catch (provResult) {\r\n\t\t\t\tif (evalString.substring(0, 2) === '$$') {\r\n\t\t\t\t\tposition += 2;\r\n\t\t\t\t\t// eslint-disable-next-line no-ex-assign\r\n\t\t\t\t\tprovResult = this._checkEntryRef(line, position, true, true);\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t\tposition = provResult.position;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(nonMfunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(nonMfunction)![0];\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ type: TokenType.nonMfunction, name: functionname, position });\r\n\t\t\t\t\tposition += functionname.length;\r\n\t\t\t\t\tlastExpression = 'exfunction'\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(ifunction)) {\r\n\t\t\t\t\tconst functionname = evalString.match(ifunction)![0].substring(1).toUpperCase();\r\n\t\t\t\t\tposition += functionname.length + 2\r\n\t\t\t\t\tlet longName = functionname;\r\n\t\t\t\t\tif (funcExpansions[functionname] !== undefined) {\r\n\t\t\t\t\t\tlongName = funcExpansions[functionname];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ name: \"$\" + functionname, position: position - functionname.length - 2, type: TokenType.ifunction, longName: \"$\" + longName });\r\n\t\t\t\t\tconst result = this._checkFunction(longName, line, position);\r\n\t\t\t\t\tposition = result.position;\r\n\t\t\t\t\tlastExpression = '';\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(isv)) {\r\n\t\t\t\t\tconst specialvarname = evalString.match(isv)![0];\r\n\t\t\t\t\tlet longName = specialvarname.toUpperCase();\r\n\t\t\t\t\tif (isvExpansions[longName.substring(1)] !== undefined) {\r\n\t\t\t\t\t\tlongName = \"$\" + isvExpansions[longName.substring(1)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (pushTokens) this._pushToken({ name: specialvarname, position: position, type: TokenType.sysvariable, longName });\r\n\t\t\t\t\tposition += specialvarname.length\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(numlit) && evalString.match(numlit)![0] !== '') {\r\n\t\t\t\t\tconst numericliteral = evalString.match(numlit)![0];\r\n\t\t\t\t\tthis._pushToken({ name: numericliteral, type: TokenType.number, position });\r\n\t\t\t\t\tposition += numericliteral.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (evalString.match(strlit)) {\r\n\t\t\t\t\tconst stringlit = evalString.match(strlit)![0];\r\n\t\t\t\t\tthis._pushToken({ name: stringlit, type: TokenType.string, position });\r\n\t\t\t\t\tposition += stringlit.length;\r\n\t\t\t\t\texpressionComplete = true;\r\n\t\t\t\t} else if (char.match(unaryoperator)) {\r\n\t\t\t\t\tthis._pushToken({ name: char, type: TokenType.operator, position });\r\n\t\t\t\t\tposition++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow { text: 'Unexpected Character ' + char, position }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (expressionComplete) {\r\n\t\t\tif (level > 0) {\r\n\t\t\t\tthrow { text: 'Missing \")\"', position }\r\n\t\t\t}\r\n\t\t\treturn { text: '', position }\r\n\t\t} else {\r\n\t\t\tthrow { text: 'Incomplete Expression', position };\r\n\t\t}\r\n\t}\r\n\tprivate _pushToken(token: LineToken) {\r\n\t\tif (this._tokenSaveEnabled) this._tokens.push(token)\r\n\t}\r\n\r\n\t/**\r\n * Checks Mumps-patterns, throws error when error found in pattern\r\n * @param line: Line to be analyzed\r\n * @param position: startposition\r\n * @param level: is used for nested Patterns\r\n * @returns ErrorInformation, text empty when no error found, position is set behind pattern\r\n */\r\n\tprivate _evaluatePattern(line: string, position: number, level?: number): ErrorInformation {\r\n\t\tlet result = { text: '', position }\r\n\t\tlet patternComplete = false;\r\n\t\tif (level === undefined) {\r\n\t\t\tlevel = 0;\r\n\t\t}\r\n\t\tdo {\r\n\t\t\tif (line[position] === '@') {\r\n\t\t\t\tresult = this._evaluateExpression(expressiontype.Standard, line, ++position);\r\n\t\t\t\tpatternComplete = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (line.substring(result.position).match(repititionCount)) {\r\n\t\t\t\tconst repCount = line.substring(result.position).match(repititionCount)![0];\r\n\t\t\t\tif (repCount !== '') {\r\n\t\t\t\t\tpatternComplete = false;\r\n\t\t\t\t\tresult.position += repCount.length;\r\n\t\t\t\t\tif (line.substring(result.position).match(patcode)) {\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tresult.position += line.substring(result.position).match(patcode)![0].length;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t} else if (line[result.position] === '(') {\r\n\t\t\t\t\t\tresult = this._evaluatePattern(line, ++result.position, level + 1);\r\n\t\t\t\t\t\tpatternComplete = true;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\t\tthrow result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (level > 0) {\r\n\t\t\t\t\t\tresult.position++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result;\r\n\t\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else if (line[result.position] === ')') {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\treturn result;\r\n\t\t\t} else if (line[result.position] === ',' && level > 0) {\r\n\t\t\t\tif (!patternComplete) {\r\n\t\t\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\t\t\tthrow result;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.position++;\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (position < line.length)\r\n\t\tif (!patternComplete) {\r\n\t\t\tresult.text = 'Incomplete pattern';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\tif (level > 0) {\r\n\t\t\tresult.text = 'Missing \")\"';\r\n\t\t\tthrow result;\r\n\t\t}\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t//Extract M-Commands.\r\n\t//Assumes inputLine has extracted comments/spacing/indentation.\r\n\tprivate static _extractCommands(inputObject: LineObject): LineObject {\r\n\r\n\t\tlet tmpFunction: TmpFunction;\r\n\t\tconst tmpFunctionArray: Array<TmpFunction> = [];\r\n\t\t//Divide Routines and Arguments.\r\n\t\tconst splitLine = this._splitCommandsAndArguments(inputObject);\r\n\t\t//Loop, even is function, odd is arguments.\r\n\t\tlet i = 0;\r\n\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\twhile (i < splitLine.length) {\r\n\t\t\tif (i % 2 === 0) {\r\n\t\t\t\ttmpFunction.mCommand = splitLine[i].command;\r\n\t\t\t\ttmpFunction.cmdPosition = splitLine[i].position;\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttmpFunction.mArguments = splitLine[i].command;\r\n\t\t\t\ttmpFunction.argPosition = splitLine[i].position;\r\n\r\n\t\t\t\t//Custom handler for trailing argument spacing.\r\n\t\t\t\t//Go until splitline hits a non empty val.\r\n\t\t\t\tconst ii = i + 1;\r\n\t\t\t\twhile (ii < splitLine.length) {\r\n\t\t\t\t\tif (splitLine[ii].command === \"\") {\r\n\t\t\t\t\t\tsplitLine.splice(ii, 1);\r\n\t\t\t\t\t\t//tmpFunction.mArguments = tmpFunction.mArguments + \" \";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t\t\ttmpFunction = { mCommand: '', mPostCondition: '', mArguments: '', cmdPosition: 0, argPosition: 0, pcPosition: 0 }\r\n\t\t\t}\r\n\t\t\ti++\r\n\t\t}\r\n\t\t//Last command doesn't always require parameter, so if odd number of pairs, push it.\r\n\t\tif (splitLine.length % 2 !== 0) {\r\n\t\t\ttmpFunction.mCommand = splitLine[splitLine.length - 1].command;\r\n\t\t\ttmpFunction.cmdPosition = splitLine[splitLine.length - 1].position;\r\n\t\t\ttmpFunction.mArguments = '';\r\n\t\t\ttmpFunction.argPosition = inputObject.lineExpression!.length;\r\n\t\t\ttmpFunctionArray.push(tmpFunction);\r\n\t\t}\r\n\r\n\r\n\t\t//Extract and output Post Conditionals.\r\n\t\tconst postConditionFunctionArray = MumpsLineParser._extractPostConditional(tmpFunctionArray);\r\n\t\tif (postConditionFunctionArray.length > 0) {\r\n\t\t\tinputObject.lineRoutines = postConditionFunctionArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Comments.\r\n\tprivate static _extractComment(inputObject: LineObject): LineObject {\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\t//Semicolon identifies comments.\r\n\t\tif (inputLine.search(\";\") >= 0) {\r\n\t\t\tlet isInsideString = false;\r\n\t\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\t\t\t\tif (inputLine[i] === \";\") {\r\n\t\t\t\t\tif (!isInsideString) {\r\n\t\t\t\t\t\tinputObject.lineExpression = inputLine.substring(0, i);\r\n\t\t\t\t\t\tinputObject.lineComment = { comment: inputLine.substring(i).substring(1), position: i + inputObject.expressionPosition };\r\n\t\t\t\t\t\treturn inputObject;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\r\n\t//Extract Indentation.\r\n\t//Assumes inputLine has extracted comments/spacing.\r\n\tprivate static _extractIndentation(inputObject: LineObject): LineObject {\r\n\r\n\t\tconst lineIndentationArray: string[] = [];\r\n\t\tlet lineIndentation = 0;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tlet spacer = '';\r\n\t\tlet i = 0;\r\n\t\tfor (i = 0; i <= inputLine.length; i++) {\r\n\t\t\tconst char = inputLine[i];\r\n\t\t\tif (char === \".\") {\r\n\t\t\t\tif (lineIndentation > 0) {\r\n\t\t\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\t\t}\r\n\t\t\t\tlineIndentation++;\r\n\t\t\t\tspacer = '';\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (char === \" \" || char === \"\\t\") {\r\n\t\t\t\tspacer += char;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (lineIndentation > 0) {\r\n\t\t\tlineIndentationArray.push(spacer);\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition! += i;\r\n\t\t\tinputObject.lineIndentationArray = lineIndentationArray;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\tprivate static _extractLabel(inputObject: LineObject): LineObject {\r\n\t\tinputObject.lineLabel = '';\r\n\t\tconst inputLine = inputObject.lineExpression;\r\n\t\tinputObject.lineExpression = '';\r\n\t\tif (inputLine.match(label)) {\r\n\t\t\tinputObject.lineLabel = inputLine.match(label)![0];\r\n\t\t}\r\n\t\tconst position = inputObject.lineLabel.length;\r\n\t\tif (position === inputLine.length) {\r\n\t\t\treturn inputObject\r\n\t\t}\r\n\t\tif (!inputLine.charAt(position).match(/[\\s|;]/)) {\r\n\t\t\tinputObject.errorText = 'Unexpected Character' + inputLine.charAt(position);\r\n\t\t\tinputObject.errorPosition = position;\r\n\t\t\treturn inputObject;\r\n\t\t}\r\n\t\tlet i = 0;\r\n\t\tfor (i = position; i <= inputLine.length; i++) {\r\n\t\t\tif (inputLine[i] !== \" \" && inputLine[i] !== \"\\t\") {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tinputObject.lineLeadSpace = inputLine.substring(position, i);\r\n\t\tif (i !== (inputLine.length)) {\r\n\t\t\tinputObject.lineExpression = inputLine.substring(i);\r\n\t\t\tinputObject.expressionPosition = i;\r\n\t\t}\r\n\t\treturn inputObject;\r\n\t}\r\n\tprivate static _extractPostConditional(tmpFunctionArray: TmpFunction[]): TmpFunction[] {\r\n\t\t//Extracts Post-Conditionals from Routines, used by extractRoutines.\r\n\r\n\t\t//Assign to new variable to truncate Routines.\r\n\t\tconst tmpObject = tmpFunctionArray;\r\n\t\tfor (let i = 0; i < tmpObject.length; i++) {\r\n\t\t\t//Colon indicates Post-Conditionals.\r\n\t\t\tconst tmpIndex = tmpObject[i].mCommand!.indexOf(\":\");\r\n\t\t\tif (tmpIndex > -1) {\r\n\t\t\t\ttmpObject[i].mPostCondition = tmpObject[i].mCommand.substring(tmpIndex + 1);\r\n\t\t\t\ttmpObject[i].mCommand = tmpObject[i].mCommand.substring(0, tmpIndex);\r\n\t\t\t\ttmpObject[i].pcPosition = tmpObject[i].cmdPosition + tmpIndex + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\tprivate static _isEndOfArgument(line: string, position: number): boolean {\r\n\t\tlet isEndOfArgument = false;\r\n\t\tconst char = line[position];\r\n\t\tif (char === undefined || char === \" \" || char === \"\\t\" || char === \";\") { isEndOfArgument = true; }\r\n\t\treturn isEndOfArgument;\r\n\t}\r\n\t/**\r\n * Divde inputString into Label, commands and comments and return corresponding LineObject\r\n * @param inputString\r\n * @returns LineObject\r\n */\r\n\tpublic static parseLine(inputString: string): LineObject {\r\n\r\n\t\tlet tmpObject: LineObject = { lineExpression: inputString, expressionPosition: 0 };\r\n\r\n\t\t//Parsing must be performed sequentially.\r\n\t\ttmpObject = MumpsLineParser._extractLabel(tmpObject);\r\n\t\tif (tmpObject.errorText) {\r\n\t\t\treturn tmpObject;\r\n\t\t}\r\n\t\ttmpObject = MumpsLineParser._extractComment(tmpObject);\r\n\t\ttmpObject = MumpsLineParser._extractIndentation(tmpObject);\r\n\t\ttmpObject = MumpsLineParser._extractCommands(tmpObject);\r\n\r\n\t\t//Line Expression is no longer needed.\r\n\t\ttmpObject.lineExpression = '';\r\n\t\treturn tmpObject;\r\n\t}\r\n\r\n\t//Divide commands and arguments into array, used by extractRoutines.\r\n\tprivate static _splitCommandsAndArguments(inputObject: LineObject): LineComand[] {\r\n\r\n\t\tconst lineCommands: LineComand[] = [];\r\n\t\tlet tmpCursor = 0;\r\n\t\tlet isInsideString = false;\r\n\t\tconst inputLine = inputObject.lineExpression!;\r\n\t\tconst start = inputObject.expressionPosition!;\r\n\t\tfor (let i = 0; i < inputLine.length; i++) {\r\n\r\n\t\t\t//Ensure space isn't quoted.\r\n\t\t\tif (inputLine[i] === '\"') {\r\n\t\t\t\tisInsideString = !isInsideString;\r\n\t\t\t}\r\n\t\t\t//Flag spaces/tabs as dividers.\r\n\t\t\tif ((inputLine[i] === \" \" || inputLine[i] === \"\\t\") && !isInsideString) {\r\n\t\t\t\t//If has content, push.\r\n\t\t\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t\t//Otherwise, push empty commands.\r\n\t\t\t\t} else if (inputLine.substring(tmpCursor, i).length === 0 && (inputLine.substring(tmpCursor - 1, tmpCursor) === \" \" || inputLine.substring(tmpCursor - 1, tmpCursor) === \"\\t\")) {\r\n\t\t\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t\t}\r\n\t\t\t\ttmpCursor = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst i = inputLine.length;\r\n\t\tif (inputLine.substring(tmpCursor, i).length > 0) {\r\n\t\t\tlineCommands.push({ command: inputLine.substring(tmpCursor, i), position: start + tmpCursor });\r\n\t\t\t//Gather empty commands from end of line.\r\n\t\t} else if (i === tmpCursor && (inputLine.substring(i - 1, i) === \" \" || inputLine.substring(i - 1, i) === \"/t\")) {\r\n\t\t\tlineCommands.push({ command: '', position: start + tmpCursor });\r\n\t\t}\r\n\t\treturn lineCommands;\r\n\t}\r\n\r\n\tprivate _splitLabelAndParameters(label: string) {\r\n\t\tif (label.indexOf('(') === -1) {\r\n\t\t\tthis._pushToken({ name: label, position: 0, type: TokenType.label });\r\n\t\t} else {\r\n\t\t\tconst labelparts = label.split('(');\r\n\t\t\tconst labeltext = labelparts[0];\r\n\t\t\tthis._pushToken({ name: labeltext, position: 0, type: TokenType.label });\r\n\t\t\tconst parameters = labelparts[1].split(')')[0];\r\n\t\t\tconst parameterVars = parameters.split(',');\r\n\t\t\tlet position = labeltext.length + 1\t\t// Position = lengths of Label + trailing \"(\"\r\n\t\t\tfor (let i = 0; i < parameterVars.length; i++) {\r\n\t\t\t\tconst parameterLength = parameterVars[i].length\r\n\t\t\t\tif (parameterLength > 0) this._pushToken({ name: parameterVars[i], position, type: TokenType.local });\r\n\t\t\t\tposition += parameterLength + 1\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n/*\r\nconst test = new MumpsLineParser();\r\nconst dir = \"x:\\\\\";\r\nlet erg: Array<ErrorInformation> = [];\r\nfs.readdir(dir, function (err, files) {\r\n\t//handling error\r\n\tif (err) {\r\n\t\treturn console.log('Unable to scan directory: ' + err);\r\n\t}\r\n\t//listing all files using forEach\r\n\tfiles.forEach(function (file: string) {\r\n\t\tif (file.substring(file.length - 2) === \".m\") {\r\n\t\t\terg = test.checkFile(dir + file);\r\n\t\t\tconsole.log(file);\r\n\t\t\tif (erg.length) {\r\n\t\t\t\tconsole.log(erg);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\nlet test = new MumpsLineParser();\r\nlet expanded = test.expandCompressFile(\"t:\\\\KTEST93.m\", true);\r\nconsole.log(expanded);\r\nlet lines = expanded.split(\"\\n\");\r\nfor (let i = 0; i < lines.length; i++) {\r\n\tconsole.log(test.expandCompressLine(lines[i], false).lineText);\r\n}\r\n\r\nlet result = test.checkLine('\tS VGZR=$E(YDL(2),5,6)-1 S:VGZR=0 VGZR=12_($E(YDL(2),1,4)-1)');\r\nconsole.log(result);\r\n*/\r\nexport { ifunction, isv, MumpsLineParser }","import * as vscode from 'vscode';\nimport * as fs from 'fs/promises'\nconst lintingFiles = new Set<string>();\n\nexport function isLintingFile(filePath: string): boolean {\n\treturn lintingFiles.has(filePath);\n}\n\nexport function startLintingFile(filePath: string): void {\n\tlintingFiles.add(filePath)\n}\n\nexport function removeLintFileFlag(filePath: string): void {\n\tlintingFiles.delete(filePath)\n}\n\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider';\nexport default class MumpsLinter {\n\tdiagnosticsCollection: vscode.DiagnosticCollection;\n\tconstructor(collection: vscode.DiagnosticCollection) {\n\t\tthis.diagnosticsCollection = collection\n\t}\n\tasync lintAllFiles(token: vscode.CancellationToken): Promise<void> {\n\t\tconst workspaceFolders = vscode.workspace.workspaceFolders;\n\t\tthis.diagnosticsCollection.clear()\n\t\tlintingFiles.clear()\n\t\tconst diagnosticsProvider = new MumpsDiagnosticsProvider(this.diagnosticsCollection);\n\t\tif (!workspaceFolders) {\n\t\t\tvscode.window.showErrorMessage('No workspace folder is open.');\n\t\t\treturn;\n\t\t}\n\t\tconst statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\n\t\tstatusBarItem.text = 'Linting MUMPS files: 0%';\n\t\tstatusBarItem.show();\n\t\tlet processedFiles = 0;\n\t\tlet totalFiles = 0;\n\t\ttry {\n\t\t\tconst lintPromises: Promise<void>[] = [];\n\t\t\tfor (const folder of workspaceFolders) {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tstatusBarItem.text = 'Linting MUMPS files: Abgebrochen';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst mumpsFiles = await vscode.workspace.findFiles(new vscode.RelativePattern(folder, '**/*.m'));\n\t\t\t\ttotalFiles += mumpsFiles.length;\n\t\t\t\tfor (const file of mumpsFiles) {\n\t\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\t\tstatusBarItem.text = 'Linting MUMPS files: Abgebrochen';\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tconst content = await fs.readFile(file.fsPath, 'utf8');\n\t\t\t\t\tlintPromises.push(diagnosticsProvider.updateFileDiagnostics(file, content));\n\t\t\t\t\tprocessedFiles++;\n\t\t\t\t\tstatusBarItem.text = `Linting MUMPS files: ${processedFiles} files, ${((processedFiles / totalFiles) * 100).toFixed(2)}%`;\n\t\t\t\t}\n\t\t\t\tawait Promise.all(lintPromises);\n\t\t\t\tlintingFiles.clear()\n\t\t\t\tvscode.window.showInformationMessage(`Linted ${mumpsFiles.length} MUMPS files.`);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tvscode.window.showInformationMessage('Scan abgeschlossen.');\n\t\t\tsetTimeout(() => {\n\t\t\t\tstatusBarItem.dispose(); // Entfernen des StatusBarItem nach kurzer Zeit\n\t\t\t}, 3000);\n\n\t\t}\n\t}\n}","import * as vscode from 'vscode'\nimport { LineToken, MumpsLineParser, ErrorInformation } from './mumpsLineParser'\nimport { mumpsDiagnostics } from './extension';\nimport MumpsDiagnosticsProvider from './mumpsDiagnosticsProvider'\nexport default class MumpsParseDb {\n\tprivate static instance: MumpsParseDb | null = null\n\tprivate _linetokens: LineToken[][] = []\n\tprivate _lines: string[] = []\n\tprivate _errorInformation: ErrorInformation[] = []\n\tprivate _intendationLevel: number[] = []\n\tprivate static _documentName: string = \"\"\n\tprivate static _documentVersion: number = -1\n\tprivate constructor() {\n\t\tthis._linetokens = []\n\t\tthis._errorInformation = []\n\t\tthis._intendationLevel = []\n\t}\n\tstatic getInstance(document: vscode.TextDocument, noDiagnostics?: boolean): MumpsParseDb {\n\t\tif (!MumpsParseDb.instance) {\n\t\t\tMumpsParseDb.instance = new MumpsParseDb()\n\t\t}\n\t\tif (document.fileName !== MumpsParseDb._documentName || document.version !== MumpsParseDb._documentVersion) {\n\t\t\tMumpsParseDb.instance.updateData(document, noDiagnostics)\n\t\t\tMumpsParseDb._documentName = document.fileName\n\t\t\tMumpsParseDb._documentVersion = document.version\n\t\t}\n\t\treturn MumpsParseDb.instance;\n\t}\n\tstatic getFileInstance(fileName: string, fileContent: string): MumpsParseDb {\n\t\tif (!MumpsParseDb.instance) {\n\t\t\tMumpsParseDb.instance = new MumpsParseDb()\n\t\t}\n\t\tif (fileName !== MumpsParseDb._documentName) {\n\t\t\tMumpsParseDb.instance.updateFromFileData(fileContent)\n\t\t\tMumpsParseDb._documentName = fileName\n\t\t\tMumpsParseDb._documentVersion = 0;\n\t\t}\n\t\treturn MumpsParseDb.instance;\n\t}\n\tpublic updateData(document: vscode.TextDocument, noDiagnostics?: boolean) {\n\t\tif (document.languageId === \"mumps\") {\n\t\t\tthis.updateFromFileData(document.getText())\n\t\t\tif (noDiagnostics !== true) {\n\t\t\t\tnew MumpsDiagnosticsProvider(mumpsDiagnostics).updateDiagnostics(document)\n\t\t\t}\n\t\t}\n\t}\n\tpublic updateFromFileData(fileContent: string) {\n\t\tthis._lines = []\n\t\tthis._linetokens = []\n\t\tthis._errorInformation = [];\n\t\t[this._lines, this._linetokens, this._errorInformation, this._intendationLevel] = new MumpsLineParser().analyzeLines(fileContent)\n\n\t}\n\tpublic getIntendationLevel(line: number): number {\n\t\treturn this._intendationLevel[line]\n\t}\n\tpublic getIntendationLevels(): number[] {\n\t\treturn this._intendationLevel\n\t}\n\tpublic getLine(line: number): string {\n\t\treturn this._lines[line]\n\t}\n\tpublic getLineTokens(line: number): LineToken[] {\n\t\treturn this._linetokens[line]\n\t}\n\tpublic getDocumentTokens(): LineToken[][] {\n\t\treturn this._linetokens\n\t}\n\tpublic getDocumentErrors(): ErrorInformation[] {\n\t\treturn this._errorInformation\n\t}\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length\n\t}\n\tpublic setUnreachable(line: number, tokenId: number, unreachable: boolean) {\n\t\tthis._linetokens[line][tokenId].isUnreachable = unreachable\n\t}\n}","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser } from './mumpsLineParser';\nimport fs = require('fs');\nconst parser = new MumpsLineParser();\nexport default class MumpsReferenceProvider {\n\tprovideReferences(document: vscode.TextDocument, position: vscode.Position): Promise<vscode.Location[] | null | undefined> {\n\t\tconst myToken = parser.getTokenAt(document.lineAt(position).text, position.character);\n\t\tconst result: vscode.Location[] = [];\n\t\tif (myToken !== undefined) {\n\t\t\tlet searchType: TokenType = myToken.type;\n\t\t\tconst searchToken = myToken?.name;\n\t\t\tif (searchType === TokenType.label) {\n\t\t\t\tlet routine = document.fileName.replace(/\\\\/g, '/').split('/').pop();\n\t\t\t\troutine = routine?.split('.')[0].replace('_', '%');\n\t\t\t\tsearchType = TokenType.entryref\n\t\t\t\tconst externalLabel: string = searchToken + \"^\" + routine;\n\t\t\t\t// Check active document for entryrefs\n\t\t\t\tconst docLines: string[] = document.getText().split('\\n');\n\t\t\t\tfor (let i = 0; i < docLines.length; i++) {\n\t\t\t\t\tif (docLines[i].includes(externalLabel) || docLines[i].includes(searchToken)) {\n\t\t\t\t\t\tlet foundPosition = -1;\n\t\t\t\t\t\tfor (; ;) {\n\t\t\t\t\t\t\tconst extPosition = docLines[i].indexOf(externalLabel, foundPosition + 1);\n\t\t\t\t\t\t\tif (extPosition === -1) {\n\t\t\t\t\t\t\t\tfoundPosition = docLines[i].indexOf(searchToken, foundPosition + 1);\n\t\t\t\t\t\t\t\tif (foundPosition === -1) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfoundPosition = extPosition;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst token = parser.getTokenAt(docLines[i], foundPosition + 1)\n\t\t\t\t\t\t\tif (token !== undefined && (token.name === externalLabel || token.name === searchToken) &&\n\t\t\t\t\t\t\t\t(token.type === TokenType.entryref || token.type === TokenType.exfunction)) {\n\t\t\t\t\t\t\t\tresult.push(new vscode.Location(document.uri, new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check all other documents and return result\n\t\t\t\treturn this.getallLabelReferences(result, externalLabel, searchType);\n\t\t\t} else {\n\t\t\t\tif (searchType === TokenType.local || searchType === TokenType.global) {\n\t\t\t\t\treturn this.getallLabelReferences(result, searchToken, searchType);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\t\t} else {\n\t\t\treturn Promise.resolve(result);\n\t\t}\n\t}\n\t/*eslint class-methods-use-this: 0*/\n\tgetallLabelReferences(result: vscode.Location[], searchToken: string, searchType: TokenType): Promise<vscode.Location[]> {\n\t\treturn new Promise(resolve => {\n\t\t\tvscode.workspace.findFiles('*.m').then((files) => {\n\t\t\t\tconst filesToCheck = files.length;\n\t\t\t\tfor (let i = 0; i < filesToCheck; i++) {\n\t\t\t\t\tconst path = files[i].fsPath;\n\t\t\t\t\tfs.readFile(path, 'utf8', (err, content: string) => {\n\t\t\t\t\t\tif (!err) {\n\t\t\t\t\t\t\tif (content.includes(searchToken)) {\n\t\t\t\t\t\t\t\tconst lines = content.split('\\n');\n\t\t\t\t\t\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\t\t\t\t\t\tif (lines[i].includes(searchToken)) {\n\t\t\t\t\t\t\t\t\t\tconst foundPosition = lines[i].indexOf(searchToken);\n\t\t\t\t\t\t\t\t\t\tconst token = parser.getTokenAt(lines[i], foundPosition + 1)\n\t\t\t\t\t\t\t\t\t\tif (token !== undefined && token.name === searchToken &&\n\t\t\t\t\t\t\t\t\t\t\t(token.type === searchType || (token.type === TokenType.exfunction && searchType === TokenType.entryref))) {\n\t\t\t\t\t\t\t\t\t\t\tresult.push(new vscode.Location(vscode.Uri.file(path), new vscode.Range(i, foundPosition, i, foundPosition + token.name.length)));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i === filesToCheck - 1) {\n\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n","import * as vscode from 'vscode';\nimport { LineToken, TokenType, ErrorInformation } from './mumpsLineParser'\nimport MumpsParseDb from './mumpsParseDb';\n\ntype Subroutines = {\n\t[name: string]: {\n\t\tstartLine: number;\n\t\tendLine: number;\n\t};\n};\n\nexport default class MumpsRoutineSorter {\n\tprivate _linetokens: LineToken[][] = [];\n\tprivate _subroutines: Subroutines = {};\n\tprivate _newSortedLines: string[];\n\tconstructor() {\n\t\tconst editor = vscode.window.activeTextEditor\n\t\tif (editor && editor.document && editor.document.languageId === 'mumps') {\n\t\t\tconst parseDb = MumpsParseDb.getInstance(editor.document)\n\t\t\tthis._linetokens = parseDb.getDocumentTokens()\n\t\t\tconst errors: ErrorInformation[] = parseDb.getDocumentErrors()\n\t\t\tconst document = editor.document;\n\t\t\tlet errorFound = false\n\t\t\tthis._newSortedLines = []\n\t\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\t\tif (errors[i].text !== '') {\n\t\t\t\t\terrorFound = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (errorFound) {\n\t\t\t\tvscode.window.showErrorMessage(\"Routine sort aborted - errors found\")\n\t\t\t} else {\n\t\t\t\tlet line = this._lookforNextSubroutineEnd(0)\n\t\t\t\tif (line === -1 || line === this._linetokens.length - 1) {\n\t\t\t\t\tvscode.window.showErrorMessage(\"Routine sort ended - nothing to sort found\")\n\t\t\t\t} else {\n\t\t\t\t\tconst startSortLine = line + 1\n\t\t\t\t\twhile (line !== -1 && line < this._linetokens.length) {\n\t\t\t\t\t\tconst startSubroutine = ++line\n\t\t\t\t\t\tline = this._lookforNextSubroutineEnd(line)\n\t\t\t\t\t\tif (line === -1) break;\n\t\t\t\t\t\tthis._generateSubroutineInfo(startSubroutine, line)\n\t\t\t\t\t}\n\t\t\t\t\tif (Object.keys(this._subroutines).length !== 0) {\n\t\t\t\t\t\tconst subroutineNames = Object.keys(this._subroutines);\n\t\t\t\t\t\tsubroutineNames.sort();\n\t\t\t\t\t\tfor (const name of subroutineNames) {\n\t\t\t\t\t\t\tconst subroutine = this._subroutines[name];\n\t\t\t\t\t\t\tfor (let line = subroutine.startLine; line <= subroutine.endLine; line++) {\n\t\t\t\t\t\t\t\tthis._newSortedLines.push(document.lineAt(line).text)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst lastLineLength = document.lineAt(document.lineCount - 1).text.length\n\t\t\t\t\t\teditor.edit(editBuilder => {\n\t\t\t\t\t\t\teditBuilder.replace(new vscode.Range(startSortLine, 0, document.lineCount - 1, lastLineLength), this._newSortedLines.join(\"\\n\"));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lookforNextSubroutineEnd(line: number): number {\n\t\tfor (let index = line; index < this._linetokens.length; index++) {\n\t\t\tconst tokens = this._linetokens[index];\n\t\t\tlet subroutineEndFound = false;\n\t\t\tfor (let j = 0; j < tokens.length; j++) {\n\t\t\t\tconst token = tokens[j]\n\t\t\t\tif (token.type === TokenType.intendation) {\n\t\t\t\t\tbreak; // Ignore QUIT etc in indentation-levels > 0\n\t\t\t\t}\n\t\t\t\tif (token.type === TokenType.keyword) {\n\t\t\t\t\tconst command = token.longName;\n\t\t\t\t\tif (command === \"FOR\" || command === \"IF\" || command === \"ELSE\") {\n\t\t\t\t\t\tbreak; // Ignore QUIT etc after FOR and IF\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(command === \"QUIT\" ||\n\t\t\t\t\t\t\tcommand === \"GOTO\" ||\n\t\t\t\t\t\t\tcommand === \"ZGOTO\" ||\n\t\t\t\t\t\t\tcommand === \"HALT\" ||\n\t\t\t\t\t\t\tcommand === \"ZHALT\") &&\n\t\t\t\t\t\ttoken.isPostconditioned === false\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (command === \"GOTO\" || command === \"ZGOTO\") {\n\t\t\t\t\t\t\tlet hasPostcondition = false\n\t\t\t\t\t\t\tfor (let k = j + 1; k < tokens.length; k++) {\n\t\t\t\t\t\t\t\tif (tokens[k].type === TokenType.argPostcondition) {\n\t\t\t\t\t\t\t\t\thasPostcondition = true;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t} else if (tokens[k].type === TokenType.keyword) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!hasPostcondition) {\n\t\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsubroutineEndFound = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (subroutineEndFound) {\n\t\t\t\treturn index\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\tprivate _generateSubroutineInfo(startLine: number, endLine: number) {\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tconst tokens = this._linetokens[i]\n\t\t\tif (tokens[0].type === TokenType.label) {\n\t\t\t\tconst label = tokens[0].name\n\t\t\t\tthis._subroutines[label] = { startLine, endLine }\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Remember a new Warning in this._warnings\n\t * @param message Warning message\n\t * @param line Line where th problem was found\n\t * @param startPosition Position inside Line where the problem was found\n\t * @param len Length of variable-name\n\tprivate _addWarning(message: string, line: number, startPosition: number, len: number, severity?) {\n\t\tif (severity === undefined) {\n\t\t\tseverity = vscode.DiagnosticSeverity.Warning;\n\t\t}\n\t\tlet endline = line;\n\t\tlet endPosition = startPosition + len;\n\t\tif (len === -1) { //mark complete rest of line\n\t\t\tendline = line + 1;\n\t\t\tendPosition = 0;\n\t\t}\n\t\tthis._diags.push({\n\t\t\tcode: '',\n\t\t\tmessage,\n\t\t\trange: new vscode.Range(new vscode.Position(line, startPosition), new vscode.Position(endline, endPosition)),\n\t\t\tseverity,\n\t\t\tsource: ''\n\t\t});\n\t}\n\n\tprivate _generateLabelTable(document: vscode.TextDocument) {\n\t\tthis._labelTable = {};\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i);\n\t\t\tconst lineInfo: LineInformation = this._parser.analyzeLine(line.text);\n\t\t\tif (lineInfo.tokens.length > 0 && lineInfo.tokens[0].type === TokenType.label) {\n\t\t\t\tthis._labelTable[lineInfo.tokens[0].name] = i;\n\t\t\t}\n\t\t}\n\t}\n\t*/\n}\n","import * as vscode from 'vscode';\r\nimport { MumpsTokenHelper } from './mumpsTokenData';\r\nexport default class MumpsSignatureHelpProvider {\r\n\t/*eslint class-methods-use-this: 0*/\r\n\tprovideSignatureHelp(document: vscode.TextDocument, position: vscode.Position) {\r\n\t\tconst helper = new MumpsTokenHelper(document, position);\r\n\t\treturn helper.getTokenSignature();\r\n\t}\r\n}\r\n","import * as vscode from 'vscode';\nimport { TokenType, MumpsLineParser, label } from './mumpsLineParser';\nconst parser = new MumpsLineParser();\nimport { definitionsArray } from './language-definitions';\nconst definitions = {};\nimport fs = require('fs');\nimport path = require('path');\nconst Uri = vscode.Uri;\nconst EXTENSIONS = ['.m', '.int', '.zwr', '.M', '.INT', '.ZWR'];\nconst cache: { fsPath: string, text: string } = { fsPath: \"\", text: \"\" };\ninterface LocationInfo { location: vscode.Location, commentText: string, labelLine: string }\ninterface ParameterDefinition {\n\tname: string,\n\ttype: string,\n\tdescription?: string\n\toptional?: boolean\n}\ninterface TokenDefinition {\n\tname: string,\n\ttype: string,\n\tabbreviation?: string,\n\tcommentText?: string,\n\tdescription: string,\n\tparameters?: ParameterDefinition[],\n\treturns?: { type: string }\n\tlocation?: vscode.Location\n}\ninterface TokenData {\n\tname: string,\n\tparameters: vscode.ParameterInformation[],\n\tdescription: string\n}\nfunction addDefinition(name: string, definition: TokenDefinition) {\n\tif (!definitions[name]) {\n\t\tdefinitions[name] = [definition];\n\t} else {\n\t\tdefinitions[name].push(definition);\n\t}\n}\nif (Object.keys(definitions).length === 0) {\n\tfor (const definition of definitionsArray) {\n\t\taddDefinition(definition.name, definition);\n\t\tif (definition.abbreviation) {\n\t\t\taddDefinition(definition.abbreviation, definition);\n\t\t}\n\t}\n}\nexport class MumpsTokenHelper {\n\tprivate _document: vscode.TextDocument;\n\tprivate _position: vscode.Position;\n\tconstructor(document: vscode.TextDocument, position: vscode.Position) {\n\t\tthis._document = document;\n\t\tthis._position = position;\n\t}\n\tprivate _getText(uri: vscode.Uri) {\n\t\tif (uri === this._document.uri) {\n\t\t\treturn this._document.getText();\n\t\t}\n\t\tif (uri.fsPath === cache.fsPath) {\n\t\t\treturn cache.text;\n\t\t}\n\t\ttry {\n\t\t\tcache.text = fs.readFileSync(uri.fsPath, 'utf8');\n\t\t\tcache.fsPath = uri.fsPath;\n\t\t\treturn cache.text;\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\tpublic getTokenSignature(): vscode.SignatureHelp | undefined {\n\t\tconst line = this._document.lineAt(this._position);\n\t\tif (!line) {\n\t\t\treturn;\n\t\t}\n\t\tconst text = line.text;\n\t\tconst myToken = this._getFunctionToken(text);\n\t\tif (myToken === undefined || (myToken.type !== TokenType.ifunction && myToken.type !== TokenType.exfunction)) {\n\t\t\treturn;\n\t\t}\n\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\tif (!definition) {\n\t\t\treturn;\n\t\t}\n\t\tconst help = new vscode.SignatureHelp();\n\t\thelp.signatures = [MumpsTokenHelper.convertDefinition(definition)];\n\t\thelp.activeSignature = 0;\n\t\thelp.activeParameter = MumpsTokenHelper._calculateActiveParameter(line.text, myToken.position + myToken.name.length, this._position.character);\n\t\treturn help;\n\t}\n\tpublic getTokenHoverInfo(): vscode.Hover | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.exfunction || myToken.type === TokenType.ifunction ||\n\t\t\tmyToken.type === TokenType.entryref || myToken.type === TokenType.keyword) {\n\t\t\tconst definition = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (!definition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (definition.parameters) {\n\t\t\t\tdefinition.name += \"(\";\n\t\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tdefinition.name += \",\";\n\t\t\t\t\t}\n\t\t\t\t\tdefinition.name += definition.parameters[i].name;\n\t\t\t\t}\n\t\t\t\tdefinition.name += \")\";\n\t\t\t}\n\t\t\tconst snippet = { language: 'mumps', value: definition.name };\n\t\t\treturn new vscode.Hover([snippet, definition.commentText || definition.description]);\n\t\t}\n\t}\n\tprivate static _calculateActiveParameter(lineText: string, parametersStartIndex: number, insertIndex: number) {\n\t\tlet active = 0;\n\t\tlet depth = 0;\n\t\tlet isInsideString = false;\n\t\tfor (let i = parametersStartIndex + 1; i < insertIndex; i++) {\n\t\t\tconst char = lineText.charAt(i);\n\t\t\tif (char === '(' && !isInsideString) {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === ')' && !isInsideString) {\n\t\t\t\tdepth--;\n\t\t\t} else if (char === '\"') {\n\t\t\t\tisInsideString = !isInsideString;\n\t\t\t} else if (char === ',' && depth === 0 && !isInsideString) {\n\t\t\t\tactive++;\n\t\t\t}\n\t\t}\n\t\treturn active;\n\t}\n\tpublic getTokenRefLocation(): vscode.Location | undefined {\n\t\tconst myToken = parser.getTokenAt(this._document.lineAt(this._position).text, this._position.character);\n\t\tif (myToken === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (myToken.type === TokenType.entryref || myToken.type === TokenType.exfunction) {\n\t\t\tconst tokendata = this.getTokenData(myToken.name, myToken.type);\n\t\t\tif (tokendata) {\n\t\t\t\treturn tokendata.location;\n\t\t\t}\n\t\t}\n\t}\n\n\t// get Information for given function or keyword\n\tpublic getTokenData(functionName: string, functionType: TokenType): TokenDefinition | undefined {\n\t\tif (functionType === TokenType.ifunction || functionType === TokenType.keyword) {\n\t\t\tconst matches = definitions[functionName.toUpperCase()];\n\t\t\tif (matches) {\n\t\t\t\tfor (const definition of matches) {\n\t\t\t\t\tif (definition.type !== 'function' && definition.type !== \"command\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\treturn Object.assign({}, definition);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (functionType === TokenType.exfunction || functionType === TokenType.entryref) {\n\t\t\tconst locationInfo = this.getPositionForLabel(functionName);\n\t\t\tif (locationInfo) {\n\t\t\t\treturn MumpsTokenHelper._extractDefinition(locationInfo);\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t}\n\tpublic static convertDefinition(definition: TokenDefinition): vscode.SignatureInformation {\n\t\tconst data: TokenData = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tparameters: []\n\t\t}\n\t\tdata.description = definition.description;\n\t\tif (definition.parameters) {\n\t\t\tdata.name = definition.name + '(';\n\t\t\tfor (let i = 0; i < definition.parameters.length; i++) {\n\t\t\t\tconst parameter = definition.parameters[i];\n\t\t\t\tlet description = parameter.optional ? '(optional) ' : '';\n\t\t\t\tdescription += parameter.description || parameter.name;\n\t\t\t\tdata.parameters.push(new vscode.ParameterInformation(parameter.name, description));\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += '[';\n\t\t\t\t}\n\t\t\t\tdata.name += (i === 0 ? '' : ',');\n\t\t\t\tdata.name += parameter.name + ':' + parameter.type;\n\t\t\t\tif (parameter.optional) {\n\t\t\t\t\tdata.name += ']';\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata.name += ')';\n\t\t\tif (definition.returns) {\n\t\t\t\tdata.name += ':' + definition.returns;\n\t\t\t}\n\t\t}\n\t\tconst signature = new vscode.SignatureInformation(data.name, data.description);\n\t\tsignature.parameters = data.parameters;\n\t\treturn signature;\n\t}\n\tpublic getPositionForLabel(label: string): LocationInfo | undefined {\n\t\tlet fileUri = this._document.uri;\n\t\tlet nakedLabel = label.split(\"^\")[0];\n\t\tlet offset = 0;\n\t\tlet labelLine = \"\";\n\t\tif (nakedLabel.split(\"+\")[1] !== undefined) {\n\t\t\toffset = parseInt(label.split(\"+\")[1]);\n\t\t\tnakedLabel = nakedLabel.split(\"+\")[0];\n\t\t}\n\t\tif (label.indexOf(\"^\") !== -1) {\n\t\t\tlet fileName = label.split(\"^\")[1];\n\t\t\tif (fileName.charAt(0) === '%') {\n\t\t\t\tfileName = '_' + fileName.substring(1);\n\t\t\t}\n\t\t\tlet fullPath = path.resolve(this._document.uri.fsPath, '../' + fileName);\n\t\t\tfor (const extension of EXTENSIONS) {\n\t\t\t\tconst extendedPath = fullPath + extension;\n\t\t\t\tif (fs.existsSync(extendedPath)) {\n\t\t\t\t\tfullPath = extendedPath;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfileUri = Uri.file(fullPath);\n\t\t}\n\t\tconst lines: string[] = this._getText(fileUri).split(\"\\n\");\n\t\tlet commentText = \"\";\n\t\tlet i = 0;\n\t\tconst labelLength = nakedLabel.length;\n\t\tfor (i = 0; i < lines.length; i++) {\n\t\t\tif (labelLength === 0 || (lines[i].startsWith(nakedLabel) && (lines[i].length === labelLength || lines[i][labelLength].match(/(;|\\s|\\(|:)/) !== null))) {\n\t\t\t\tlabelLine = lines[i];\n\t\t\t\tcommentText += lines[i] + \"\\n\";\n\t\t\t\tfor (let j = i - 1; j > 0; j--) {\n\t\t\t\t\tif (lines[j].length === 0 || lines[j].match(/^\\s*;/)) {\n\t\t\t\t\t\tcommentText += lines[j] + \"\\n\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (commentText.length > 0) {\n\t\t\tcommentText = commentText.split(\"\\n\").reverse().join(\"\\n\")\n\t\t\treturn {\n\t\t\t\tcommentText,\n\t\t\t\tlocation: new vscode.Location(fileUri, new vscode.Position(i + offset, 0)),\n\t\t\t\tlabelLine\n\t\t\t};\n\t\t}\n\t\treturn;\n\t}\n\tprivate static _extractDefinition(locationInfo: LocationInfo): TokenDefinition | undefined {\n\t\tconst definition: TokenDefinition = {\n\t\t\tname: '',\n\t\t\ttype: 'function',\n\t\t\tcommentText: '',\n\t\t\tdescription: '',\n\t\t\treturns: { type: '' },\n\t\t\tlocation: locationInfo.location\n\t\t};\n\t\tconst labelLines = locationInfo.commentText;\n\t\tdefinition.commentText = labelLines\n\t\t//const definitionRegex = /^(\\d+)|([%A-Z][A-Z0-9]*)(\\((,?[%A-Z][A-Z0-9]*)+\\))?/i;\n\t\tconst result = label.exec(locationInfo.labelLine);\n\t\tif (!result) {\n\t\t\treturn;\n\t\t}\n\t\tdefinition.name = result[1];\n\t\tif (labelLines.indexOf(';')) {\n\t\t\tdefinition.commentText = labelLines.substring(labelLines.indexOf(';') + 1);\n\t\t}\n\t\tlet parameterNames: string[] = [];\n\t\tconst parametersByName = {};\n\t\tif (result[3] !== undefined) {\n\t\t\tparameterNames = result[3].substring(1, result[3].length - 1).split(',')\n\t\t\tdefinition.parameters = [];\n\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\tdefinition.parameters.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tname: parameterNames[i],\n\t\t\t\t\t\ttype: 'any'\n\t\t\t\t\t});\n\t\t\t\tparametersByName[parameterNames[i]] = definition.parameters.length - 1;\n\t\t\t}\n\t\t}\n\t\tif (labelLines !== \"\") {\n\t\t\tconst description = labelLines.match(/DESCRIPTION:.*/i)\n\t\t\tif (description !== null) { definition.description = description[0]; }\n\n\t\t\tfor (const param in parametersByName) {\n\t\t\t\tconst paramDescription = labelLines.match(new RegExp(\"\\\\s\" + param + \"(\\\\(.*\\\\))?:.*\", 'i'))\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\tif (paramDescription !== null) { definition.parameters![parametersByName[param]].description = paramDescription[0] }\n\t\t\t}\n\t\t}\n\t\treturn definition;\n\t}\n\tprivate _getFunctionToken(lineText: string) {\n\t\tlet depth = 1;\n\t\tlet index: number;\n\t\tconst linePosition = this._position.character;\n\t\tfor (index = linePosition - 1; index > 0 && depth > 0; index--) {\n\t\t\tconst char = lineText.charAt(index);\n\t\t\tif (char === ')') {\n\t\t\t\tdepth++;\n\t\t\t} else if (char === '(') {\n\t\t\t\tdepth--;\n\t\t\t}\n\t\t}\n\t\tif (depth > 0 || index <= 0) {\n\t\t\treturn;\n\t\t}\n\t\treturn parser.getTokenAt(lineText, index);\n\t}\n}\n\n","module.exports = require(\"vscode\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["Object","defineProperty","exports","value","DebugSession","ErrorDestination","MemoryEvent","InvalidatedEvent","ProgressEndEvent","ProgressUpdateEvent","ProgressStartEvent","CapabilitiesEvent","LoadedSourceEvent","ModuleEvent","BreakpointEvent","ThreadEvent","OutputEvent","ExitedEvent","TerminatedEvent","InitializedEvent","ContinuedEvent","StoppedEvent","CompletionItem","Module","Breakpoint","Variable","Thread","StackFrame","Scope","Source","protocol_1","messages_1","runDebugAdapter_1","url_1","constructor","name","path","id","origin","data","this","sourceReference","adapterData","reference","expensive","variablesReference","i","nm","src","ln","col","source","line","column","ref","indexedVariables","namedVariables","verified","e","setId","label","start","length","Event","reason","threadId","exceptionText","super","body","text","allThreadsContinued","restart","exitCode","output","category","undefined","breakpoint","module","capabilities","progressId","title","message","areas","stackFrameId","memoryReference","offset","count","ProtocolServer","obsolete_debuggerLinesAndColumnsStartAt1","obsolete_isServer","linesAndColumnsStartAt1","_debuggerLinesStartAt1","_debuggerColumnsStartAt1","_debuggerPathsAreURIs","_clientLinesStartAt1","_clientColumnsStartAt1","_clientPathsAreURIs","_isServer","on","shutdown","error","setDebuggerPathFormat","format","setDebuggerLinesStartAt1","enable","setDebuggerColumnsStartAt1","setRunAsServer","run","debugSession","runDebugAdapter","_isRunningInline","setTimeout","process","exit","sendErrorResponse","response","codeOrMessage","variables","dest","User","msg","showUser","Telemetry","sendTelemetry","success","formatPII","sendResponse","runInTerminalRequest","args","timeout","cb","sendRequest","dispatchRequest","request","Response","command","arguments","linesStartAt1","columnsStartAt1","pathFormat","initializeResponse","initializeRequest","launchRequest","attachRequest","disconnectRequest","terminateRequest","restartRequest","setBreakPointsRequest","setFunctionBreakPointsRequest","setExceptionBreakPointsRequest","configurationDoneRequest","continueRequest","nextRequest","stepInRequest","stepOutRequest","stepBackRequest","reverseContinueRequest","restartFrameRequest","gotoRequest","pauseRequest","stackTraceRequest","scopesRequest","variablesRequest","setVariableRequest","setExpressionRequest","sourceRequest","threadsRequest","terminateThreadsRequest","evaluateRequest","stepInTargetsRequest","gotoTargetsRequest","completionsRequest","exceptionInfoRequest","loadedSourcesRequest","dataBreakpointInfoRequest","setDataBreakpointsRequest","readMemoryRequest","writeMemoryRequest","disassembleRequest","cancelRequest","breakpointLocationsRequest","setInstructionBreakpointsRequest","customRequest","_exception","_stack","stack","supportsConditionalBreakpoints","supportsHitConditionalBreakpoints","supportsFunctionBreakpoints","supportsConfigurationDoneRequest","supportsEvaluateForHovers","supportsStepBack","supportsSetVariable","supportsRestartFrame","supportsStepInTargetsRequest","supportsGotoTargetsRequest","supportsCompletionsRequest","supportsRestartRequest","supportsExceptionOptions","supportsValueFormattingOptions","supportsExceptionInfoRequest","supportTerminateDebuggee","supportsDelayedStackTraceLoading","supportsLoadedSourcesRequest","supportsLogPoints","supportsTerminateThreadsRequest","supportsSetExpression","supportsTerminateRequest","supportsDataBreakpoints","supportsReadMemoryRequest","supportsDisassembleRequest","supportsCancelRequest","supportsBreakpointLocationsRequest","supportsClipboardContext","supportsSteppingGranularity","supportsInstructionBreakpoints","supportsExceptionFilterOptions","convertClientLineToDebugger","convertDebuggerLineToClient","convertClientColumnToDebugger","convertDebuggerColumnToClient","convertClientPathToDebugger","clientPath","uri2path","path2uri","convertDebuggerPathToClient","debuggerPath","platform","test","toLowerCase","substr","replace","encodeURI","uri","URL","pathname","toString","sourceUri","s","decodeURIComponent","excludePII","_formatPIIRegexp","match","paramName","hasOwnProperty","Handles","startHandle","START_HANDLE","_handleMap","Map","_nextHandle","reset","create","handle","set","get","dflt","InternalLogger","fs","logger_1","getFormattedTimeString","d","Date","_padZeroes","String","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","minDesiredLength","numberToPad","repeat","slice","logCallback","isServer","beforeExitCallback","dispose","_logCallback","_logToConsole","_minLogLevel","LogLevel","Warn","disposeCallback","signal","code","setup","options","consoleMinLogLevel","_prependTimestamp","prependTimestamp","logFilePath","isAbsolute","handleError","err","sendLog","Error","promises","mkdir","dirname","recursive","log","_logFileStream","createWriteStream","logDateTime","setupShutdownListeners","timeAndDateStamp","getUTCFullYear","getUTCMonth","getUTCDate","Verbose","removeShutdownListeners","removeListener","Promise","resolve","end","level","Stop","logFn","console","warn","trimLastNewline","write","endsInNewline","event","LogOutputEvent","logger","Logger","internalLogger_1","debugSession_1","_pendingLogQ","Log","_write","verbose","_currentLogger","disposeP","push","_logFilePath","_logFilePathFromInit","then","logQ","forEach","item","init","logToConsole","str","LoggingDebugSession","obsolete_logFilePath","inStream","outStream","sendEvent","objectToLog","doNotLogOutput","JSON","stringify","enumerable","loggingDebugSession_1","handles_1","Message","type","seq","request_seq","ee","Emitter","_event","listener","thisArg","result","_listener","_this","fire","call","hasListener","EventEmitter","_sendMessage","_sequence","_pendingRequests","onDidSendMessage","handleMessage","clb","delete","_writableStream","_rawData","Buffer","alloc","_handleData","_emitEvent","resume","stop","_send","keys","timer","clearTimeout","emit","typ","json","byteLength","concat","_contentLength","parse","idx","indexOf","TWO_CRLF","lines","split","pair","Net","port","argv","val","index","array","portMatch","exec","parseInt","createServer","socket","session","listen","stdin","stdout","Subject","waiters","prototype","wait","self","waiter","promise","resolved","noRemove","pos","splice","isFinite","notify","pop","notifyAll","context","MUMPS_MODE","language","scheme","mumpsDiagnostics","vscode","languages","createDiagnosticCollection","storage","storageUri","fsPath","existsSync","mkdirSync","dbFile","subscriptions","registerCompletionItemProvider","wsState","workspaceState","statusBarItem","window","createStatusBarItem","StatusBarAlignment","Left","tooltip","hide","commands","registerCommand","autoSpaceEnter","autoSpaceTab","showInputBox","placeHolder","entryRef","node","globalDirectoryProvider","getMoreNodes","MumpsGlobalProvider","refresh","search","document","range","shortNames","isUppercase","intendation","mumpsCodeActionProvider","generateForLoop","cancellationTokenSource","cancel","CancellationTokenSource","token","show","lintAllFiles","showInformationMessage","debug","registerDebugConfigurationProvider","registerDebugAdapterDescriptorFactory","InlineDebugAdapterFactory","registerHoverProvider","registerDefinitionProvider","registerEvaluatableExpressionProvider","registerSignatureHelpProvider","registerDocumentSymbolProvider","registerDocumentSemanticTokensProvider","MumpsHighlighter","SemanticTokens","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","registerReferenceProvider","registerFoldingRangeProvider","registerCodeActionsProvider","registerTreeDataProvider","getInstance","onDidChangeActiveTextEditor","editor","triggerUpdateDiagnostics","workspace","onDidChangeTextDocument","onDidOpenTextDocument","workspaceFolders","localRoutinesPath","createDebugAdapterDescriptor","DebugAdapterInlineImplementation","collection","removeLintFileFlag","fileName","updateDiagnostics","definitionsArray","activeTextEditor","selection","active","currentLine","lineAt","parsed","MumpsLineParser","parseLine","lineRoutines","lineIndentationArray","edit","editBuilder","charAt","character","insert","with","eb","parsedLine","newLine","Range","renderLine","cmds","mCommand","mArguments","lineContainsNoParamDo","lineComment","lineLabel","inputObject","tmpLine","inputLine","lineLeadSpace","appendLabel","tmpIndentation","appendIndentation","mPostCondition","appendRoutines","appendComment","_document","provideCodeActions","isLintingFile","_parseDb","diagnostics","map","diagnostic","fix","CodeAction","CodeActionKind","Empty","parts","errorCode","_actualParameter","_actualDiagnostic","_removeNewVariable","_varNotNewed","lineTokens","getLineTokens","longName","TokenType","kind","QuickFix","WorkspaceEdit","diagRange","startPosition","endPosition","tokens","lineContent","getLine","positionAfterToken","position","j","keyword","Position","subroutineStartLine","_getSubroutineStart","local","bracketPosition","endReplace","_getfixedNew","lineCount","getLineCount","varStartPosition","comment","isPostconditioned","sort","varString","join","prompt","variableName","variableParts","forToken","setToken","orderToken","quitToken","doToken","toUpperCase","variableStart","indices","indexCount","bracketCounter","char","startIndex","getStartVariable","forLoop","lineText","trimEnd","newEndPosition","Selection","revealRange","startLine","tokenCount","state","doExpand","filename","update","getText","lastLineLength","info","parser","expandCompressLine","errorText","LineStatus","labeldb","_labelsReady","_dbfile","_refreshLabelDB","provideCompletionItems","status","lineStatus","noJumplabel","startString","cmd","pcPosition","substring","lastIndex","lastIndexOf","entryref","jumplabel","argPosition","getLineStatus","_refreshLocalLabels","completionItems","replaceRange","_findLabel","db","labels","routine","routines","writeFileSync","readFile","_labelDB","dbChanged","findFiles","files","_filesToCheck","stat","stats","_checkReady","ms","mtimeMs","size","_refreshFileLabels","writeFile","showErrorMessage","existingLabels","filter","existingLabelsMap","labelsinDocumentChanged","firstLineLabel","has","labelMatch","labelName","labelLine","existingLabel","updatedLabels","labelItem","content","startstring","list","hitlist","localLabels","getLabels","sortText","suchstring","startsWith","routinepart","detail","resolveDebugConfiguration","folder","config","languageId","program","stopOnEntry","hostname","connectState","VariableType","MumpsConnect","_socket","Socket","_breakpointId","_logging","_singleVar","_singleVarContent","_lastError","_commandQueue","_connectState","disconnected","_readedData","_mVars","system","_globals","_mStack","_activeBreakpoints","_breakPoints","_errorLines","_hints","internals","checkEvents","_hostname","_port","reject","connect","_log","executeCommand","waitingforStart","chunk","n","processLine","varname","vartype","waitingForVars","waitingForBreakpoints","waitingForSingleVar","waitingForErrorReport","waitingForHints","waitingForGlobals","variableType","verifyBreakpoints","waitingForSingleVarContent","moreToFollow","indicator","hasChildren","isDefined","writeln","shift","unshift","sendBreakpoint","file","onOff","condition","stopAtStart","requestBreakpoints","step","disconnect","startFrame","endFrame","frames","Array","fileposition","convertMumpsPosition","Math","min","setBreakPoint","breakpoints","confirmedBreakpoints","newBreakpoint","existingBreakpoint","find","bp","clearBreakPoint","bps","findIndex","clearBreakpoints","merk","internalBp","normalizeDrive","getGlobals","searchInGlobal","gblsCompleteListener","getVariables","checkRoutine","ErrorreportReceived","errorLines","includes","searchLabel","lineInfo","analyzeLine","k","getSingleVar","expression","reply","bases","varType","SingleVarReceived","singleVar","singleVarContent","mumpsposition","mumpsstatus","filePosition","positionstring","showNotFound","getLocalRoutinesPath","endsWith","getWworkspaceFolder","filecontent","readFileSync","startlabel","labelRegexp","RegExp","localLabelRegexp","labelFound","MUMPSDIAGNOSTICS","MumpsDebugSession","_variableHandles","_variableBases","_configurationDone","_localScope","_systemScope","_program","_mconnect","THREAD_ID","activeDebugConsole","append","appendLine","completionTriggerCharacters","setLocalRoutinesPath","setMconnect","catch","actualBreakpoints","threads","levels","stk","stackFrames","f","createSource","totalFrames","scopes","insertVariable","varReference","varId","varObject","varparts","varBase","lastVar","lastRef","actualVar","varAnalyze","_checkVars","dummyVar","returnVar","actualReference","continue","varReply","sourceLines","filePath","basename","statVariable","trashlength","description","exceptionId","breakMode","details","typeName","indexcount","klammerpos","countKomma","provideDefinition","MumpsTokenHelper","getTokenRefLocation","labelExists","QuitState","symbols","_linetokens","_intendationLevels","_errorInformation","_diags","_variablesToBeIgnored","_enableVariableCheck","_unreachableCodeWarningEnabled","_subroutines","_labelTable","_routine","endLine","parameters","_level","_lineWithDo","_isBehindQuit","_startUnreachable","_activeSubroutine","_collection","startLintingFile","_uri","configuration","getConfiguration","mumps","variablesToBeIgnoredAtNewCheck","enableVariableCheck","warnIfCodeIsUnreachable","_startUpdate","getDocumentTokens","getDocumentErrors","getIntendationLevels","fill","noQuit","_generateLabelTable","errorInformation","_addWarning","DiagnosticSeverity","_checkLine","_addSymbol","analyzeSubroutine","updateFileDiagnostics","fileContent","getFileInstance","_varStates","_levelExclusiveNew","isParameter","parameterPosition","newLevel","_reduceIntendationLevel","isArray","anyVariablesNewed","containsExclusions","_checkNewed","sysvariable","isExcludedVariable","varName","varState","isExcluded","newedAtLevel","newedAtLine","newedAtPostion","Warning","_checkVariableUsage","key","isUsed","_isIgnoredVariable","isNewed","len","severity","endline","ifFlag","newIntendationLevel","expectedLevel","_removeQuits","_getIntendationPosition","tokenId","_checkUnreachable","hasArguments","hasPostcondition","_labelExists","exists_not","argPostcondition","behindLevelQuit","behindQuit","exfunction","setUnreachable","some","exists","variable","isIgnoredVariable","found","memLine","memPosition","methodRange","Location","SymbolInformation","SymbolKind","Function","provideDocumentSymbols","endPostionLine","InsertPosition","translate","makeSignature","DIVIDERLINE","Signature","parameterString","element","MumpsEvalutableExpressionProvider","provideEvaluatableExpression","getExpression","EvaluatableExpression","isInsideString","_foldingRanges","provideFoldingRanges","parseDb","startSubroutine","_lookforNextSubroutineEnd","_generateFoldingInfo","_separateCommentsandCode","subroutineEndFound","subroutineName","subroutine","commentStart","commentLines","formatDocumentLine","lineNumber","textEdits","TextEdit","endSpace","replacementString","dotPosition","dotCount","spaceCount","provideDocumentFormattingEdits","provideDocumentRangeFormattingEdits","onDidChangeTreeData","_onDidChangeTreeData","instance","searchFor","globalName","searchNode","GlobalNode","TreeItemCollapsibleState","None","getChildren","trailingPara","isNaN","parseFloat","ending","Expanded","mconnect","getTreeItem","globalNodes","nodes","contextValue","isCollapsed","Collapsed","TreeItem","collapsibleState","tokentypes","SemanticTokensLegend","provideDocumentSemanticTokens","documentTokens","tokensBuilder","SemanticTokensBuilder","t","typeString","isUnreachable","build","provideHover","getTokenHoverInfo","lvn","gvn","isv","ifunction","nonMfunction","routineref","numlit","strlit","binoperator","unaryoperator","patcode","repititionCount","openkeywords","usekeywords","closekeywords","jobkeywords","tstartkeywords","cmdExpansions","funcExpansions","isvExpansions","cmdParams","funcParams","_tokens","_intendationLevel","_tokenSaveEnabled","checkFile","errlist","checkLines","checkLine","_splitLabelAndParameters","_pushToken","cmdPosition","longcmd","_checkCommand","intendationLevel","analyzeLines","input","errors","linetokens","intendationLevels","expandCompressFile","cmdCompressions","shortCommand","funcCompressions","shortFunction","isvCompressions","shortIsv","outline","errorinfo","outText","posCorrector","checkName","getTokenAt","_checkEntryRefAndPostcondition","withParams","_checkEntryRef","_evaluateExpression","isUserfunction","tokentype","refString","refPosition","indRoutineString","_checkVar","globalOk","indexOk","indexFound","globalFound","indirectionFound","varFound","cuttedLine","_cutBeforeClosingBrace","global","provResult","_checkBreak","_checkKeyword","keywords","_checkOUC","braceComplete","_isEndOfArgument","_checkFor","argNumber","_checkJobKeyword","stringlit","_checkJob","_checkKill","_checkLock","isLock","_checkMerge","_checkNew","_checkRead","mat","starDetected","_checkSet","isBraced","savePosition","varResult","functionname","_checkFunction","_checkTstart","_checkView","_checkWrite","_checkWriteSocket","fname","maxparams","paramCount","_checkXecute","_checkZbreak","_checkZprint","_checkZstep","para","postcondPossible","postcondition","argFormat","parameter","argCount","longfunc","params","minArguments","minparams","formats","insideString","exType","pushTokens","expressionComplete","startposition","lastExpression","subExType","evalString","localname","operator","_evaluatePattern","specialvarname","numericliteral","number","string","patternComplete","repCount","_extractCommands","tmpFunction","tmpFunctionArray","splitLine","_splitCommandsAndArguments","ii","lineExpression","postConditionFunctionArray","_extractPostConditional","_extractComment","expressionPosition","_extractIndentation","lineIndentation","spacer","_extractLabel","errorPosition","tmpObject","tmpIndex","isEndOfArgument","inputString","lineCommands","tmpCursor","labelparts","labeltext","parameterVars","parameterLength","lintingFiles","add","Set","diagnosticsCollection","clear","diagnosticsProvider","processedFiles","totalFiles","lintPromises","isCancellationRequested","mumpsFiles","RelativePattern","toFixed","all","MumpsParseDb","_lines","noDiagnostics","_documentName","version","_documentVersion","updateData","updateFromFileData","getIntendationLevel","unreachable","provideReferences","myToken","searchType","searchToken","externalLabel","docLines","foundPosition","extPosition","getallLabelReferences","filesToCheck","Uri","errorFound","_newSortedLines","startSortLine","_generateSubroutineInfo","subroutineNames","provideSignatureHelp","getTokenSignature","definitions","EXTENSIONS","cache","addDefinition","definition","abbreviation","_position","_getText","_getFunctionToken","getTokenData","help","SignatureHelp","signatures","convertDefinition","activeSignature","activeParameter","_calculateActiveParameter","snippet","Hover","commentText","parametersStartIndex","insertIndex","depth","tokendata","location","functionName","functionType","matches","assign","locationInfo","getPositionForLabel","_extractDefinition","optional","ParameterInformation","returns","signature","SignatureInformation","fileUri","nakedLabel","fullPath","extension","extendedPath","labelLength","reverse","labelLines","parameterNames","parametersByName","param","paramDescription","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}